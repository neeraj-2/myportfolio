Iconify.ready(function() {
    /**
     * Search form
     */
    (function() {
        var $form = document.getElementById('ic-search-form'),
            $input, $reset, $div, empty;

        if (!$form) {
            return;
        }

        $input = $form.querySelector('input');
        $div = $form.querySelector('.is-form-input');
        if (!$input || !$div) {
            return;
        }

        // Submit form
        $form.querySelector('.is-search-button').addEventListener('click', function(event) {
            event.preventDefault();
            $form.submit();
        });

        // Change text
        empty = true;
        $input.addEventListener('keyup', function(event) {
            var isEmpty = $input.value.trim() === '';
            if (empty === isEmpty) {
                return;
            }
            empty = isEmpty;
            $form.classList.remove('is-search-form--empty');
            $div.classList[empty ? 'add' : 'remove']('is-form-input--empty');
        });

        // Reset form
        $form.querySelector('.is-form-image--reset').addEventListener('click', function(event) {
            event.preventDefault();
            if (empty) {
                return;
            }
            empty = true;
            $div.classList.add('is-form-input--empty');
            $input.value = '';
        });
    })();

    /**
     * Select blocks
     */
    (function() {
        var $nodes = document.querySelectorAll('.autoselect'),
            i;

        function clicked() {
            var range, selection;

            if (window.getSelection && document.createRange) {
                selection = window.getSelection();
                range = document.createRange();
                range.selectNodeContents(this);
                selection.removeAllRanges();
                selection.addRange(range);
            } else if (document.selection && document.body.createTextRange) {
                range = document.body.createTextRange();
                range.moveToElementText(this);
                range.select();
            }
        }

        for (i = 0; i < $nodes.length; i++) {
            $nodes[i].addEventListener('click', clicked.bind($nodes[i]));
        }
    })();
});
Iconify.addCollection({"prefix":"website","icons":{"logo":{"body":"<g fill=\"none\" fill-rule=\"evenodd\"><g stroke=\"#979797\" stroke-linecap=\"round\" stroke-width=\"2\"><path d=\"M8 13l-7 7M8 27l-7-7\"/><g><path d=\"M56 13l7 7M56 27l7-7\"/></g></g><g transform=\"translate(16 4)\"><circle stroke=\"#307594\" stroke-width=\"2\" cx=\"16\" cy=\"16\" r=\"15\"/><rect fill=\"#307594\" x=\"9\" y=\"10\" width=\"3\" height=\"5\" rx=\"1.5\"/><rect fill=\"#307594\" x=\"20\" y=\"10\" width=\"3\" height=\"5\" rx=\"1.5\"/><path d=\"M16 26c5 0 9.545-4.505 9.024-5.5C24.5 19.5 22 23 16 23c-6 0-8-3.5-8.5-2.5S11 26 16 26z\" fill=\"#307594\"/></g><g transform=\"translate(76 1)\"><rect fill=\"#E13E31\" width=\"3\" height=\"3\" rx=\"1.5\"/><path d=\"M1.5 6.5v12M18.596 7.404a6.5 6.5 0 1 0 0 9.192\" stroke=\"#E13E31\" stroke-width=\"3\" stroke-linecap=\"round\"/><circle stroke=\"#E13E31\" stroke-width=\"3\" cx=\"30\" cy=\"12\" r=\"6.5\"/><path d=\"M53.5 18.5V11a5.5 5.5 0 0 0-11 0v7.5\" stroke=\"#E13E31\" stroke-width=\"3\" stroke-linecap=\"round\"/><g transform=\"translate(58)\"><rect fill=\"#AEAEAE\" width=\"3\" height=\"3\" rx=\"1.5\"/><path d=\"M1.5 6.5v12\" stroke=\"#AEAEAE\" stroke-width=\"3\" stroke-linecap=\"round\"/></g><g stroke=\"#AEAEAE\" stroke-linecap=\"round\" stroke-width=\"3\"><path d=\"M73.5 1.5H70c-2.5 0-4.5 2-4.5 4.5v12.5M69 10.5h2.5\"/></g><g stroke=\"#AEAEAE\" stroke-linecap=\"round\" stroke-width=\"3\"><path d=\"M78.5 21.5h4c2 0 4-2 4-4v-12\"/><path d=\"M77.5 5.5v5c0 2.5 1.5 4 4 4H83\"/></g></g><g transform=\"translate(73 24)\"><circle fill=\"#307594\" cx=\"1\" cy=\"13\" r=\"1\"/><path d=\"M7 13A5 5 0 0 0 7 3H4v10h3z\" stroke=\"#307594\" stroke-width=\"2\" stroke-linejoin=\"round\"/><g stroke=\"#307594\" stroke-linecap=\"round\" stroke-width=\"2\"><path d=\"M22 13h-4c-1 0-2-1-2-2V5c0-1 1-2 2-2h4M18 8h3\"/></g><g stroke=\"#307594\" stroke-linecap=\"round\" stroke-width=\"2\"><path d=\"M31 5.5A2.5 2.5 0 1 0 28.5 8M26 10.5A2.5 2.5 0 1 0 28.5 8\"/></g><g transform=\"translate(34 2)\"><path d=\"M1 11V4\" stroke=\"#307594\" stroke-width=\"2\" stroke-linecap=\"round\"/><circle fill=\"#307594\" cx=\"1\" cy=\"1\" r=\"1\"/></g><path d=\"M48 5c-.152-.18-.29-.362-.464-.536a5 5 0 1 0 .463 6.538V9H47M52 13V3l7 10V3\" stroke=\"#307594\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></g></g>","width":164,"height":40},"process-line":{"body":"<line x1=\"1\" y1=\"1\" x2=\"303\" y2=\"1\" stroke=\"currentColor\" stroke-width=\"2\"/>","width":304,"height":2}}});
Iconify.ready(function() {
    /**
     * Rotate section colors
     */
    (function() {
        var maxColor = 11,
            $nodes = document.querySelectorAll('article.doc section');

        if ($nodes) {
            $nodes.forEach(function($node, index) {
                if ($node.classList) {
                    $node.classList.add('color-' + (index % maxColor + 1));
                }
            });
        }
    })();
});
"use strict";

if (self.IconifySearch === void 0) {
	self.IconifySearch = Object.create(null);

	(function (search, global) {
		var local = {
			config: Object.create(null),
			version: '1.0.0'
		};

		
		(function(search, local, global) {
		
			var cache = Object.create(null);
		
			/**
			 * Execute API request
			 *
			 * @param {object|null} obj
			 * @param {string} key Unique key
			 * @param {string} url
			 * @param {function} callback
			 * @param {string} [cacheKey]
			 */
			local.apiRequest = function(obj, key, url, callback, cacheKey) {
				var script;
		
				if (obj) {
					obj.lastCallback = key;
				}
		
				// Load from cache
				if (cacheKey !== void 0 && cache[cacheKey]) {
					window.setTimeout(function() {
						if (obj && obj.lastCallback !== key) {
							return;
						}
						callback(JSON.parse(cache[cacheKey]));
					}, 0);
					return;
				}
		
				// Callback
				search[key] = function(results) {
					if (cacheKey !== void 0) {
						local.setAPICache(cacheKey, results);
					}
					window.setTimeout(function() {
						if (obj && obj.lastCallback !== key) {
							return;
						}
						callback(results);
					}, 0);
				};
		
				// Send API request
				url = search.config.API + url + (url.indexOf('?') === -1 ? '?' : '&') + '&callback=' + encodeURIComponent('IconifySearch.' + key);
				script = document.createElement('script');
				script.setAttribute('type', 'text/javascript');
				script.setAttribute('src', url);
				script.setAttribute('async', 'true');
				document.head.appendChild(script);
			};
		
			/**
			 * Save cache
			 *
			 * @param key
			 * @param data
			 */
			local.setAPICache = function(key, data) {
				cache[key] = JSON.stringify(data);
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			/**
			 * Render UI icon
			 *
			 * @param {string} key
			 * @returns {string}
			 */
			local.renderUIIcon = function(key) {
				var data, html;
		
				if (!search.config.uiIcons[key]) {
					return '';
				}
		
				data = search.config.uiIcons[key];
		
				if (typeof data === 'string') {
					return '<span class="iconify" data-icon="' + data + '"></span>';
				}
		
				if (typeof data === 'object' && data.name) {
					html = '<span class="' + (data.className ? data.className : 'iconify') + '" data-icon="' + data.name + '"';
					Object.keys(data).forEach(function(key) {
						if (key !== 'name' && key !== 'className') {
							html += ' ' + key + '="' + data[key] + '"';
						}
					});
					return html + '></span>';
				}
		
				return '';
			};
		
			/**
			 * Render UI input decoration
			 *
			 * @param {string} key
			 * @returns {string}
			 */
			local.renderUIInputDecoration = function(key) {
				var html, parts;
		
				if (!search.config.uiDecorations[key]) {
					return '';
				}
		
				parts = search.config.uiDecorations[key];
				html = '<div class="is-input-deco is-input-deco--' + key.toLowerCase() + '">';
		
				Object.keys(parts).forEach(function(side) {
					html += '<div class="is-input-deco-part is-input-deco-part--' + side + '">' + parts[side] + '</div>';
				});
		
				html += '</div>';
				return html;
			};
		
			/**
			 * Match prefixes
			 *
			 * @param prefixes
			 * @param list
			 * @return {Array}
			 */
			local.matchPrefixes = function(prefixes, list) {
				var exact = [],
					partial = [],
					results = [],
					total;
		
				if (typeof prefixes === 'string') {
					prefixes = prefixes.split(',');
				}
		
				prefixes.forEach(function(prefix) {
					// partial prefixes: 'fa-'
					if (prefix.slice(-1) === '-') {
						partial.push(prefix);
					} else {
						exact.push(prefix);
					}
				});
				total = partial.length;
		
				list.forEach(function(prefix) {
					var i;
		
					if (exact.indexOf(prefix) !== -1) {
						results.push(prefix);
						return;
					}
		
					for (i = 0; i < total; i++) {
						if (prefix.slice(0, partial[i].length) === partial[i]) {
							results.push(prefix);
							return;
						}
					}
				});
		
				return results;
			};
		})(search, local, global);

		(function(search, local, global) {
		
			// Language variables
			var lang = {
				searchPlaceholder: 'Search all icons...',
				searchPlaceholderPrefixed: 'Search collection...',
				searchPlaceholderPrefixedNamed: 'Search {title}...',
				searchButton: 'Find Icons',
				searchCollectionButton: 'Search {title}',
				searchReset: 'Clear Search',
				statusSearching: 'Searching...',
				statusSearchingMore: 'Loading more search results...',
				statusEmpty: 'No icons to display.',
				statusEmptySearch: 'No icons found. Try different search term.',
				statusMaxResults: 'Too many search results. Showing only first {count} icons.',
				statusLoadingCollection: 'Loading collection...',
				paginationMore: 'Show more search results',
				displayingCollection: 'Displaying collection: {title}',
				displayingIcons0: 'No icons to display.',
				displayingIcons1: 'Displaying 1 icon:',
				displayingIcons: 'Displaying {count} icons:',
				displayingIconsMore: 'Displaying {count} icons (click second page to load more results):',
				displayingCallback: function(count, showMore) {
					switch (count) {
						case 0:
							return lang.displayingIcons0;
						case 1:
							return lang.displayingIcons1;
						default:
							return lang[showMore ? 'displayingIconsMore' : 'displayingIcons'].replace('{count}', showMore ? count / 2 : count);
					}
				},
				iconTooltipName: 'Icon name: {name}',
				iconTooltipCategory: 'Category: {category}',
				iconTooltipCharacter: 'Character: {char}',
				iconTooltipSize: 'Original size: {size}',
				iconTooltip: function(instance, icon, size) {
					var props = [
						lang.iconTooltipName.replace('{name}', icon)
					];
					if (instance.debug) {
						return '';
					}
					if (instance.categories && instance.categories[icon] && instance.categories[icon] !== lang.uncategorized) {
						props.push(lang.iconTooltipCategory.replace('{category}', instance.categories[icon]));
					}
					if (instance.chars && instance.chars[icon]) {
						props.push(lang.iconTooltipCharacter.replace('{char}', instance.chars[icon]));
					}
					if (size !== null) {
						props.push(lang.iconTooltipSize.replace('{size}', size));
					}
		
					return props.join('\n');
				},
				uncategorized: 'Uncategorized',
				rotateTitle: 'Rotate Icon',
				rotate0: 'Cancel rotation',
				rotate: 'Rotate {deg}',
				flipTitle: 'Flip Icon',
				hFlip: 'Flip horizontally',
				hFlipText: 'Horizontal',
				vFlip: 'Flip vertically',
				vFlipText: 'Vertical',
				footerButtons: {
					submit: 'Change',
					cancel: 'Close',
					clear: 'Clear'
				},
				collectionExtra: {
					author: 'by {value}',
					version: 'Version {value}',
					total: '{value} icons',
					license: 'License: {value}'
				},
				poweredBy: 'Powered by <a href="https://iconify.design/">Iconify open source SVG framework</a>.'
			};
		
			// Configuration
			search.config = {
				// Display configuration. Should be changed before creating overlay
				perPage: 48,
				maxCategoryIndex: 10,
				maxResults: 500, // 999 is maximum returned by API
		
				// API URL
				API: 'https://api.iconify.design',
		
				// Language variables
				lang: lang,
		
				// Layout stuff
				compactWidth: 700,
		
				// Decorations. Will be replaced with SVG during build
				uiDecorations: {
					inputSVG: {
						mid: '<svg width="16" height="44" viewBox="0 0 16 44" preserveAspectRatio="none"><path d="M-3 1v42h22V1H-3z" class="is-input-path"/></svg>',
						left: '<svg width="16" height="44" viewBox="0 0 16 44"><path d="M12.594 1L1.139 22l11.455 21H19V1h-6.406z" class="is-input-path"/></svg>',
						right: '<svg width="16" height="44" viewBox="0 0 16 44"><path d="M-3 1v42H7.3l7.636-21L7.3 1H-3z" class="is-input-path"/></svg>'
					},
				},
		
				// Icons used for interface
				uiIcons: {
					searchInput: {
						name: 'arty-animated:16-search',
						className: 'iconify arty-animated',
						'data-flip': 'horizontal'
					},
					searchReset: {
						name: 'arty-animated:16-close',
						className: 'iconify arty-animated'
					},
					searchDefaultButton: {
						name: 'arty-animated:16-search',
						className: 'iconify arty-animated',
						'data-flip': 'horizontal'
					},
					gridFilter: 'arty-animated:24-grid-3-outline',
					gridSelectedFilter: {
						name: 'arty-animated:24-grid-3',
						className: 'iconify arty-animated'
					},
					listFilter: 'arty-animated:24-list-3-outline',
					listSelectedFilter: {
						name: 'arty-animated:24-list-3',
						className: 'iconify arty-animated'
					},
					rotate0: {
						name: 'arty-animated:16-close',
						className: 'iconify arty-animated'
					},
					rotate1: {
						name: 'arty-animated:16-arc-90',
						className: 'iconify arty-animated'
					},
					rotate2: {
						name: 'arty-animated:16-arc-180',
						className: 'iconify arty-animated'
					},
					rotate3: {
						name: 'arty-animated:16-arc-270',
						className: 'iconify arty-animated'
					},
					hFlip: {
						name: 'arty-animated:16-double-arrow-horizontal',
						className: 'iconify arty-animated'
					},
					vFlip: {
						name: 'arty-animated:16-double-arrow-vertical',
						className: 'iconify arty-animated'
					},
					collectionsIndex: {
						name: 'arty-animated:16-chevron-left',
						className: 'iconify arty-animated'
					}
				},
		
				// Functions
				/**
				 * Link for icons. Overwrite with custom function
				 *
				 * @param {string} icon
				 * @returns {string}
				 */
				iconLink: function(icon) {
					var split = icon.split(':');
					if (split.length === 1) {
						split = icon.split('-');
					}
					return 'https://iconify.design/icon-sets/' + split.shift() + '/' + split.join('-') + '.html';
				},
		
				/**
				 * Link for collection. Overwrite with custom function
				 *
				 * @param {string} prefix
				 * @returns {string} Collection link
				 */
				collectionLink: function(prefix) {
					return 'https://iconify.design/icon-sets/' + prefix + '/';
				},
			};
		
			// Get/set language variables
			search.setLang = function(changes) {
				Object.assign(lang, changes);
			};
			search.getLang = function(key) {
				return lang[key];
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			/**
			 * Get empty icon data
			 *
			 * @return {{icon: null, rotate: number, hFlip: boolean, vFlip: boolean}}
			 */
			search.emptyIcon = function() {
				return {
					icon: null,
					rotate: 0,
					hFlip: false,
					vFlip: false,
					extraClasses: ''
				};
			};
		
			/**
			 * Remove prefix from icon
			 *
			 * @param icon
			 * @return {string}
			 */
			local.removePrefix = function(icon) {
				var parts = icon.split(':');
				if (parts.length > 1) {
					parts.shift();
					return parts.join(':');
				}
				parts = icon.split('-');
				parts.shift();
				return parts.join('-');
			};
		
			/**
			 * Split value
			 *
			 * @param {string} value
			 * @param {object} [params]
			 * @return {{icon: null|string, rotate: number, hFlip: boolean, vFlip: boolean}}
			 */
			search.valueFromString = function(value, params) {
				var result = search.emptyIcon();
		
				params = typeof params === 'object' ? params : Object.create(null);
		
				value.trim().split(/\s+/).forEach(function(value, index, values) {
					var parts = value.split(':');
		
					if (values.length === 1) {
						// If it has one item - assume its a value
						if (parts.length === 1) {
							if (params.prefix && !params.valueHasPrefix) {
								result.icon = params.prefix + ':' + value;
								return;
							}
							parts = value.split('-');
							if (parts.length < 2) {
								return;
							}
							result.icon= parts.shift() + ':' + parts.join('-');
							return;
						}
					}
		
					if (parts.length === 1) {
						// Invalid string?
						return;
					}
		
					switch (parts[0]) {
						case 'icon':
							parts.shift();
							if (parts.length === 1) {
								parts = parts[0].split('-');
								if (parts.length > 1) {
									result.icon = parts.shift() + ':' + parts.join('-');
								}
								return;
							}
							if (parts.length === 2) {
								result.icon = parts.join(':');
							}
							return;
		
						case 'icon-rotate':
							if (parts.length !== 2) {
								return;
							}
							switch (parts.pop().toLowerCase()) {
								case '90deg':
								case '25%':
								case '1':
									result.rotate = 1;
									break;
		
								case '180deg':
								case '50%':
								case '2':
									result.rotate = 2;
									break;
		
								case '270deg':
								case '75%':
								case '3':
									result.rotate = 3;
									break;
							}
							return;
		
						case 'icon-flip':
							if (parts.length !== 2) {
								return;
							}
							parts.pop().toLowerCase().split(/[\s,]+/).forEach(function(flip) {
								switch (flip) {
									case 'horizontal':
										result.hFlip = true;
										break;
		
									case 'vertical':
										result.vFlip = true;
								}
							});
							return;
					}
		
					if (parts.length === 2 && parts[0].slice(0, 5) === 'icon-') {
						result.extraClasses += ' ' + parts.join(':');
						return;
					}
		
					// Icon name
					if (parts.length === 2) {
						result.icon = parts.join(':');
						return;
					}
		
					result.extraClasses += ' ' + parts.join(':');
				});
		
				return result;
			};
		
			/**
			 * Convert value to class string
			 *
			 * @param {object} value
			 * @return {string}
			 */
			search.valueToClass = function(value) {
				var result;
				if (!value.icon) {
					return '';
				}
		
				result = 'icon:' + value.icon;
		
				if (value.rotate) {
					result += ' icon-rotate:' + (value.rotate * 90) + 'deg';
				}
				if (value.hFlip) {
					result += ' icon-flip:horizontal' + (value.vFlip ? ',vertical' : '');
				} else if (value.vFlip) {
					result += ' icon-flip:vertical';
				}
		
				if (value.extraClasses) {
					result += ' ' + value.extraClasses.trim();
				}
		
				return result;
			};
		
			/**
			 * Convert value to attributes list
			 *
			 * @param {object} value
			 * @param {string} [classes] Classes to add
			 * @param {boolean} [returnAsString] If true, result will be string
			 * @return {string|object}
			 */
			search.valueToAttributes = function(value, classes, returnAsString) {
				var attr = Object.create(null),
					result;
		
				if (!value.icon) {
					return returnAsString ? '' : attr;
				}
		
				if (typeof classes !== 'string') {
					classes = 'iconify';
				}
				attr['class'] = classes.trim();
				if (value.extraClasses) {
					attr['class'] += (attr['class'].length ? ' ' : '') + value.extraClasses.trim();
				}
		
				attr['data-icon'] = value.icon;
		
				if (value.rotate) {
					attr['data-rotate'] = (value.rotate * 90) + 'deg';
				}
				if (value.hFlip) {
					attr['data-flip'] = 'horizontal' + (value.vFlip ? ',vertical' : '');
				} else if (value.vFlip) {
					attr['data-flip'] = 'vertical';
				}
		
				if (returnAsString) {
					result = '';
					Object.keys(attr).forEach(function(key, index) {
						result += (index ? ' ' : '') + key + '="' + attr[key] + '"';
					});
					return result;
				}
		
				return attr;
			};
		
		})(search, local, global);

		(function(local) {
			var unit = 8;
		
			var shapesData = {
				"0": {
					"paths": {
						"line": {
							"d": "M24 68h8c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12V80c0-6 5-12 12-12h8z"
						}
					},
					"width": 48
				},
				"1": {
					"paths": {
						"line": {
							"d": "M4 68c6 0 12 6 12 12v44H4h24"
						}
					},
					"width": 32
				},
				"2": {
					"paths": {
						"line": {
							"d": "M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12 6-12 12v12h40"
						}
					},
					"width": 48
				},
				"3": {
					"paths": {
						"line": {
							"d": "M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v4c0 6-6 12-12 12h-4 4c6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12"
						}
					},
					"width": 48
				},
				"4": {
					"paths": {
						"line": {
							"d": "M4 68v20c0 6 6 12 12 12h16c6 0 12-6 12-12V68v56"
						}
					},
					"width": 48
				},
				"5": {
					"paths": {
						"line": {
							"d": "M44 68H4v24h28c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12-6-12-12"
						}
					},
					"width": 48
				},
				"6": {
					"paths": {
						"line": {
							"d": "M44 80c0-6-6-12-12-12H16c-6 0-12 6-12 12v32c0 6 6 12 12 12h16c6 0 12-6 12-12v-8c0-6-6-12-12-12H16c-6 0-12 6-12 12"
						}
					},
					"width": 48
				},
				"7": {
					"paths": {
						"line": {
							"d": "M4 68h28c6 0 12 6 12 12 0 4-6.667 18.667-20 44"
						}
					},
					"width": 48
				},
				"8": {
					"paths": {
						"line": {
							"d": "M24 68h8c6 0 12 6 12 12v4c0 6-6 12-12 12 6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12v-4c0-6 6-12 12-12-6 0-12-6-12-12v-4c0-6 6-12 12-12h8z"
						}
					},
					"width": 48
				},
				"9": {
					"paths": {
						"line": {
							"d": "M44 88c0 6-6 12-12 12H16c-6 0-12-6-12-12v-8c0-6 6-12 12-12h16c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12"
						}
					},
					"width": 48
				},
				"|": {
					"paths": {
						"top-arrow": {
							"d": "M4 48l24-24 24 24"
						},
						"bottom-arrow": {
							"d": "M4 144l24 24 24-24"
						},
						"mid-line": {
							"d": "M28 48v96"
						}
					},
					"width": 56
				},
				",": {
					"paths": {
						"line": {
							"d": "M8 124c-2 0-4-2-4-4s2-4 4-4 4 2 4 4v8c0 2-2 6-4 8"
						}
					},
					"width": 16
				},
				".": {
					"paths": {
						"line": {
							"d": "M8 116c2 0 4 2 4 4s-2 4-4 4-4-2-4-4 2-4 4-4z"
						}
					},
					"width": 16
				},
			};
		
			var defaultOptions = {
				line: false,
				animate: false,
				height: 24,
				extra: ''
			};
		
			/**
			 * Generate icon for number
			 *
			 * @param {string} text
			 * @param {object} [options] Options
			 * @return {string}
			 */
			local.numberIcon = function(text, options) {
				var width = unit,
					height = 24 * unit,
					svg = '',
					i, char, item, scale;
		
				// Set options
				if (typeof options !== 'object') {
					options = {};
				}
				Object.keys(defaultOptions).forEach(function(option) {
					if (options[option] === void 0) {
						options[option] = defaultOptions[option];
					}
				});
				scale = height / options.height;
		
				// Add 1 unit for line
				if (options.line) {
					width += unit;
				}
		
				// Parse each character
				for (i = 0; i < text.length; i++) {
					char = text.slice(i, i + 1);
					if (shapesData[char] === void 0) {
						if (char === ' ') {
							width += unit * 2;
						}
						continue;
					}
					if (char === '|') {
						// Force line
						options.line = true;
					}
		
					item = shapesData[char];
					if (width > unit) {
						svg += '<g transform="translate(' + width + ')">'
					}
					Object.keys(item.paths).forEach(function(key) {
						var path = item.paths[key];
						svg += '<path d="' + path.d + '" />';
					});
					if (width > unit) {
						svg += '</g>';
					}
		
					width += item.width + unit;
				}
		
				// Add line
				if (options.line) {
					svg += '<path d="M' + (unit / 2) + ' ' + (unit / 2) + 'h' + (width - unit) + '" />';
					svg += '<path d="M' + (unit / 2) + ' ' + (height - unit / 2) + 'h' + (width - unit) + '" />';
				}
		
				// Wrap in group
				svg = '<g stroke-width="' + unit + '" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">' + svg + '</g>';
		
				// Wrap in <svg>
				svg = '<svg width="' + (width / scale) + '" height="' + (height / scale) + '" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ' + width + ' ' + height + '" ' + options.extra + '>' + svg + '</svg>';
		
				return svg;
			};
		
		})(local);

		(function(search, local, global) {
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var _compact = false,
					obj = {
						// Main stuff
						_destroyed: false,
						_visible: false,
						_loading: true,
						_loaded: false,
						_created: false,
						_$parent: $parent,
						_$root: null,
		
						// Search results
						_allIcons: [],
						_icons: [],
						_categories: null,
						_chars: null,
						_pendingSearch: 0,
		
						// Currently visible items
						_currentView: null,
						_notice: null,
						_visibleIcons: [],
						_pendingIcons: [],
						_icon: search.emptyIcon(),
		
						// Search forms
						_resetVisible: Object.create(null),
						_searchThrottled: false
					},
					defaultParams;
		
				/**
				 * Check width to toggle compact layout
				 */
				obj.checkWidth = function() {
					var width, compact;
		
					if (obj._destroyed) {
						return;
					}
		
					width = Math.min(obj._$parent.offsetWidth, obj._$root.offsetWidth);
					compact = width < search.config.compactWidth;
					if (compact !== _compact) {
						obj._$root.classList[compact ? 'add' : 'remove']('is-root--compact');
						_compact = compact;
					}
				};
		
				/**
				 * Show overlay
				 */
				obj.show = function() {
					if (obj._visible || obj._destroyed) {
						return;
					}
		
					if (obj.sendEvent('show') === false) {
						return;
					}
		
					// Hide other overlays
					local.listOverlays().forEach(function(overlay) {
						if (overlay.visible) {
							overlay.hide();
						}
					});
		
					// Show
					obj._$root.classList.remove('is-root--hidden');
					obj._visible = true;
		
					obj.refresh();
					if (!obj._loaded && !obj._loading) {
						obj.load();
					}
		
					obj.checkWidth();
					setTimeout(function() {
						obj.checkWidth();
					}, 500);
				};
		
				/**
				 * Hide overlay
				 */
				obj.hide = function() {
					if (!obj._created || obj._destroyed || !obj._visible) {
						return;
					}
		
					if (obj.sendEvent('hide') === false) {
						return;
					}
		
					// Hide
					obj._visible = false;
					obj._$root.classList.add('is-root--hidden');
				};
		
				/**
				 * Destroy overlay
				 */
				obj.destroy = function() {
					if (obj._destroyed) {
						return;
					}
		
					obj.sendEvent('destroy');
		
					obj._destroyed = true;
					obj._$root.remove();
					local.removeOverlay(obj);
					document.removeEventListener('IconifyAddedIcons', obj.iconifyEvent);
				};
		
				/**
				 * Send event to caller
				 *
				 * @param event
				 * @param [data]
				 */
				obj.sendEvent = function(event, data) {
					if (obj._callback === null) {
						return;
					}
		
					// Call callback
					return obj._callback.call(null, event, data);
				};
		
				/**
				 * Get icon data for event
				 *
				 * @param icon
				 * @return {object}
				 */
				obj.sendEventIcon = function(icon) {
					var result = Object.assign(Object.create(null), icon),
						prefix = result.icon.split(':');
		
					if (prefix.length < 2) {
						prefix = result.icon.split('-');
					}
					result.prefix = prefix.shift();
					result.name = result.icon.slice(result.prefix.length + 1);
					result.prefixTitle = local.getCollectionTitle(result.prefix, result.prefix);
		
					return result;
				};
		
				/**
				 * Event handler for "IconifyAddedIcons" that is fired when Iconify receives new icons
				 */
				obj.iconifyEvent = function() {
					var updated = [],
						pending = [],
						i;
		
					if (obj.footerRequiresUpdate() !== null) {
						obj.updateFooter();
					}
		
					if (obj._destroyed || !obj._pendingIcons.length) {
						return;
					}
		
					// Find updated icons
					obj._pendingIcons.forEach(function(icon) {
						if (Iconify.iconExists(icon)) {
							updated.push(icon);
						} else {
							pending.push(icon);
						}
					});
		
					if (!updated.length) {
						return;
					}
		
					// Refresh icons list
					obj._pendingIcons = pending;
					obj.updatePendingIcons();
				};
		
				/**
				 * Update value
				 *
				 * @param params
				 */
				obj.updateValue = function(params) {
					var result;
		
					if (params.value === void 0) {
						return;
					}
		
					if (typeof params.value === 'object' && params.value.icon !== void 0) {
						result = Object.assign(Object.create(null), params.value);
					} else {
						result = search.valueFromString(params.value, params);
					}
					if (!result.icon) {
						return;
					}
		
					// Set new values
					obj._icon = result;
		
					// Load icon if needed
					if (obj._icon.icon && !Iconify.iconExists(obj._icon.icon)) {
						Iconify.preloadImages([obj._icon.icon]);
					}
		
					// Refresh
					if (obj._created) {
						obj.refresh();
					}
				};
		
				// Default params
				defaultParams = {
					append: false,
					overlay: true,
					hidePrefix: false,
					fancySearch: true,
					prefix: null,
					prefixes: null,
					defaultPrefix: null,
					callback: null,
					useForm: true,
		
					// Icons list modes
					page: 0,
					perPage: search.config.perPage,
					listView: false,
					showViewModes: true,
					showSize: true,
		
					// Footer
					footer: null,
					poweredBy: true,
		
					// Collections list
					showCollections: false,
					collectionsExtraKey: 'author',
					hideCollectionCategories: false,
					showCollectionHeight: true,
					collectionsContainer: null
				};
		
				// Expand params
				params = typeof params === 'object' ? params : Object.create(null);
				Object.keys(defaultParams).forEach(function(key) {
					obj['_' + key] = params[key] === void 0 ? defaultParams[key] : params[key];
				});
		
				// Create root node
				obj._$root = document.createElement('div');
				obj._$root.className = 'is-root is-root--hidden' + (obj._append ? '' : ' is-root--temporary');
		
				if (!obj._append) {
					obj._updatePlaceholder = true;
					obj._$parent.innerHTML = '<div class="is-root--old">' + obj._$parent.innerHTML + '</div>';
				}
				obj._$parent.appendChild(obj._$root);
		
				// Set value
				obj.updateValue(params);
		
				// Check other parameters
				if (obj._prefix === null) {
					obj._hidePrefix = false;
				}
				obj._defaultPrefix = obj._prefix;
		
				// Add event handler for "IconifyAddedIcons" event that is fired when Iconify receives new icons
				document.addEventListener('IconifyAddedIcons', obj.iconifyEvent);
		
				// Preload selected image or it won't show
				if (obj._icon.icon) {
					Iconify.preloadImages([obj._icon.icon]);
				}
		
				// Load and show
				if (params.show === true || obj._icon.icon || (typeof params.query === 'string' && params.query.length)) {
					setTimeout(function() {
						obj.show();
						obj.load();
					}, 0);
				}
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var overlays = [],
				resizeThrottled = false;
		
			/**
			 * Find overlay
			 *
			 * @param $parent Parent node
			 * @return {object|null}
			 */
			local.findOverlay = function($parent) {
				for (var i = 0; i < overlays.length; i++) {
					if (overlays[i]._$parent === $parent) {
						return overlays[i];
					}
				}
				return null;
			};
		
			/**
			 * Create overlay
			 *
			 * @param $parent
			 * @param params
			 * @return {object}
			 */
			local.createOverlay = function($parent, params) {
				var overlay = local.Overlay($parent, params);
				overlays.push(overlay);
				return overlay;
			};
		
			/**
			 * Remove overlay from list
			 *
			 * @param overlay
			 */
			local.removeOverlay = function(overlay) {
				overlays = overlays.filter(function(item) {
					return item !== overlay;
				});
			};
		
			/**
			 * Get list of active overlays
			 *
			 * @return {Array}
			 */
			local.listOverlays = function() {
				return overlays;
			};
		
			/**
			 * Resize all visible overlays
			 */
			local.resizeOverlays = function() {
				overlays.forEach(function(overlay) {
					if (overlay._visible) {
						overlay.checkWidth();
					}
				});
			};
		
			/**
			 * Add onresize event listener
			 */
			window.addEventListener('resize', function() {
				if (resizeThrottled) {
					return;
				}
				resizeThrottled = true;
				window.setTimeout(function() {
					local.resizeOverlays();
					resizeThrottled = false;
				}, 200);
			});
		
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				obj._activeCategory = null;
				obj._categories = null;
		
				/**
				 * Update category filter
				 */
				obj.updateCategoryFilter = function() {
					var maxPage, index;
		
					// Filter icons
					if (obj._activeCategory === null) {
						obj._icons = obj._allIcons.slice(0);
					} else {
						obj._icons = obj._categories[obj._activeCategory].slice(0);
					}
		
					// Update page
					maxPage = obj.maxPage() - 1;
					if (obj._icon.icon) {
						index = obj._icons.indexOf(obj._icon.icon);
						if (index !== -1) {
							obj._page = Math.floor(index / obj._perPage);
						}
					}
					obj._page = Math.max(Math.min(obj._page, maxPage), 0);
		
					obj.updateCounter();
					obj.updateCategories();
					obj.updatePagination();
					obj.updateIcons();
				};
		
				/**
				 * Show specific category
				 *
				 * @param {string|null} category Null to show all categories or category title
				 */
				obj.showCategory = function(category) {
					if (obj._categories === null) {
						return;
					}
		
					if (category === null) {
						// Show all categories
						if (!obj._activeCategory === null) {
							return;
						}
						obj.setActiveCategory(null);
						return;
					}
		
					// Toggle category
					if (obj._categoryIndex[category] === void 0 || obj._activeCategory === category) {
						return;
					}
		
					obj.setActiveCategory(category);
				};
		
				/**
				 * Update categories HTML
				 */
				obj.updateCategories = function() {
					var html, i, cat, items;
		
					if (obj._categories === null) {
						obj._$nodes.categories.innerHTML = '';
						obj._$nodes.categories.classList.add('is-categories--hidden');
						return;
					}
		
					html = '';
					items = Object.keys(obj._categoryIndex);
					for (i = 0; i < items.length; i++) {
						cat = items[i];
						html += '<a href="javascript:void(0)" class="is-category-' + (obj._activeCategory === null || obj._activeCategory === cat ? 'visible' : 'hidden') + '" data-category="' + cat + '">' + cat + '</a>';
					}
		
					obj._$nodes.categories.innerHTML = html;
					obj._$nodes.categories.classList.remove('is-categories--hidden');
				};
		
				/**
				 * Categories block clicked
				 *
				 * @param event
				 */
				obj.categoriesClicked = function(event) {
					var category;
		
					if (event.target.tagName !== 'A') {
						return;
					}
		
					category = event.target.innerText.trim();
		
					event.preventDefault();
					event.stopPropagation();
		
					// Toggle category
					if (obj._categoryIndex[category] === void 0) {
						return;
					}
		
					obj.setActiveCategory(obj._activeCategory === category ? null : category);
				};
		
				/**
				 * Set active category
				 *
				 * @param category
				 */
				obj.setActiveCategory = function(category) {
					if (obj._currentView && obj._currentView.type === 'search' && obj._prefix) {
						obj.resetSearchInput(obj._collectionsBlockVisible ? 'search2' : 'search');
						obj.restoreCollection();
					}
		
					if (obj._activeCategory !== category) {
						obj._activeCategory = category;
						obj.updateCategoryFilter();
					}
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay,
				requestedCollections = false,
				requestCallbacks = [];
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Display entire collection
				 *
				 * @param {object} data
				 */
				obj.loadCollectionData = function(data) {
					var prefix = data.prefix,
						icons = data.icons;
		
					if (obj._destroyed || !obj._created) {
						return;
					}
		
					obj._currentView = {
						type: 'collection',
						prefix: prefix
					};
					obj._prefix = prefix;
					obj._pendingSearch = 0;
					obj._notice = null;
		
					// Check categories and characters
					obj._chars = data.chars;
					obj._categories = null;
					obj._iconCategories = null;
					obj._categoryIndex = Object.create(null);
					obj._activeCategory = null;
					if (data.categories) {
						obj._categories = Object.create(null);
						obj._iconCategories = Object.create(null);
		
						// Get categories list, index each category
						Object.keys(data.categories).forEach(function(cat, index) {
							obj._categoryIndex[cat] = index % search.config.maxCategoryIndex + 1;
							obj._categories[cat] = data.categories[cat].slice(0);
							data.categories[cat].forEach(function(icon) {
								if (obj._iconCategories[icon] === void 0) {
									obj._iconCategories[icon] = [cat];
								} else {
									obj._iconCategories[icon].push(cat);
								}
							});
						});
		
						// Check for uncategorized icons
						if (data.uncategorized && data.uncategorized.length) {
							obj._categoryIndex[lang.uncategorized] = Object.keys(data.categories).length % search.config.maxCategoryIndex + 1;
							obj._categories[lang.uncategorized] = data.uncategorized.slice(0);
						}
					}
		
					// Send event
					if (obj._defaultPrefix === null) {
						obj.sendEvent('collection', {
							prefix: prefix,
							prefixTitle: local.getCollectionTitle(prefix, prefix)
						});
					}
		
					// Set icons
					obj.updateCollectionBlock();
					obj.resetSearchInput(obj._collectionsBlockVisible ? 'search2' : 'search');
					obj.displayIcons(icons);
					obj.updateFooter(true);
				};
		
				/**
				 * Restore collection
				 */
				obj.restoreCollection = function() {
					if (obj._prefix && local._collectionData && local._collectionData[obj._prefix]) {
						obj.loadCollectionData(local._collectionData[obj._prefix]);
					}
				};
		
				/**
				 * Load and display collection
				 *
				 * @param {string} prefix
				 * @param {function} [callback] Callback to call when collection has been loaded
				 */
				obj.loadCollection = function(prefix, callback) {
					if (local._collectionData && local._collectionData[prefix]) {
						obj.loadCollectionData(local._collectionData[prefix]);
						if (callback) {
							callback();
						}
						return;
					}
		
					obj._notice = lang.statusLoadingCollection;
					obj.updateCounter();
		
					// Load collection from API
					local.apiRequest(obj, 'search_' + prefix.replace(/-/g, '_'), '/list-icons-categorized?prefix=' + prefix, function(results) {
						obj.loadCollectionData(local.saveCollectionData(results));
						if (callback && !obj._destroyed) {
							callback();
						}
					}, 'collection-' + prefix);
				};
		
				/**
				 * Update current collection information block
				 */
				obj.updateCollectionBlock = function() {
					var visible = obj._prefix !== null && obj._defaultPrefix === null,
						wasVisible = obj._collectionsBlockVisible === void 0 ? false : obj._collectionsBlockVisible,
						title;
		
					if (!visible || (title = local.getCollectionTitle(obj._prefix, obj._prefix)) === null) {
						visible = false;
					}
					if (visible === wasVisible) {
						return;
					}
		
					obj._collectionsBlockVisible = visible;
					if (!visible) {
						obj._$nodes.collectionContainer.classList.add('is-current-collection--hidden');
						obj._$nodes.collectionContainer.innerHTML = '';
						obj._$nodes.search2.container.classList.add('is-search-form--hidden');
						obj._$nodes.search2.container.innerHTML = '';
						return;
					}
		
					obj._$nodes.collectionContainer.innerHTML = (
						obj._showCollections ? '<a href="#" class="is-current-collection-back">' + local.renderUIIcon('collectionsIndex') + '</a>' : ''
					) + lang.displayingCollection.replace('{title}', title);
					if (obj._showCollections) {
						obj._$nodes.collectionContainer.querySelector('a').addEventListener('click', obj.resetSearchForm.bind(this, 'search'));
					}
		
					obj._$nodes.collectionContainer.classList.remove('is-current-collection--hidden');
					obj._$nodes.search2.container.classList.remove('is-search-form--hidden');
					obj.rebuildSearchForm(true);
				};
		
				/**
				 * Link for category.
				 *
				 * @param category
				 * @returns {object|null}
				 */
				obj.categoryLink = function(category) {
					return {
						link: 'javascript:void(0)',
						title: category,
						data: category,
						// className is mandatory and must include "is-link-category"
						className: 'is-link-category is-index-' + obj._categoryIndex[category]
					};
				};
		
				return obj;
			};
		
			/**
			 * Functions for getting collection link
			 */
		
			// Cache for collection links
			local._collectionLinksCache = Object.create(null);
		
			/**
			 * Get collection link and title
			 *
			 * @param {string} prefix
			 * @return {object}
			 */
			local.collectionLink = function(prefix) {
				var link, index;
		
				if (local._collectionLinksCache[prefix] !== void 0) {
					return local._collectionLinksCache[prefix];
				}
		
				link = {
					data: prefix,
					title: local.getCollectionTitle(prefix, prefix)
				};
		
				if (link.title === null) {
					return null;
				}
		
				if (local._collectionsInfo && local._collectionsInfo[prefix]) {
					index = local._collectionsInfo[prefix].index === void 0 ?
						Object.keys(local._collectionsInfo).indexOf(prefix) % search.config.maxCategoryIndex :
						local._collectionsInfo[prefix].index;
				} else {
					index = Object.keys(local._collectionLinksCache).length % search.config.maxCategoryIndex;
				}
		
				link.link = search.config.collectionLink(prefix);
				link.className = 'is-link-collection is-index-' + index;
		
				return local._collectionLinksCache[prefix] = link;
			};
		
			/**
			 * Get collection title
			 *
			 * @param prefix
			 * @param defaultValue
			 * @return {string|null}
			 */
			local.getCollectionTitle = function(prefix, defaultValue) {
				// Look in data cache
				if (local._collectionsInfo && local._collectionsInfo[prefix] && local._collectionsInfo[prefix].name !== void 0) {
					return local._collectionsInfo[prefix].name;
				}
		
				// Look in collections cache
				if (local._collectionData && local._collectionData[prefix] && local._collectionData[prefix].title !== void 0) {
					return local._collectionData[prefix].title;
				}
		
				return defaultValue;
			};
		
			/**
			 * Send API request for collections list
			 */
			local.getCollections = function(callback) {
				if (local._collectionsInfo) {
					// Already got data
					if (callback !== void 0) {
						setTimeout(callback, 0);
					}
					return;
				}
		
				if (callback !== void 0) {
					requestCallbacks.push(callback);
				}
		
				if (requestedCollections) {
					return;
				}
				requestedCollections = true;
		
				local.apiRequest(null, 'collections', '/collections', function(results) {
					var callbacks = requestCallbacks;
					local._collectionsInfo = results;
		
					requestCallbacks = [];
					callbacks.forEach(function(callback) {
						callback();
					});
				}, 'collections');
			};
		
		
			/**
			 * Save collection data
			 *
			 * @param {object} data
			 * @returns {object}
			 */
			local.saveCollectionData = function(data) {
				var icons = Object.create(null),
					chars;
		
				// Add prefix to all icons and list all icons
				if (data.uncategorized && data.uncategorized.length) {
					data.uncategorized = data.uncategorized.map(function(icon) {
						return data.prefix + ':' + icon;
					});
					data.uncategorized.forEach(function(icon) {
						icons[icon] = true;
					});
				}
				if (data.categories) {
					Object.keys(data.categories).forEach(function(category) {
						data.categories[category] = data.categories[category].map(function(icon) {
							return data.prefix + ':' + icon;
						});
						data.categories[category].forEach(function(icon) {
							icons[icon] = true;
						});
					});
				}
		
				icons = Object.keys(icons);
				icons.sort(function(a, b) {
					return a.localeCompare(b);
				});
				data.icons = icons;
		
				// Characters map
				if (data.chars) {
					chars = Object.create(null);
					Object.keys(data.chars).forEach(function(char) {
						var icon = data.prefix + ':' + data.chars[char];
						chars[icon] = char;
					});
					data.chars = chars;
				} else {
					data.chars = null;
				}
		
				// Cache collection data
				if (local._collectionData === void 0) {
					local._collectionData = Object.create(null);
				}
				local._collectionData[data.prefix] = data;
		
				return data;
			};
		
			/**
			 * Set collection data cache to avoid requesting it from API
			 *
			 * @param data
			 */
			search.cacheCollectionData = function(data) {
				local.saveCollectionData(data);
			};
		
			/**
			 * Cache collections info
			 *
			 * @param data
			 */
			search.cacheCollectionsInfo = function(data) {
				local._collectionsInfo = data;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Split collections by categories
				 *
				 * @param prefixes
				 * @return {object}
				 */
				function splitByCategories(prefixes) {
					var results = Object.create(null);
		
					prefixes.forEach(function(prefix) {
						var category;
		
						if (local._collectionsInfo[prefix] === void 0) {
							return;
						}
		
						category = local._collectionsInfo[prefix].category === void 0 ? '' : local._collectionsInfo[prefix].category;
						if (results[category] === void 0) {
							results[category] = [];
						}
						results[category].push(prefix);
					});
		
					return results;
				}
		
				// Mark as hidden
				obj._collectionsIndexVisible = false;
		
				/**
				 * Check if collections list can be shown
				 *
				 * @return {*}
				 */
				obj.showBuiltInCollections = function() {
					return obj._showCollections && obj._collectionsContainer === null;
				};
		
				/**
				 * Show collections index
				 */
				obj.showCollectionsIndex = function() {
					var index = 0,
						maxIndex = 13,
						infoLang = lang.collectionExtra[obj._collectionsExtraKey] === void 0 ? '{value}' : lang.collectionExtra[obj._collectionsExtraKey],
						prefixes, showCategories, categories, categorized, html, $nodes, i;
		
					function add(prefix) {
						var item = local._collectionsInfo[prefix],
							link;
		
						html += '<li class="is-collection-block is-collection-block--' + index + '" data-prefix="' + prefix + '">';
						index ++;
						if (index >= maxIndex) {
							index = 0;
						}
		
						// Text
						html += '<div class="is-collection-block-text"><div class="is-collection-block-title">';
						link = search.config.collectionLink(prefix);
						if (link) {
							html += '<a href="' + link + '">' + item.name + '</a>';
						} else {
							html += item.name;
						}
						html += '</div>';
						if (item[obj._collectionsExtraKey] !== void 0) {
							html += '<div class="is-collection-block-info">' + infoLang.replace('{value}', item[obj._collectionsExtraKey]) + '</div>';
						} else {
							html += '<div class="is-collection-block-info is-collection-block-info--empty"></div>';
						}
						html += '</div>';
		
						// Samples and stats
						html += '<div class="is-collection-block-data">';
		
						if (item.samples) {
							html += '<div class="is-collection-block-samples' + (
								typeof item.displayHeight === 'number' ? ' is-collection-block-samples--' + item.displayHeight : (
									typeof item.height === 'number' ? ' is-collection-block-samples--' + item.height : ''
								)
							) + '">';
							item.samples.forEach(function(sample, index) {
								if (index < 3) {
									html += '<span class="iconify" data-inline="false" data-icon="' + prefix + ':' + sample + '"></span>';
								}
							});
							html += '</div>';
						}
		
						// Stats
						if (obj._collectionsExtraKey !== 'total') {
							html += '<div class="is-collection-block-count">' + local.numberIcon('' + item.total, {
								extra: 'style="font-size: 24px; line-height: 24px; -ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" focusable="false"'
							}) + '</div>';
						}
		
						if (obj._showCollectionHeight && item.height) {
							html += '<div class="is-collection-block-height">' + local.numberIcon(
								typeof item.height === 'number' ? '|' + item.height : '|' + item.height.join(', ')
							, {
								extra: 'style="font-size: 24px; line-height: 24px; -ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" focusable="false"'
							}) + '</div>';
						}
		
						html += '</div>';
					}
		
					if (obj._collectionsIndexVisible || !local._collectionsInfo) {
						return;
					}
		
					// Build HTML
					prefixes = obj._filteredPrefixes ? obj._filteredPrefixes : Object.keys(local._collectionsInfo);
		
					// Check categories
					if (obj._hideCollectionCategories === true) {
						showCategories = false;
					} else {
						categorized = splitByCategories(prefixes);
						categories = Object.keys(categorized);
						showCategories = categories.length > 1;
					}
		
					html = '';
					if (showCategories) {
						categories.forEach(function(category) {
							html += '<div class="is-collections-block is-collections-block--with-title"><div class="is-collections-block-title">' + category + '</div><ul>';
							categorized[category].forEach(function(prefix) {
								// Add prefix
								add(prefix);
							});
							html += '</ul></div>';
						});
					} else {
						html += '<div class="is-collections-block is-collections-block--without-title"><ul>';
						prefixes.forEach(function(prefix) {
							// Add prefix
							add(prefix);
						});
						html += '</ul></div>';
					}
		
					// Set HTML code and events
					obj._$nodes.collections.innerHTML = html;
					$nodes = obj._$nodes.collections.querySelectorAll('.is-collection-block');
					for (i = 0; i < $nodes.length; i++) {
						$nodes[i].addEventListener('click', obj.collectionsIndexLinkClicked.bind(this, $nodes[i]));
					}
		
					// Show container
					if (obj._collectionsContainer === null) {
						obj._$nodes.collections.classList.remove('is-collections--hidden');
					} else {
						obj._$nodes.collections.style.display = '';
					}
					obj._collectionsIndexVisible = true;
					obj._$nodes.poweredBy.classList.remove('is-powered-by--visible-icons');
				};
		
				/**
				 * Hide collections index
				 */
				obj.hideCollectionsIndex = function() {
					if (obj._collectionsContainer === null) {
						// Hide built-in list
						obj._$nodes.collections.innerHTML = '';
						obj._$nodes.collections.classList.add('is-collections--hidden');
					} else {
						obj._$nodes.collections.style.display = 'none';
					}
					obj._collectionsIndexVisible = false;
				};
		
				/**
				 * Event handler for clicked collection
				 *
				 * @param $node
				 * @param event
				 */
				obj.collectionsIndexLinkClicked = function($node, event) {
					var prefix;
		
					event.preventDefault();
					event.stopPropagation();
		
					prefix = $node.getAttribute('data-prefix');
					obj.loadCollection(prefix);
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Display icons
				 *
				 * @param {Array} icons
				 * @param {boolean} [keepPages]
				 */
				obj.displayIcons = function(icons, keepPages) {
					obj._allIcons = icons.slice(0);
					obj._icons = icons.slice(0);
					obj._pendingSearch = 0;
					obj._notice = null;
					if (keepPages !== true) {
						obj._page = 0;
					}
		
					obj.refresh();
				};
		
				/**
				 * Hide icons list
				 */
				obj.hideIconsList = function() {
					obj._$nodes.resultsContainer.classList.add('is-search-results--hidden');
					obj._$nodes.poweredBy.classList.remove('is-powered-by--visible-icons');
				};
		
				/**
				 * Refresh display
				 */
				obj.refresh = function() {
					if (obj._destroyed) {
						return;
					}
					if (!obj._created) {
						obj.buildStructure();
					}
		
					obj.updateLayoutsFilter();
					obj.updateCounter();
					obj.updatePagination();
					obj.updateIcons();
					obj.updateCategories();
					obj.updateFooter();
		
					if (!obj._icons.length && !obj._notice) {
						// Nothing to show
						obj.hideIconsList();
						if (obj._showCollections && !obj._collectionsIndexVisible) {
							obj.showCollectionsIndex();
						}
					} else {
						// Showing search results or notice
						obj._$nodes.resultsContainer.classList.remove('is-search-results--hidden');
						if (obj._collectionsIndexVisible) {
							obj.hideCollectionsIndex();
						}
						if (obj._poweredBy) {
							obj._$nodes.poweredBy.classList.add('is-powered-by--visible-icons');
						}
					}
		
					// Smooth change from placeholder to real search results
					if (obj._updatePlaceholder === true) {
						obj._updatePlaceholder = false;
						window.setTimeout(function() {
							var $children, $node, i;
		
							if (obj._destroyed) {
								return;
							}
		
							$children = obj._$root.parentNode.childNodes;
		
							for (i = $children.length - 1; i >= 0; i--) {
								$node = $children[i];
								if ($node !== obj._$root) {
									$node.remove();
								}
							}
							obj._$root.classList.remove('is-root--temporary');
						}, 0);
					}
				};
		
				/**
				 * Show empty results
				 */
				obj.showEmptyResults = function() {
					obj._icons = [];
					obj.refresh();
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang,
					defaultData = search.emptyIcon(),
					dataKeys = Object.keys(defaultData).slice(1);
		
				obj._footerHidden = true;
				obj._footerData = Object.assign(Object.create(null), defaultData);
		
				/**
				 * Check if footer requires update
				 *
				 * @return {null}
				 */
				obj.footerRequiresUpdate = function() {
					var update = Object.create(null),
						requireUpdate = false;
		
					update.icon = !obj._icon.icon || Iconify.iconExists(obj._icon.icon) ? obj._icon.icon : obj._footerData.icon;
					if (update.icon !== obj._footerData.icon) {
						requireUpdate = true;
					} else if (obj._footerData.icon === '') {
						// Icon is still empty - ignore transformations
						return null;
					}
		
					dataKeys.forEach(function(key) {
						if (obj._icon[key] !== obj._footerData[key]) {
							update.transform = true;
							requireUpdate = true;
						}
						update[key] = obj._icon[key];
					});
		
					return requireUpdate ? update : null;
				};
		
				/**
				 * Update footer HTML code
				 */
				obj.updateFooter = function(force) {
					var showFooter = obj._footer && obj._overlay && obj._footer.hideEmpty !== true,
						update = obj.footerRequiresUpdate();
		
					if (update === null && force) {
						update = obj._footerData;
					}
		
					if (update === null && (!obj._footerHidden || !showFooter)) {
						// Nothing to update
						return;
					}
		
					if ((update === null || !update.icon) && !showFooter) {
						if (obj._footerData.icon) {
							obj._footerHidden = true;
							obj._$nodes.footer.classList.add('is-footer--hidden');
							obj._$nodes.poweredBy.classList.remove('is-powered-by--visible-footer');
							obj._$nodes.footer.innerHTML = '';
						}
						obj._footerData.icon = '';
						return;
					}
		
					// Update code
					if (!obj._footer) {
						// Send event to caller. Assume submit if icon is set, cancel icon is empty
						if (obj._icon.icon) {
							obj.sendEvent('submit', obj.sendEventIcon(obj._icon));
						} else {
							obj.sendEvent('cancel');
						}
						obj._footerData = update === null ? obj._footerData : update;
						return;
					}
		
					// Generate footer again if value changes from/to empty
					if (!obj._footerData.icon) {
						// Show
						obj._footerHidden = false;
						obj.generateFooterHTML(update === null ? obj._footerData : update);
						obj._$nodes.footer.classList.remove('is-footer--hidden');
						if (obj._poweredBy) {
							obj._$nodes.poweredBy.classList.add('is-powered-by--visible-footer');
						}
					} else if (update !== null && (!update.icon || update.transform)) {
						// Was hidden before or transformation changed - update everything
						obj.generateFooterHTML(update);
					} else {
						// Old and new values are not empty - update only code
						obj.updateFooterHTML(update === null ? obj._footerData : update);
					}
					obj._footerData = update === null ? obj._footerData : update;
				};
		
				/**
				 * Generate footer HTML code
				 *
				 * @param {object} update Data to show
				 */
				obj.generateFooterHTML = function(update) {
					var transform = '',
						buttons = '',
						empty = !update.icon,
						buttonsList = empty ? ['cancel'] : ['submit', 'submit2', 'cancel', 'clear'],
						visibleButtons = [],
						rotations = [0, 1, 2, 3],
						flip = ['h', 'v'];
		
					if (!empty && obj._footer.transform) {
						// Flip
						transform += '<div class="is-footer-block is-footer-block--transform is-footer-block--flip"><span class="is-footer-block-title">' + lang.flipTitle + '</span>';
						flip.forEach(function(value) {
							transform += '<a href="javascript:void(0)" class="is-transformation is-transformation--flip is-transformation--flip--' + value + '" title="' + lang[value + 'Flip'] + '"></strong></a>';
						});
						transform += '</div>';
		
						// Rotations
						transform += '<div class="is-footer-block is-footer-block--transform is-footer-block--rotate"><span class="is-footer-block-title">' + lang.rotateTitle + '</span>';
						rotations.forEach(function(value) {
							var degrees = (value * 90) + '&deg;';
							transform += '<a href="javascript:void(0)" class="is-transformation is-transformation--rotate is-transformation--rotate--' + value + '" title="' + lang.rotate.replace('{deg}', degrees) + '"></a>';
						});
						transform += '</div>';
					}
		
					buttonsList.forEach(function(key) {
						if (obj._footer[key] === void 0 && key !== 'submit' && key !== 'cancel') {
							// Show only "submit" and "cancel" by default
							return;
						}
						if (obj._footer[key] === false) {
							// Explicitly disabled button
							return;
						}
		
						buttons += '<a href="javascript:void(0)" class="is-footer-button is-footer-button--' + key + '"></a>';
						visibleButtons.push(key);
					});
		
					obj._$nodes.footer.innerHTML = '<div class="is-footer-content">' +
						(empty ? '' : '<div class="is-footer-sample"><div></div></div>') +
						(typeof obj._footer.beforeControls === 'function' ? obj._footer.beforeControls(update) : '') +
						(empty ? '' : '<div class="is-footer-controls' + (transform === '' ? '' : ' is-footer-controls--transform') + '"><div class="is-footer-icon-name"></div>' + transform + '</div>') +
						(typeof obj._footer.beforeButtons === 'function' ? obj._footer.beforeButtons(update) : '') +
						(buttons === '' ? '' : '<div class="is-footer-buttons">' + buttons + '</div>') +
						(typeof obj._footer.afterButtons === 'function' ? obj._footer.afterButtons(update) : '') +
						'</div>';
		
					obj._$nodes.footerSample = obj._$nodes.footer.querySelector('.is-footer-sample > div:first-child');
					obj._$nodes.footerIconName = obj._$nodes.footer.querySelector('.is-footer-icon-name');
					obj._$nodes.footerButtons = obj._$nodes.footer.querySelector('.is-footer-buttons');
		
					// Update transformation buttons
					if (!empty && obj._footer.transform) {
						rotations.forEach(function(value) {
							obj.updateRotationButton(value, update.rotate === value).addEventListener('click', obj.rotationClicked.bind(this, value));
						});
						flip.forEach(function(value) {
							obj.updateFlipButton(value, update[value + 'Flip']).addEventListener('click', obj.flipClicked.bind(this, value));
						});
					}
		
					// Toggle is-footer--empty class
					obj._$nodes.footer.classList[empty ? 'add' : 'remove']('is-footer--empty');
		
					// Update submit buttons
					visibleButtons.forEach(function(key) {
						obj.updateFooterButton(key).addEventListener('click', obj.footerButtonClicked.bind(this, key));
					});
		
					// Update sample
					obj.updateFooterHTML(update);
		
					// Check dimensions - could have been resized after showing full size footer
					setTimeout(function() {
						obj.checkWidth();
					}, 100);
				};
		
				/**
				 * Rotation clicked
				 *
				 * @param value
				 * @param event
				 */
				obj.rotationClicked = function(value, event) {
					event.preventDefault();
					event.stopPropagation();
		
					if (value === obj._icon.rotate) {
						if (!value) {
							return;
						}
						value = 0;
					}
					obj.updateRotationButton(obj._icon.rotate, false);
					obj._icon.rotate = value;
					obj._footerData.rotate = value;
					obj.updateRotationButton(obj._icon.rotate, true);
					obj.updateFooterSample(obj._footerData);
				};
		
				/**
				 * Flip clicked
				 *
				 * @param value
				 * @param event
				 */
				obj.flipClicked = function(value, event) {
					var key = value + 'Flip';
		
					event.preventDefault();
					event.stopPropagation();
		
					obj._icon[key] = !obj._icon[key];
					obj._footerData[key] = obj._icon[key];
					obj.updateFlipButton(value, obj._icon[key]);
					obj.updateFooterSample(obj._footerData);
				};
		
				/**
				 * Button clicked
				 *
				 * @param key
				 * @param event
				 */
				obj.footerButtonClicked = function(key, event) {
					event.preventDefault();
					event.stopPropagation();
		
					switch (key) {
						case 'clear':
							// Reset everything
							obj._icon = search.emptyIcon();
							obj.refresh();
							break;
					}
		
					// Send event to caller
					if (key === 'submit' || key === 'submit2') {
						obj.sendEvent(key, obj.sendEventIcon(obj._icon));
					} else {
						obj.sendEvent(key);
					}
				};
		
				/**
				 * Update rotation button
				 *
				 * @param key
				 * @param selected
				 * @returns {Element}
				 */
				obj.updateRotationButton = function(key, selected) {
					var $node = obj._$nodes.footer.querySelector('.is-transformation--rotate--' + key);
					$node.classList[selected ? 'add' : 'remove']('is-transformation--active');
					$node.innerHTML = local.renderUIIcon('rotate' + key) + '<strong>' + (key * 90) + '&deg;</strong>';
					return $node;
				};
		
				/**
				 * Update flip button
				 *
				 * @param key
				 * @param checked
				 * @returns {Element}
				 */
				obj.updateFlipButton = function(key, checked) {
					var $node = obj._$nodes.footer.querySelector('.is-transformation--flip--' + key);
					$node.classList[checked ? 'add' : 'remove']('is-transformation--active');
					$node.innerHTML = local.renderUIIcon(key + 'Flip') + '<strong>' + lang[key + 'FlipText'] + '</strong>';
					return $node;
				};
		
				/**
				 *
				 * @param key
				 * @return {Element}
				 */
				obj.updateFooterButton = function(key) {
					var $node = obj._$nodes.footerButtons.querySelector('.is-footer-button--' + key);
					$node.innerHTML = local.renderUIIcon(key + 'FooterButton') + '<strong>' + (typeof obj._footer[key] === 'string' ? obj._footer[key] : lang.footerButtons[key]) + '</strong>';
					return $node;
				};
		
				/**
				 * Update footer sample
				 *
				 * @param {object} data Data to use
				 */
				obj.updateFooterSample = function(data) {
					var html;
		
					if (!obj._$nodes.footerSample) {
						return;
					}
					if (!data.icon) {
						obj._$nodes.footerSample.innerHTML = '';
						return;
					}
		
					// Sample
					html = '<iconify-icon class="' + search.valueToClass(data) + '" data-width="1em" data-height="1em"></iconify-icon>';
		
					if (typeof obj._footer.afterSample === 'function') {
						html += obj._footer.afterSample(data);
					}
		
					obj._$nodes.footerSample.innerHTML = html;
				};
		
				/**
				 * Update footer code
				 *
				 * @param {object} update Data to show
				 */
				obj.updateFooterHTML = function(update) {
					var link = null,
						html, parts, prefix, data;
		
					// Update icon name
					if (obj._$nodes.footerIconName) {
						if (update === null || update.icon === '') {
							html = '';
						} else {
							html = '<span class="iconify" data-icon="' + update.icon + '"></span> ';
							html += obj._hidePrefix ? local.removePrefix(update.icon) : update.icon;
		
							if (obj._footer.size) {
								data = Iconify.getIcon(update.icon);
								if (data !== null) {
									html += ' <span class="is-footer-dimensions">(' + data.width + ' x ' + data.height + ')</span>';
								}
							}
		
							if (!obj._hidePrefix && obj._prefix === null) {
								// Collection link
								parts = update.icon.split(':');
								if (parts.length === 1) {
									parts = update.icon.split('-');
								}
								prefix = parts.shift();
		
								link = local.collectionLink(prefix);
								if (link !== null) {
									html += '<a class="' + link.className + '" href="' + link.link + '">' + link.title + '</a>';
								}
							}
						}
		
						obj._$nodes.footerIconName.innerHTML = html;
						if (link !== null) {
							obj._$nodes.footerIconName.querySelector('a').addEventListener('click', obj.footerPrefixClicked.bind(this, link.data));
						}
					}
		
					// Sample
					obj.updateFooterSample(update);
				};
		
				/**
				 * Click event handler for collection name in footer
				 *
				 * @param prefix
				 * @param event
				 */
				obj.footerPrefixClicked = function(prefix, event) {
					event.preventDefault();
					event.stopPropagation();
		
					if (obj._prefix === prefix) {
						return;
					}
		
					obj.loadCollection(prefix);
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Refresh icons list
				 */
				obj.updateIcons = function() {
					var start = obj._page * obj._perPage,
						end = Math.min(start + obj._perPage, obj._icons.length),
						className = 'is-icons is-icons--' + (obj._listView ? 'list' : 'grid'),
						i;
		
					// Nothing to show?
					if (!obj._icons.length) {
						className += ' is-icons--empty';
						obj._$nodes.iconsContainer.innerHTML = '<div class="' + className + '"></div>';
						return;
					}
		
					// Filter visible icons list
					obj._visibleIcons = [];
					obj._pendingIcons = [];
		
					for (i = start; i < end; i ++) {
						obj._visibleIcons.push(obj._icons[i]);
					}
		
					// Disable cache and preload images
					Iconify.setConfig('localStorage', false);
					Iconify.setConfig('sessionStorage', false);
		
					// Show icons
					obj._$nodes.iconsContainer.innerHTML = '<div class="' + className + '"><ul>' + obj._visibleIcons.map(obj.drawIcon).join('') + '</ul></div>';
		
					// Check dimensions - overlay could have been resized after showing icons list
					setTimeout(function() {
						obj.checkWidth();
					}, 100);
				};
		
				/**
				 * Update pending icons
				 */
				obj.updatePendingIcons = function() {
					var $nodes = obj._$nodes.iconsContainer.querySelectorAll('li.is-icon--pending'),
						i, $node, icon;
		
					for (i = 0; i < $nodes.length; i++) {
						$node = $nodes[i];
						icon = $node.getAttribute('data-icon');
						if (Iconify.iconExists(icon)) {
							// Change to rendered!
							$node.classList.remove('is-icon--pending');
							$node.classList.add('is-icon--rendered');
							$node.innerHTML = obj.drawIconContents(icon, obj._showSize ? Iconify.getIcon(icon) : null);
						}
					}
				};
		
				/**
				 * Draw icon
				 *
				 * @param {string} icon
				 * @returns {string}
				 */
				obj.drawIcon = function(icon) {
					var exists = Iconify.iconExists(icon);
		
					if (!exists) {
						obj._pendingIcons.push(icon);
					}
		
					return '<li data-icon="' + icon + '" class="is-icon is-icon--' + (exists ? 'rendered' : 'pending') + (icon === obj._icon.icon ? ' is-selected-icon' : '') + '">' + obj.drawIconContents(icon, exists ? Iconify.getIcon(icon) : null) + '</li>';
				};
		
				/**
				 * Draw icon contents
				 *
				 * @param {string} icon
				 * @param {object|null} data
				 * @returns {string}
				 */
				obj.drawIconContents = function(icon, data) {
					var size = null,
						tag = 'iconify-icon',
						displayIcon = obj._hidePrefix ? local.removePrefix(icon) : icon,
						html, title, link, prefix, parts, links;
		
					link = search.config.iconLink(icon);
		
					if (obj._showSize && data) {
						size = data.width + ' x ' + data.height;
					}
					title = lang.iconTooltip(obj, displayIcon, size);
					html = '<a href="' + link + '" title="' + title + '"><' + tag + ' data-icon="' + icon + '" data-width="1em" data-height="1em"></' + tag + '></a>';
		
					html += '<div class="is-icon-stats"><a class="is-icon-link" href="' + link + '" title="' + title + '">' + displayIcon + '</a>';
		
					if (obj._showSize && data) {
						html += '<span class="is-icon-data">' + size + '</span>';
					}
		
					// Links
					links = [];
					if (obj._prefix === null) {
						parts = icon.split(':');
						if (parts.length === 1) {
							parts = icon.split('-');
						}
						prefix = parts.shift();
		
						link = local.collectionLink(prefix);
						if (link !== null) {
							links.push(link);
						}
					}
		
					if (obj._categories !== null && obj._iconCategories[icon] !== void 0) {
						obj._iconCategories[icon].forEach(function(cat) {
							if (cat !== obj._activeCategory) {
								link = obj.categoryLink(cat);
								if (link !== null) {
									links.push(link);
								}
							}
						});
					}
		
					if (links.length) {
						html += '<span class="is-icon-labels">';
						links.forEach(function(link) {
							html += '<a href="' + link.link + '" title="' + link.title + '"' + (link.className ? ' class="' + link.className + '"' : '') + (link.data ? ' data-link="' + link.data + '"' : '') + '>' + link.title + '</a>';
						});
						html += '</span>';
					}
		
					html += '</div>';
		
					return html;
				};
		
				/**
				 * Icons clicked
				 *
				 * @param event
				 */
				obj.iconsClicked = function(event) {
					var tag = event.target.tagName,
						$node;
		
					if (tag === 'UL' || tag === 'LI' || tag === 'DIV' || tag === 'SPAN') {
						return;
					}
		
					function clickedIcon() {
						var icon;
		
						// Get icon name
						icon = $node.getAttribute('data-icon');
						if (typeof icon !== 'string') {
							return;
						}
		
						event.preventDefault();
						event.stopPropagation();
		
						if (obj._icon.icon === icon) {
							return;
						}
		
						// Select icon
						obj.setSelectedIcon(icon);
					}
		
					function clickedCategory() {
						var category = $node.getAttribute('data-link');
		
						event.preventDefault();
						event.stopPropagation();
		
						if (obj._categoryIndex[category] === void 0 || obj._activeCategory === category) {
							return;
						}
		
						obj.setActiveCategory(category);
					}
		
					function clickedCollection() {
						var prefix = $node.getAttribute('data-link');
		
						event.preventDefault();
						event.stopPropagation();
		
						if (obj._prefix === prefix) {
							return;
						}
		
						obj.loadCollection(prefix);
					}
		
					// Find LI
					$node = event.target;
					try {
						while ($node !== null) {
							if ($node.tagName === 'LI') {
								clickedIcon();
								return;
							}
		
							if ($node.tagName === 'A') {
								if ($node.classList && $node.classList.contains('is-link-category')) {
									clickedCategory();
									return;
								}
								if ($node.classList && $node.classList.contains('is-link-collection')) {
									clickedCollection();
									return;
								}
							}
		
							$node = $node.parentNode;
						}
					} catch (err) {
					}
				};
		
				/**
				 * Set selected icon
				 *
				 * @param icon
				 */
				obj.setSelectedIcon = function(icon) {
					var $node;
		
					if (obj._destroyed || !obj._created) {
						return;
					}
		
					$node = obj._$nodes.iconsContainer.querySelector('.is-selected-icon');
					if ($node) {
						$node.classList.remove('is-selected-icon');
					}
					$node = obj._$nodes.iconsContainer.querySelector('[data-icon="' + icon + '"]');
					if ($node) {
						$node.classList.add('is-selected-icon');
					}
					obj._icon.icon = icon;
					obj.updateFooter();
				};
		
				/**
				 * Update counter text
				 *
				 * Moved to this module because it does not belong anywhere else
				 */
				obj.updateCounter = function() {
					obj._$nodes.stats.innerHTML = obj._notice ? obj._notice : lang.displayingCallback(obj._icons.length, obj._currentView && obj._currentView.morePages);
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang,
					listView = obj._listView;
		
				/**
				 * Build HTML structure
				 */
				obj.buildStructure = function() {
					var $root = obj._$root,
						showCollections = obj.showBuiltInCollections(),
						html = '<div class="is-container">' +
						// First search form
						'<div class="is-search-form is-search-form--main"></div>' +
						// Current collection block
						'<div class="is-current-collection is-current-collection--hidden"></div>' +
						// Categories list
						'<div class="is-categories is-categories--hidden"></div>' +
						// Second search form
						'<div class="is-search-form is-search-form--secondary is-search-form--hidden"></div>' +
						// Search results block
						'<div class="is-search-results is-search-results--hidden is-layout-' + (listView ? 'list' : 'grid') + '">' +
							// Search results header
						'   <div class="is-header">' +
						'	   <div class="is-header-layouts"></div>' +
						'	   <div class="is-header-stats"></div>' +
						'   </div>' +
							// Search results
						'   <div class="is-icons-container"><div class="is-icons is-icons--' + (listView ? 'list' : 'grid') + '"></div></div>' +
							// Search results pagination
						'   <div class="is-pagination is-pagination--hidden"></div>' +
						'</div>' +
						// Footer
						'<div class="is-footer is-footer--hidden"></div>' +
						// Collections list
						(showCollections ? '<div class="is-collections is-collections--hidden"></div>' : '') +
						// Powered by string
						'<div class="is-powered-by">' + lang.poweredBy + '</div>' +
						'</div>';
		
					$root.innerHTML = html;
					obj._created = true;
		
					// Find nodes
					obj._$nodes = {
						search: {
							container: $root.querySelector('.is-search-form--main')
						},
						search2: {
							container: $root.querySelector('.is-search-form--secondary')
						},
						collectionContainer: $root.querySelector('.is-current-collection'),
						resultsContainer: $root.querySelector('.is-search-results'),
						stats: $root.querySelector('.is-search-results .is-header-stats'),
						layouts: $root.querySelector('.is-search-results .is-header-layouts'),
						categories: $root.querySelector('.is-container .is-categories'),
						iconsContainer: $root.querySelector('.is-search-results .is-icons-container'),
						pagination: $root.querySelector('.is-search-results .is-pagination'),
						footer: $root.querySelector('.is-footer'),
						poweredBy: $root.querySelector('.is-powered-by')
					};
		
					if (showCollections) {
						obj._$nodes.collections = $root.querySelector('.is-collections');
					} else if (obj._showCollections) {
						obj._$nodes.collections = obj._collectionsContainer;
					}
		
					// Setup events
					obj._$nodes.categories.addEventListener('click', obj.categoriesClicked);
					obj._$nodes.iconsContainer.addEventListener('click', obj.iconsClicked);
		
					obj.rebuildSearchForm(false);
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Get maximum page
				 *
				 * @returns {number}
				 */
				obj.maxPage = function() {
					return Math.max(Math.floor((obj._icons.length - 1) / obj._perPage) + 1, 1);
				};
		
				/**
				 * Selected page
				 *
				 * @param event
				 */
				obj.pageClicked = function(event) {
					var page;
		
					event.preventDefault();
					event.stopPropagation();
		
					page = parseInt(event.target.getAttribute('data-page'));
					if (isNaN(page)) {
						return;
					}
		
					obj.changePage(page);
					obj.updatePagination();
				};
		
				/**
				 * Change current page
				 *
				 * @param {number} page
				 */
				obj.changePage = function(page) {
					var $node,
						maxPage = obj.maxPage();
		
					if (page === obj._page || page < 0 || page >= maxPage) {
						return;
					}
		
					$node = obj._$nodes.pagination.querySelector('[data-page="' + obj._page + '"]');
					if ($node) {
						$node.setAttribute('class', '');
					}
		
					obj._page = page;
					obj._$nodes.pagination.querySelector('[data-page="' + obj._page + '"]').setAttribute('class', 'is-current');
		
					obj.updateIcons();
		
					if (page === 1) {
						// Load more results
						if (obj._currentView && obj._currentView.type === 'search' && obj._currentView.morePages) {
							obj.loadMoreSearchResults();
						}
					}
				};
		
				/**
				 * Update pagination code
				 */
				obj.updatePagination = function() {
					var maxPage = obj.maxPage(),
						showPages = [],
						last = 0,
						current = obj._page,
						i, start, end, $nodes;
		
					// Empty
					if (obj._icons.length <= obj._perPage) {
						obj._$nodes.pagination.classList.add('is-pagination--hidden');
						obj._$nodes.pagination.innerHTML = '';
						return;
					}
					obj._$nodes.pagination.classList.remove('is-pagination--hidden');
		
					if (obj._currentView && obj._currentView.morePages) {
						// "Show more results" pages
						obj._$nodes.pagination.innerHTML = '<a href="javascript:void(0)" data-page="1" class="is-load-more">' + lang.paginationMore + '</a>';
					} else {
						if (maxPage < 12) {
							// Show all pages
							for (i = 0; i < maxPage; i++) {
								showPages.push(i);
							}
						} else {
							// Always show first 3 pages
							for (i = 0; i < 3; i++) {
								if (i < maxPage) {
									showPages.push(i);
									last = i;
								}
							}
		
							// Current page +- 2
							start = Math.max(current - 2, last + 1);
							end = Math.min(Math.max(current, 2) + 3, maxPage);
							for (i = start; i < end; i++) {
								showPages.push(i);
								last = i;
							}
		
							// Always show last 3 pages
							if (maxPage > last) {
								start = Math.max(last + 1, maxPage - 3);
								for (i = start; i < maxPage; i++) {
									showPages.push(i);
								}
							}
						}
		
						last = 0;
						obj._$nodes.pagination.innerHTML = showPages.map(function(item) {
							var result = '<a href="javascript:void(0)" data-page="' + item + '"' + (current === item ? ' class="is-current"' : '') + '>' + (item + 1) + '</a>';
							if (item > last + 1) {
								if (item === last + 2) {
									result = '<a href="javascript:void(0)" data-page="' + (item - 1) + '">' + item + '</a>' + result;
								} else {
									result = '<span>...</span>' + result;
								}
							}
							last = item;
							return result;
						}).join('');
					}
		
					// Set events
					$nodes = obj._$nodes.pagination.querySelectorAll('a');
					for (i = 0; i < $nodes.length; i++) {
						$nodes[i].addEventListener('click', obj.pageClicked);
					}
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Send search request
				 *
				 * @param {string} keyword
				 * @param {boolean} [onlyCollection]
				 */
				obj.startSearch = function(keyword, onlyCollection) {
					var time = Date.now(),
						params;
		
					// Check if too many searches were sent
					if (obj._searchThrottled) {
						obj._searchThrottled = {
							keyword: keyword,
							collection: onlyCollection
						};
						return;
					} else {
						obj._searchThrottled = true;
						window.setTimeout(function() {
							if (obj._destroyed) {
								return;
							}
							obj.checkPendingSearch();
						}, 2000);
					}
		
					// Init search object
					obj.showPendingSearch(time);
		
					params = {
						query: keyword,
						limit: obj._perPage * (onlyCollection === true ? 15 : 2)
					};
					if (onlyCollection === true && obj._prefix) {
						params.prefix = obj._prefix;
					}
					obj.sendSearchRequest(params, function(results) {
						obj.setSearchResults(time, results);
					});
				};
		
				/**
				 * Send search request
				 *
				 * @param {string} keyword
				 */
				obj.search = function(keyword) {
					var prefix;
		
					if (!obj._visible) {
						obj.refresh();
					}
		
					prefix = (obj._prefix !== null && obj._defaultPrefix === null) ? 'search2' : 'search';
					if (obj._$nodes && obj._$nodes[prefix]) {
						obj._$nodes[prefix].input.value = keyword;
						obj.searchInputChanged(prefix);
					}
		
					obj.startSearch(keyword, obj._prefix !== null);
				};
		
				/**
				 * Check for throttled search request
				 */
				obj.checkPendingSearch = function() {
					var params;
		
					if (!obj._searchThrottled) {
						return;
					}
		
					if (typeof obj._searchThrottled === 'object') {
						params = obj._searchThrottled;
						obj._searchThrottled = false;
						obj.startSearch(params.keyword, params.collection);
						return;
					}
					obj._searchThrottled = false;
				};
		
				/**
				 * Send search request
				 *
				 * @param {object} params
				 * @param {function} callback
				 */
				obj.sendSearchRequest = function(params, callback) {
					var url;
		
					if (!params.prefix && obj._defaultPrefix !== null) {
						params.prefix = obj._defaultPrefix;
					} else if (obj._prefixes !== null) {
						params.prefixes = obj._prefixes;
					}
					if (params.prefix && obj._activeCategory !== null) {
						params.category = obj._activeCategory === lang.uncategorized ? '' : obj._activeCategory;
					}
		
					url = '/search?';
					Object.keys(params).forEach(function(key, index) {
						if (index) {
							url += '&';
						}
						url += key + '=' + encodeURIComponent(params[key]);
					});
		
					local.apiRequest(obj, 'search' + Date.now(), url, callback, url);
				};
		
				/**
				 * Received search results
				 *
				 * @param {number} time
				 * @param {object} results
				 * @param {boolean} [more]
				 */
				obj.setSearchResults = function(time, results, more) {
					if (obj._destroyed) {
						return;
					}
					if (!results.total) {
						obj._notice = lang.statusEmptySearch;
						obj._currentView = {
							type: 'search',
							time: time,
							keyword: results.request.query
						};
						obj.showEmptyResults();
						return;
					}
		
					obj._notice = null;
					if (more && results.total === obj._perPage * 2) {
						// Nothing new was loaded
						obj.updateCounter();
						return;
					}
		
					// Reset collection
					if (obj._prefix && !results.request.prefix) {
						obj._prefix = null;
						obj._categories = null;
						obj._categoryIndex = Object.create(null);
						obj._activeCategory = null;
						obj._iconCategories = null;
						obj.updateCollectionBlock();
						obj.updateFooter(true);
					}
		
					obj._currentView = {
						type: 'search',
						time: time,
						keyword: results.request.query,
						morePages: more !== true && results.total === results.limit && results.limit === obj._perPage * 2
					};
					obj.displayIcons(results.icons, more);
					if (!obj._currentView.morePages && results.total === results.limit) {
						obj._notice = lang.statusMaxResults.replace('{count}', results.total);
						obj.updateCounter();
					}
				};
		
				/**
				 * Load more search results
				 */
				obj.loadMoreSearchResults = function() {
					var time = Date.now();
		
					// Init search object
					obj._notice = lang.statusSearchingMore;
					obj.updateCounter();
					obj.sendSearchRequest({
						query: obj._currentView.keyword,
						limit: search.config.maxResults
					}, function(results) {
						obj.setSearchResults(time, results, true);
					});
				};
		
				/**
				 * Remove icons, show pending search
				 */
				obj.showPendingSearch = function(time) {
					obj._pendingSearch = time;
					obj._notice = lang.statusSearching;
					if (obj._created && !obj._destroyed) {
						obj.showEmptyResults();
					}
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Reset search form value
				 *
				 * @param prefix
				 * @param [event]
				 */
				obj.resetSearchForm = function(prefix, event) {
					if (event && event.preventDefault) {
						event.preventDefault();
						event.stopPropagation();
					}
		
					obj.resetSearchInput(prefix);
		
					// Show entire collection or collections list if form was showing search results
					if (obj._currentView && obj._currentView.type === 'search' && obj._prefix) {
						obj.restoreCollection();
					} else if (prefix === 'search' && obj._showCollections && !obj._collectionsIndexVisible) {
						if (obj._collectionsBlockVisible) {
							// Hide second search form and collection block
							console.log('old _collectionsBlockVisible: ', obj._collectionsBlockVisible ? '1' : '0');
							obj._prefix = null;
							obj._categories = null;
							obj.updateCollectionBlock();
							obj.updateCategories();
							console.log('new _collectionsBlockVisible: ', obj._collectionsBlockVisible ? '1' : '0');
						}
						obj.hideIconsList();
						obj.showCollectionsIndex();
					}
				};
		
				/**
				 * Reset search input
				 *
				 * @param prefix
				 */
				obj.resetSearchInput = function(prefix) {
					if (!obj._$nodes) {
						return;
					}
					obj._$nodes[prefix].input.value = '';
					if (obj._resetVisible[prefix]) {
						obj._$nodes[prefix].inputContainer.classList.add('is-form-input--empty');
						obj._resetVisible[prefix] = false;
					}
				};
		
				/**
				 * Event handler for search input change and keyup events
				 */
				obj.searchInputChanged = function(prefix, event) {
					var value = obj._$nodes[prefix].input.value.trim(),
						showReset = value.length > 0;
		
					if (showReset !== obj._resetVisible[prefix]) {
						obj._resetVisible[prefix] = showReset;
						obj._$nodes[prefix].inputContainer.classList[showReset ? 'remove' : 'add']('is-form-input--empty');
						obj._$nodes[prefix].form.classList.remove('is-search-form--empty'); // only remove on first change
					}
		
					if (event && event.keyCode && event.keyCode === 13) {
						obj.searchSubmitted(prefix, event);
					}
				};
		
				/**
				 * Search form submitted
				 *
				 * @param prefix
				 * @param [event]
				 */
				obj.searchSubmitted = function(prefix, event) {
					var value = obj._$nodes[prefix].input.value.trim();
		
					event.preventDefault();
					event.stopPropagation();
		
					if (value.length) {
						obj.startSearch(value, obj._defaultPrefix !== null || prefix === 'search2');
					}
				};
		
				/**
				 * Rebuild HTML for search form
				 *
				 * @param {boolean} [secondary]
				 */
				obj.rebuildSearchForm = function(secondary) {
					var title, placeholder,
						prefix = secondary ? 'search2' : 'search',
						formTag = obj.useForm ? 'form' : 'div',
						$nodes = obj._$nodes[prefix],
						$parent = $nodes.container,
						visible = secondary || ($nodes.form && $nodes.form.classList && !$nodes.form.classList.contains('is-search-form--empty'));
		
					if (obj._prefix || secondary) {
						title = local.getCollectionTitle(obj._prefix, null);
						placeholder = title === null ? lang.searchPlaceholderPrefixed : lang.searchPlaceholderPrefixedNamed.replace('{title}', title);
					} else {
						placeholder = lang.searchPlaceholder;
					}
					$parent.innerHTML = '<' + formTag + ' class="is-search-form ' + (visible ? '' : 'is-search-form--empty ') + '">' +
						'   <div class="is-form-input">' +
						'	   <div class="is-input is-input--' + (obj._fancySearch ? 'decorated' : 'plain') + '">' +
						(obj._fancySearch ? local.renderUIInputDecoration('inputSVG') : '') +
						'		   <input type="text" placeholder="' + placeholder + '" value="" spellcheck="false" />' +
						'	   </div>' +
						'	   <span class="is-form-image is-form-image--placeholder">' + local.renderUIIcon('searchInput') + '</span>' +
						'	   <a href="javascript:void(0)" class="is-form-image is-form-image--reset" title="' + lang.searchReset + '">' + local.renderUIIcon('searchReset') + '</a>' +
						'   </div>' +
						'   <a href="javascript:void(0);" class="is-search-button is-search-button--default" title="' + lang.searchButton + '">' + local.renderUIIcon('searchDefaultButton') + '</a>' +
						'</' + formTag + '>';
		
					$nodes.form  = $parent.querySelector('.is-search-form');
					$nodes.inputContainer = $parent.querySelector('.is-form-input');
					$nodes.input = $parent.querySelector('input');
					$nodes.reset = $parent.querySelector('.is-form-image--reset');
					$nodes.submit = $parent.querySelector('.is-search-button--default');
		
					obj._resetVisible[prefix] = $nodes.input.value.length > 0;
					if (!obj._resetVisible[prefix]) {
						$nodes.inputContainer.classList.add('is-form-input--empty');
					}
					$nodes.form.addEventListener('submit', obj.searchSubmitted.bind(this, prefix));
					$nodes.reset.addEventListener('click', obj.resetSearchForm.bind(this, prefix));
					$nodes.input.addEventListener('change', obj.searchInputChanged.bind(this, prefix));
					$nodes.input.addEventListener('keyup', obj.searchInputChanged.bind(this, prefix));
					$nodes.submit.addEventListener('click', obj.searchSubmitted.bind(this, prefix));
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Get HTML code for layouts buttons
				 */
				obj.layoutsFilterHTML = function() {
					var layouts = '';
					if (!obj._icons.length || !obj._showViewModes) {
						return '';
					}
					['grid', 'list'].forEach(function(entry) {
						var selected = (entry === 'list') === obj._listView;
						layouts += '<a href="javascript:void(0)" class="' + (selected ? 'is-selected' : 'is-clickable') + '" data-layout="' + entry + '">' + local.renderUIIcon(entry + (selected ? 'Selected' : '') + 'Filter') + '</a>';
					});
					return layouts;
				};
		
				/**
				 * Change layout
				 *
				 * @param [event]
				 */
				obj.changeLayout = function(event) {
					if (event && event.preventDefault) {
						event.preventDefault();
						event.stopPropagation();
					}
		
					obj._listView = !obj._listView;
					obj._$nodes.iconsContainer.childNodes[0].className = 'is-icons is-icons--' + (obj._listView ? 'list' : 'grid');
					if (obj._icons.length) {
						obj.updateLayoutsFilter();
					}
				};
		
				/**
				 * Update layouts filter HTML code
				 */
				obj.updateLayoutsFilter = function() {
					var html = obj.layoutsFilterHTML();
		
					obj._$nodes.layouts.innerHTML = html;
					if (html !== '' && obj._icons.length) {
						obj._$nodes.layouts.querySelector('a.is-clickable').addEventListener('click', obj.changeLayout);
					}
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			var createOverlay = local.Overlay;
		
			/**
			 * Create new overlay
			 *
			 * @param $parent
			 * @param {object} params
			 * @return {object}
			 * @constructor
			 */
			local.Overlay = function($parent, params) {
				var obj = createOverlay($parent, params),
					lang = search.config.lang;
		
				/**
				 * Load collections
				 *
				 * @param callback
				 */
				function loadCollections(callback) {
					if (obj._defaultPrefix !== null) {
						obj.loadCollection(obj._defaultPrefix, function() {
							callback();
						});
						return;
					}
		
					local.getCollections(function() {
						// Set of prefixes
						if (obj._prefixes !== null) {
							// Filter prefixes
							obj._filteredPrefixes = local.matchPrefixes(obj._prefixes, Object.keys(local._collectionsInfo));
						}
		
						callback();
					});
				}
		
				function runQuery(callback) {
					var query = typeof params.query === 'string' && params.query.length ? params.query : null;
					if (query !== null) {
						obj.search(query);
					}
					callback(query !== null);
				}
		
				/**
				 * Load
				 */
				obj.load = function() {
					obj._loading = true;
		
					// Load collections list or collection
					loadCollections(function() {
		
						// Execute search query
						runQuery(function(hasQuery) {
							if (!hasQuery && obj._defaultPrefix === null && obj._showCollections) {
								obj.showCollectionsIndex();
							}
		
							obj._loading = false;
							obj._loaded = true;
						});
		
					});
				};
		
				return obj;
			};
		
		})(search, local, global);

		(function(search, local, global) {
		
			/**
			 * Apply action to all/selected overlay(s)
			 * @param action
			 * @param [$parent] Parent item to filter
			 * @param [skip] Overlay to skip
			 */
			function overlayAction(action, $parent, skip) {
				var overlay, overlays;
		
				if ($parent === void 0 || $parent === null) {
					// Apply to all overlays
					overlays = local.listOverlays();
				} else {
					overlay = local.findOverlay($parent);
					if (overlay === null) {
						return;
					}
					overlays = [overlay];
				}
		
				overlays.forEach(function(item) {
					if (item !== skip) {
						item[action]();
					}
				});
			}
		
			/**
			 * Hide visible overlays
			 *
			 * @param {boolean} overlaysOnly True if only overlays should be hidden
			 * @param {object} skip Overlay to skip
			 */
			local.hideActiveOverlays = function(overlaysOnly, skip) {
				local.listOverlays().forEach(function(overlay) {
					if (overlay === skip || !overlay._visible) {
						return;
					}
		
					if (overlaysOnly && !overlay._overlay) {
						return;
					}
		
					overlay.hide();
				});
			};
		
			/**
			 * Create overlay
			 *
			 * @param {Node} $parent
			 * @param {object} [params]
			 */
			search.create = function($parent, params) {
				var overlay;
		
				if (!$parent) {
					return false;
				}
				params = typeof params === 'object' ? params : Object.create(null);
		
				// Delete old overlay
				overlay = local.findOverlay($parent);
				if (overlay !== null && !overlay._destroyed) {
					if (params.reuse === true) {
						// Re-use existing overlay
						if (!overlay._visible) {
							local.hideActiveOverlays(true, overlay);
							overlay.show();
						}
						overlay.updateValue(params);
						return true;
					}
		
					overlay.destroy();
				}
		
				// Hide other overlays
				local.hideActiveOverlays(true);
		
				// Create new overlay
				local.createOverlay($parent, params);
				return true;
			};
		
			/**
			 * Hide overlay
			 *
			 * @param {Node} [$parent]
			 */
			search.hide = function($parent) {
				overlayAction('hide', $parent);
			};
		
			/**
			 * Destroy overlay
			 *
			 * @param $parent
			 */
			search.destroy = function($parent) {
				overlayAction('destroy', $parent);
			}
		
		})(search, local, global);


	})(self.IconifySearch, self);
}
DisplayIcon = function ($container) {
    var defaultChanges = {
        color: null,
        width: null,
        height: null,
        crop: false,
        inline: false,
        rotate: 0,
        hFlip: false,
        vFlip: false
    };

    var htmlSamples = {
        checkboxChecked: '<span class="iconify arty-animated" data-icon="arty-animated:16-confirm"></span>',
        checkboxUnchecked: '<span class="iconify arty-animated" data-icon="arty-animated:16-close"></span>'
    };

    var maxSize = 192;

    var api = document.IconifyAPI === void 0 ? 'https://api.iconify.design/' : document.IconifyAPI + '/';

    var obj = {
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Set variables
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        '$container': $container,

        // Icon
        _icon: null,
        _iconLoaded: false,

        // Status
        _visible: false,
        _showColor: null,
        _codeMode: 'icon',
        _propMode: 'inline',
        _inlinePropVisible: true,
        _sampleColor: 'default',
        _sampleGrid: 0,
        _showGrid: false,
        _changes: Object.assign({}, defaultChanges),

        /**
         * Link for icons. Overwrite with custom function
         *
         * @param {string} icon
         * @returns {string}
         */
        iconLink: function (icon) {
            var split = icon.split(':');
            if (split.length === 1) {
                split = icon.split('-');
            }
            return '/icon-sets/' + split.shift() + '/' + split.join('-') + '.html';
        },

        /**
         * Change prefix to - if possible
         *
         * @param {string} icon
         * @returns {string}
         */
        prettyIcon: function (icon) {
            var split = icon.split(':'),
                prefix;

            if (split.length === 1) {
                split = icon.split('-');
            }
            prefix = split.shift();
            return prefix + (prefix.indexOf('-') === -1 ? '-' : ':') + split.join('-');
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Show icon and refresh layout
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Show icon
         *
         * @param icon
         */
        show: function (icon) {
            obj._icon = icon;
            obj._iconLoaded = Iconify.iconExists(icon);
            if (!obj._iconLoaded) {
                // console.log('Icon not available:', icon);
                Iconify.preloadImages([icon]);
            }
            obj.refresh();
        },

        /**
         * Refresh icon
         */
        refresh: function () {
            if (!obj._iconLoaded || !obj._icon) {
                return;
            }
            if (!obj._visible) {
                obj._prepareHTML();
            }

            obj._iconData = Iconify.getIcon(obj._icon);
            obj._detectColor();
            obj._updateDimensions();
            obj._updateSelectedIcon();
            obj._updateVisibleSamples();
        },

        /**
         * Prepare HTML code
         */
        _prepareHTML: function () {
            var codeModes = ['icon', 'bg', 'svg', 'react'],
                codeKeys = {
                    codeDefault: 'icon',
                    codeClasses: 'classes',
                    codeCustom: 'custom',
                    codeIconify: 'iconify',
                    codeBG: 'bg',
                    codePseudo: 'pseudo',
                    codeSVG: 'svg',
                    codeSVG2: 'svg2',
                    codeReactImport: 'react-import',
                    codeReactUsage: 'react-usage',
                },
                propModes = ['color', 'inline', 'size', 'transform'],
                rotations = [0, 90, 180, 270],
                flip = ['h', 'v'],
                inputs = ['color', 'width', 'height'],
                $node, $nodes, i;

            obj.$nodes = {
                sample: $container.querySelector('.si-sample'),
                grid: $container.querySelector('.si-grid'),
                selectedIconLink: $container.querySelector('.si-selected-icon'),
                codeModeTabs: $container.querySelector('.tabs--mode'),
                codeModeTab: {},
                propModeTabs: $container.querySelector('.tabs--props'),
                propModeTab: {},
                sectionCode: $container.querySelector('.si-section--code'),
                sectionProps: $container.querySelector('.si-section--props'),
                rotate: {},
                flip: {},
                inline: {
                    block: $container.querySelector('.si-checkbox--mode-block'),
                    inline: $container.querySelector('.si-checkbox--mode-inline')
                },
                visibleInline: $container.querySelectorAll('.si-inline--only'),
                hiddenInline: $container.querySelectorAll('.si-block--only'),
                svg2: $container.querySelectorAll('.si-svg2--only'),
                downloadLink: $container.querySelector('.si-svg-download')
            };

            // Inline/block modes
            obj.$nodes.inline.block.addEventListener('click', obj._toggleProperty.bind(this, 'inline', false));
            obj.$nodes.inline.inline.addEventListener('click', obj._toggleProperty.bind(this, 'inline', true));

            // Prop mode tabs
            propModes.forEach(function (mode) {
                obj.$nodes.propModeTab[mode] = $container.querySelector('.tabs--props .tab--' + mode);
                obj.$nodes.propModeTab[mode].addEventListener('click', obj._propModeTabClicked.bind(this, mode));
                obj.$nodes.sectionProps.classList.remove('si-props--' + mode);
                obj.$nodes.sectionCode.classList.remove('si-props--' + mode);
            });

            // Code mode tabs
            codeModes.forEach(function (mode) {
                obj.$nodes.codeModeTab[mode] = $container.querySelector('.tabs--mode .tab--' + mode);
                obj.$nodes.codeModeTab[mode].addEventListener('click', obj._codeModeTabClicked.bind(this, mode));
                obj.$nodes.sectionProps.classList.remove('si-mode--' + mode);
                obj.$nodes.sectionCode.classList.remove('si-mode--' + mode);
            });

            // Code blocks
            Object.keys(codeKeys).forEach(function (key) {
                var $node = $container.querySelector('.si-textarea-wrapper--' + codeKeys[key]),
                    $child;

                if ($node) {
                    $child = document.createElement('p');
                    $child.className = 'si-code-notice';
                    $child.style.display = 'none';
                    $child.innerHTML = 'Code was copied to clipboard.';

                    $node.appendChild($child);
                    obj.$nodes[key] = {
                        textarea: $node.querySelector('textarea'),
                        notice: $node.querySelector('.si-code-notice')
                    };
                    obj.$nodes[key].textarea.addEventListener('click', obj._copyToClipboard.bind(this, obj.$nodes[key]));
                }
            });

            // Rotations
            rotations.forEach(function (value) {
                obj.$nodes.rotate[value] = $container.querySelector('.si-rotate-' + value);
                obj._updateRotationNode(value);
                obj.$nodes.rotate[value].addEventListener('click', obj._rotationClicked.bind(this, value));
            });

            // Flip
            flip.forEach(function (value) {
                obj.$nodes.flip[value] = $container.querySelector('.si-flip-' + value);
                obj._updateFlipNode(value);
                obj.$nodes.flip[value].addEventListener('click', obj._flipClicked.bind(this, value));
            });

            // Inputs
            inputs.forEach(function (key) {
                var $node = $container.querySelector('.si-input-block--' + key + ' input'),
                    $reset = $container.querySelector('.si-input-block--' + key + ' .si-input-reset');

                obj.$nodes[key] = $node;
                obj.$nodes[key + 'Reset'] = $reset;

                $node.addEventListener('change', obj._changeInput.bind(this, key, false));
                $node.addEventListener('keyup', obj._changeInput.bind(this, key, true));
                $node.addEventListener('blur', obj._updateInputValue.bind(this, key));
                $reset.addEventListener('click', obj._resetInput.bind(this, key));
            });

            // Color options and grid
            $nodes = $container.querySelectorAll('.si-colors a');
            for (i = 0; i < $nodes.length; i++) {
                $nodes[i].addEventListener('click', obj._changeBackground);
            }
            if (obj.$nodes.grid) {
                obj.$nodes.grid.addEventListener('click', obj._toggleGrid);
            }

            // Toggle
            $nodes = $container.querySelectorAll('.si-options--toggle');
            for (i = 0; i < $nodes.length; i++) {
                $nodes[i].addEventListener('click', obj._toggleOptions);
            }

            // Set default sample color and tabs
            obj.$nodes.sample.classList.add('si-color--' + obj._sampleColor);
            obj._updateCodeModeTabs();
            obj._updatePropModeTabs();

            // Toggle inline/block only code
            obj._updateInlineVisibility();

            obj._visible = true;
            $container.style.display = 'block';
        },

        /**
         * Update selected icon links and text
         */
        _updateSelectedIcon: function () {
            if (obj.$nodes.selectedIconLink) {
                obj.$nodes.selectedIconLink.innerHTML = '<a href="' + obj.iconLink(obj._icon) + '">' + obj.prettyIcon(obj._icon) + '</a>';
            }
        },

        /**
         * Toggle color fields
         */
        _toggleColor: function () {
            obj._togglePropModeTabs(true);
        },

        /**
         * Check if icon has color
         */
        _detectColor: function () {
            var icon = Iconify.getSVG(obj._icon);
            obj._showColor = icon !== null && icon.indexOf('currentColor') !== -1;
            obj._toggleColor();
        },

        /**
         * Update dimensions
         * @private
         */
        _updateDimensions: function () {
            var $node, html;

            if (obj.$nodes.collection === void 0) {
                obj.$nodes.collection = null;
                $node = document.querySelector('div.collection-details');
                if (!$node) {
                    return;
                }
                html = $node.innerHTML;
                if (html.indexOf('Icon:') === -1) {
                    return;
                }
                $node.innerHTML = $node.innerHTML + '<dl><dt>Icon size:</dt><dd class="si-icon-size"></dd></dl>';
                obj.$nodes.collection = $node.querySelector('dd.si-icon-size');
            }

            if (!obj.$nodes.collection) {
                return;
            }

            obj.$nodes.collection.innerHTML = obj._iconData.width + ' x ' + obj._iconData.height;
        },

        /**
         * Check if grid is available and if it can be generated
         *
         * @param {number} size
         * @return {number}
         * @private
         */
        _hasGrid: function (size) {
            switch (size) {
                case 48:
                case 64:
                case 256:
                case 512:
                case 1200:
                    size = 16;
                    break;

                case 1024:
                    size = 32;
                    break;

                case 50:
                    size = 25;
                    break;
            }

            if (obj._gridCache === void 0) {
                obj._gridCache = {};
            }
            if (obj._gridCache[size] !== void 0) {
                return size;
            }

            switch (size) {
                case 14:
                case 16:
                case 18:
                case 20:
                case 23:
                case 24:
                case 25:
                case 32:
                    obj._gridCache[size] = {
                        white: obj._generateGrid(size, 0.5),
                        gray1: obj._generateGrid(size, 0.75),
                        black: obj._generateGrid(size, 1)
                    };
                    obj._gridCache[size]['default'] = obj._gridCache[size]['white'];
                    obj._gridCache[size]['gray2'] = obj._gridCache[size]['black'];
                    return size;
            }

            return 0;
        },

        /**
         * Generate grid background
         *
         * @param {number} size
         * @param {number} maxOpacity
         * @return {string}
         * @private
         */
        _generateGrid: function (size, maxOpacity) {
            var width = 192,
                spacing = width / size,
                svg = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="' + width + '" height="' + width + '" viewBox="0 0 ' + width + ' ' + width + '">',
                i, x, extra;

            svg += '<g stroke-width="1" stroke="rgba(128, 128, 128, ' + (maxOpacity * 0.3) + ')">';
            for (i = spacing; i < width; i += spacing) {
                extra = '';
                x = i.toFixed(2).replace('.00', '');
                if (x === '96') {
                    extra = ' stroke="rgba(128, 128, 128, ' + maxOpacity + ')"';
                }
                if (x === '48' || x === '144') {
                    extra = ' stroke="rgba(128, 128, 128, ' + (maxOpacity * 0.8) + ')"';
                }
                if (x === '24' || x === '72' || x === '120') {
                    extra = ' stroke="rgba(128, 128, 128, ' + (maxOpacity * 0.6) + ')"';
                }

                svg += '<line x1="0" y1="' + x + '" x2="' + width + '" y2="' + x + '"' + extra + '></line>';
                svg += '<line y1="0" x1="' + x + '" y2="' + width + '" x2="' + x + '"' + extra + '></line>';
            }
            svg += '</g>';

            svg += '</svg>';

            // Convert to background
            return 'data:image/svg+xml;base64,' + btoa(svg);
        },

        /**
         * Get grid background
         *
         * @param size
         * @return {string}
         * @private
         */
        _gridBackground: function (size) {
            if (obj._gridCache === void 0 || obj._gridCache[size] === void 0) {
                return '';
            }
            return 'background-image: url(\'' + obj._gridCache[size][obj._sampleColor] + '\'); background-position: 0 0; background-size: cover;';
        },

        /**
         * Detect grid for displayed image
         *
         * @private
         */
        _detectGrid: function () {
            var grid = 0;

            if (!obj.$nodes.grid) {
                return;
            }

            if (
                obj._iconData.width === obj._iconData.height &&
                obj._iconData.height === obj._iconData.inlineHeight
            ) {
                grid = this._hasGrid(obj._iconData.width);
            }

            if (obj._sampleGrid !== grid) {
                obj._sampleGrid = grid;
            }
            obj._updateGridButton();
        },

        /**
         * Toggle grid
         * @param event
         * @private
         */
        _toggleGrid: function (event) {
            event.preventDefault();

            obj._showGrid = !obj._showGrid;
            obj.$nodes.grid.classList[obj._showGrid ? 'add' : 'remove']('si-grid--active');
            obj._updateSample();
        },

        /**
         * Update grid button visibility
         *
         * @private
         */
        _updateGridButton: function () {
            var visible = obj._sampleGrid > 0 && (obj._codeMode !== 'icon' || !obj._changes.inline);

            obj.$nodes.grid.classList[visible ? 'remove' : 'add']('si-grid--hidden');
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Code modes
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Change selected code mode tab
         *
         * @param [oldMode]
         */
        _updateCodeModeTabs: function (oldMode) {
            if (oldMode !== void 0) {
                obj.$nodes.codeModeTab[oldMode].classList.remove('tab--selected');
                obj.$nodes.sectionCode.classList.remove('si-mode--' + oldMode);
                obj.$nodes.sectionProps.classList.remove('si-mode--' + oldMode);
            }
            obj.$nodes.codeModeTab[obj._codeMode].classList.add('tab--selected');
            obj.$nodes.sectionCode.classList.add('si-mode--' + obj._codeMode);
            obj.$nodes.sectionProps.classList.add('si-mode--' + obj._codeMode);
            obj._togglePropModeTabs();
        },

        /**
         * Code mode tab clicked
         *
         * @param {string} mode
         * @param {object} event
         */
        _codeModeTabClicked: function (mode, event) {
            var oldMode = obj._codeMode;

            event.preventDefault();
            if (obj._codeMode === mode) {
                return;
            }
            obj._codeMode = mode;
            obj._updateCodeModeTabs(oldMode);
            obj._updateVisibleSamples();
        },

        /**
         * Update code and icon samples
         */
        _updateVisibleSamples: function () {
            obj._detectGrid();
            obj._updateCodeSample();
            obj._updateSample();
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Customization
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //


        /**
         * Change selected customization mode tab
         *
         * @param [oldMode]
         */
        _updatePropModeTabs: function (oldMode) {
            if (oldMode !== void 0) {
                obj.$nodes.propModeTab[oldMode].classList.remove('tab--selected');
                obj.$nodes.sectionCode.classList.remove('si-props--' + oldMode);
                obj.$nodes.sectionProps.classList.remove('si-props--' + oldMode);
            }
            obj.$nodes.propModeTab[obj._propMode].classList.add('tab--selected');
            obj.$nodes.sectionCode.classList.add('si-props--' + obj._propMode);
            obj.$nodes.sectionProps.classList.add('si-props--' + obj._propMode);
        },

        /**
         * Customization mode tab clicked
         *
         * @param {string} mode
         * @param {object} event
         */
        _propModeTabClicked: function (mode, event) {
            var oldMode = obj._propMode;

            event.preventDefault();
            if (obj._propMode === mode) {
                return;
            }
            obj._propMode = mode;
            obj._updatePropModeTabs(oldMode);
        },

        /**
         * Show/hide customization tabs
         */
        _togglePropModeTabs: function (force) {
            var inlineVisible = obj._codeMode !== 'bg',
                count, i;

            if (!force && inlineVisible === obj._inlinePropVisible) {
                return;
            }
            obj._inlinePropVisible = inlineVisible;

            if (!inlineVisible && obj._propMode === 'inline') {
                obj._propMode = obj._showColor ? 'color' : 'size';
                obj._updatePropModeTabs('inline');
            }
            if (!obj._showColor && obj._propMode === 'color') {
                obj._propMode = inlineVisible ? 'inline' : 'size';
                obj._updatePropModeTabs('color');
            }
            count = 2 + (obj._showColor ? 1 : 0) + (inlineVisible ? 1 : 0);

            // Toggle tabs
            obj.$nodes.propModeTab.color.style.display = obj._showColor ? '' : 'none';
            obj.$nodes.propModeTab.inline.style.display = inlineVisible ? '' : 'none';

            for (i = 2; i < 5; i++) {
                obj.$nodes.propModeTabs.classList[i === count ? 'add' : 'remove']('tabs--' + i);
            }
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Sample
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Change sample color
         *
         * @param event
         */
        _changeBackground: function (event) {
            var color;

            event.preventDefault();

            color = event.target.getAttribute('data-color');
            if (!color || color === obj._sampleColor) {
                return;
            }
            obj.$nodes.sample.classList.remove('si-color--' + obj._sampleColor);
            obj._sampleColor = color;
            obj.$nodes.sample.classList.add('si-color--' + obj._sampleColor);
            if (obj._codeMode !== 'icon' && obj._showColor && obj._changes.color === null) {
                obj._updateVisibleSamples();
            } else if (obj._showGrid && obj._sampleGrid) {
                obj._updateSample();
            }
        },

        /**
         * Get properties
         *
         * @property [props]
         * @property [options]
         */
        _getGeneratedProperties: function (props, options) {
            var changes = obj._changes,
                color,
                prefix;

            props = typeof props === 'object' ? props : {};
            options = typeof options === 'object' ? options : {};
            prefix = options.prefix === void 0 ? '' : options.prefix;

            // Generate default color
            color = changes.color;
            if (options.defaultColor && color === null) {
                color = '#626262';
                switch (obj._sampleColor) {
                    case 'white':
                    case 'gray1':
                        color = 'black';
                        break;

                    case 'black':
                    case 'gray2':
                        color = 'white';
                        break;
                }
            }

            // Add color
            if (obj._showColor && color !== null) {
                if (options.style) {
                    props.style = 'color: ' + color + ';';
                }
                if (options.color) {
                    props[prefix + 'color'] = color;
                }
            }

            // Add inline
            if (options.inline) {
                props[prefix + 'inline'] = changes.inline ? 'true' : 'false';
            }

            // Dimensions
            if (options.size) {
                ['width', 'height'].forEach(function (attr) {
                    if (changes[attr] !== null) {
                        props[prefix + attr] = changes[attr];
                    }
                });
            }
            if (changes.crop) {
                props[prefix + 'align'] = 'crop';
            }

            // Transformations
            if (changes.rotate) {
                props[prefix + 'rotate'] = changes.rotate * 90 + 'deg';
            }

            if (changes.hFlip) {
                if (changes.vFlip) {
                    props[prefix + 'flip'] = 'horizontal,vertical';
                } else {
                    props[prefix + 'flip'] = 'horizontal';
                }
            } else if (changes.vFlip) {
                props[prefix + 'flip'] = 'vertical';
            }

            return props;
        },

        /**
         * Update sample and input codes
         */
        _updateSample: function () {
            var changes = obj._changes,
                mode = obj._codeMode,
                icon = obj._icon,
                $sample = obj.$nodes.sample,
                grid, url, html, props, node, code;


            grid = obj._showGrid && obj._sampleGrid ? ' style="' + obj._gridBackground(obj._sampleGrid) + '"' : '';

            switch (mode) {
                case 'bg':
                    props = obj._getGeneratedProperties({}, {
                        color: true,
                        size: true
                    });

                    url = api + icon + '.svg?';
                    Object.keys(props).forEach(function (key, index) {
                        url += (index > 0 ? '&' : '') + key + '=' + obj._encodeValue(props[key]);
                    });
                    html = 'background: url(\'' + url + '\') no-repeat center center' + (!props.height && !props.width ? ' / contain' : '') + ';';
                    $sample.innerHTML = '<div class="si-colored-wrapper si-background-wrapper"' + grid + '><div style="' + html + '"></div></div>';
                    break;

                case 'svg':
                    props = obj._getGeneratedProperties({}, {
                        prefix: 'data-',
                        style: true,
                        inline: true,
                        size: true
                    });
                    if (changes.width === null && changes.height === null) {
                        props['data-width'] = props['data-height'] = '1em';
                        code = Iconify.getSVG(icon, props);
                        if (code === null) {
                            code = '';
                        }
                        $sample.innerHTML = '<div class="si-svg-wrapper si-colored-wrapper"' + grid + '>' + code + '</div>';
                    } else {
                        code = Iconify.getSVG(icon, props);
                        if (code === null) {
                            code = '';
                        }
                        $sample.innerHTML = '<div class="si-svg-wrapper si-colored-wrapper si-svg-wrapper--auto-height"' + grid + '>' + code + '</div>';
                    }
                    break;

                default:
                    // HTML mode
                    node = document.createElement('span');
                    node.className = 'iconify icon:' + icon;
                    props = obj._getGeneratedProperties({}, {
                        size: true,
                        prefix: 'data-',
                        style: true,
                        inline: true
                    });
                    Object.keys(props).forEach(function (key) {
                        node.setAttribute(key, props[key]);
                    });

                    if (changes.inline) {
                        html = node.outerHTML;
                        $sample.innerHTML = '<p class="si-colored-wrapper si-icon-wrapper si-icon-wrapper--inline"' + (obj._showColor && changes.color !== null ? ' style="color:' + changes.color + ';"' : '') + '>Inline icon with sample ' + html + ' text around it!</p>';
                        return;
                    }

                    if (changes.width === null && changes.height === null) {
                        node.setAttribute('data-width', '1em');
                        node.setAttribute('data-height', '1em');
                        html = node.outerHTML;
                        $sample.innerHTML = '<div class="si-colored-wrapper si-icon-wrapper si-icon-wrapper--block si-icon-wrapper--full-block"' + grid + '>' + html + '</div>';
                        return;
                    }

                    html = node.outerHTML;
                    $sample.innerHTML = '<div class="si-colored-wrapper si-icon-wrapper si-icon-wrapper--block">' + html + '</div>';
            }
        },

        /**
         * Encode value for URL
         *
         * @param {string} value
         * @returns {string}
         */
        _encodeValue: function (value) {
            return encodeURIComponent(value.toString().replace(/\s+/g, ''));
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Code samples
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Update visible code samples
         */
        _updateCodeSample: function () {
            var changes = obj._changes,
                mode = obj._codeMode,
                icon = obj._icon,
                iconData = obj._iconData,
                nodes, nodeKeys, code, show, props,
                name, parts, prefix, iconName;

            switch (mode) {
                case 'bg':
                    props = obj._getGeneratedProperties({}, {
                        color: true,
                        size: true
                    });

                    url = api + icon + '.svg';
                    Object.keys(props).forEach(function (key, index) {
                        url += (index > 0 ? '&' : '?') + key + '=' + obj._encodeValue(props[key]);
                    });

                    obj.$nodes.codeBG.textarea.value = 'background: url(\'' + url + '\') no-repeat center center' + (!props.height && !props.width ? ' / contain' : '') + ';';

                    if (!props.height && !props.width) {
                        url += url.indexOf('?') >= 0 ? '&' : '?';
                        url += 'height=' + (iconData.height < 33 ?
                            iconData.height :
                            (iconData.verticalAlign === -0.125 ? '16' : '14')
                        );
                        url += iconData.inlineHeight === iconData.height ? '' : '&inline=true';
                    }
                    obj.$nodes.codePseudo.textarea.value = 'content: url(\'' + url + '\');\nvertical-align: ' + iconData.verticalAlign + 'em;';
                    break;

                case 'svg':
                    // Generate download link
                    props = obj._getGeneratedProperties({}, {
                        inline: true,
                        color: true,
                        defaultColor: true,
                        size: true
                    });

                    code = api + icon + '.svg?download=true&box=true';
                    Object.keys(props).forEach(function (attr) {
                        code += '&' + attr + '=' + obj._encodeValue(props[attr]);
                    });
                    if (props.height === void 0 && props.width === void 0) {
                        code += '&height=auto';
                    }
                    obj.$nodes.downloadLink.setAttribute('href', code);

                    // Generate code
                    props = obj._getGeneratedProperties({}, {
                        prefix: 'data-',
                        defaultColor: true,
                        color: true,
                        inline: true,
                        size: true
                    });
                    code = Iconify.getSVG(icon, props);
                    show = false;
                    if (code === null) {
                        obj.$nodes.codeSVG.textarea.value = 'Error getting SVG icon contents...';
                    } else {
                        code = code.replace(/currentColor/ig, props['data-color']);
                        obj.$nodes.codeSVG.textarea.value = code;

                        // Add rect matching viewBox
                        try {
                            (function () {
                                var index, viewBox;

                                index = code.indexOf('viewBox="');
                                if (index === -1) {
                                    return;
                                }

                                viewBox = code.slice(index + 9).split('"').shift().split(' ');
                                if (!viewBox || viewBox.length !== 4) {
                                    return;
                                }

                                index = code.indexOf('</svg>');
                                if (index === -1) {
                                    return;
                                }

                                code = code.slice(0, index) + '<rect x="' + viewBox[0] + '" y="' + viewBox[1] + '" width="' + viewBox[2] + '" height="' + viewBox[3] + '" fill="rgba(0, 0, 0, 0)" />' + code.slice(index);

                                show = true;
                            })();
                        } catch (err) {
                        }
                    }

                    obj.$nodes.svg2.forEach(function ($node) {
                        $node.style.display = show ? '' : 'none';
                    });
                    if (show) {
                        obj.$nodes.codeSVG2.textarea.value = code;
                    }

                    break;

                case 'react':
                    // React
                    parts = icon.split(':');
                    if (parts.length > 1) {
                        prefix = parts.shift();
                        iconName = parts.shift();
                    } else {
                        parts = icon.split('-');
                        prefix = parts.shift();
                        iconName = parts.join('-');
                    }

                    name = '';
                    parts = iconName.split('-');
                    parts.forEach(function (part, index) {
                        name += index ? part.slice(0, 1).toUpperCase() + part.slice(1) : part
                    });
                    if (name.charCodeAt(0) < 97 || name.charCodeAt(0) > 122) {
                        // Not a-z - add "icon" at start
                        name = 'icon' + name.slice(0, 1).toUpperCase() + name.slice(1);
                    } else if (parts.length < 2) {
                        // Add "Icon" to avoid reserved keywords
                        name += 'Icon';
                    }
                    obj.$nodes.codeReactImport.textarea.value = '// npm install --save-dev @iconify/react @iconify-icons/' + prefix + '\nimport { Icon, InlineIcon } from \'@iconify/react\';\nimport ' + name + ' from \'@iconify-icons/' + prefix + '/' + iconName + '\';\n';

                    // Generate usage
                    props = obj._getGeneratedProperties({}, {
                        prefix: '',
                        defaultColor: false,
                        color: true,
                        inline: false,
                        size: true
                    });

                    code = (obj._changes.inline ? '<InlineIcon' : '<Icon') + ' icon={' + name + '}';
                    Object.keys(props).forEach(function (prop) {
                        code += ' ' + prop + '="' + props[prop] + '"';
                    });
                    code += ' />';
                    obj.$nodes.codeReactUsage.textarea.value = code;

                    break;

                default:
                    // HTML mode
                    nodes = {
                        Default: document.createElement('span'),
                        Classes: document.createElement('span'),
                        Custom: document.createElement('span')
                    };
                    nodeKeys = Object.keys(nodes);

                    nodes.Default.setAttribute('class', 'iconify');
                    nodes.Classes.setAttribute('class', 'iconify');

                    nodes.Default.setAttribute('data-icon', icon);
                    nodes.Custom.setAttribute('data-icon', icon);
                    nodes.Classes.classList.add('icon:' + icon);

                    if (!changes.inline) {
                        nodes.Default.setAttribute('data-inline', 'false');
                        nodes.Classes.classList.add('icon-inline:false');
                    }

                    props = obj._getGeneratedProperties({}, {
                        size: true,
                        style: true
                    });
                    Object.keys(props).forEach(function (attr) {
                        if (attr === 'style') {
                            nodeKeys.forEach(function (key) {
                                nodes[key].setAttribute(attr, props[attr]);
                            });
                        } else {
                            nodes.Default.setAttribute('data-' + attr, props[attr]);
                            nodes.Custom.setAttribute('data-' + attr, props[attr]);
                            nodes.Classes.classList.add('icon-' + attr + ':' + props[attr].trim().replace(/\s+/g, ''));
                        }
                    });

                    nodeKeys.forEach(function (key) {
                        var html = nodes[key].outerHTML;
                        if (key === 'Custom') {
                            html = html.replace('<span', '<iconify-icon').replace('</span', '</iconify-icon');
                        }
                        if (obj.$nodes['code' + key]) {
                            obj.$nodes['code' + key].textarea.value = html;
                        }
                    });
            }
        },

        /**
         * Copy code to clipboard
         *
         * @param $items
         */
        _copyToClipboard: function ($items) {
            function copied() {
                var className = 'si-code-notice--visible';

                $items.notice.classList.add(className);
                setTimeout(function () {
                    try {
                        $items.notice.classList.remove(className);
                    } catch (err) {
                    }
                }, 2000);
            }

            // Select contents of input
            $items.textarea.select();

            try {
                // Modern way
                if (document.execCommand && document.execCommand('copy')) {
                    copied();
                    return;
                }

                // Ancient way
                if (window.clipboardData) {
                    window.clipboardData.setData('Text', $items.textarea.value);
                    copied();
                }
            } catch (err) {
            }
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Checkboxes
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Toggle boolean checkbox
         * @param name
         * @param value
         * @param event
         */
        _toggleProperty: function (name, value, event) {
            event.preventDefault();

            if (obj._changes[name] === value) {
                return;
            }
            obj._changes[name] = value;
            obj._updateVisibleSamples();

            if (name === 'inline') {
                obj._updateInlineVisibility();
            }
        },

        /**
         * Toggle inline/block only nodes
         */
        _updateInlineVisibility: function () {
            var $nodes, i;

            $nodes = obj.$nodes.visibleInline;
            for (i = 0; i < $nodes.length; i++) {
                $nodes[i].style.display = obj._changes.inline ? 'block' : 'none';
            }

            $nodes = obj.$nodes.hiddenInline;
            for (i = 0; i < $nodes.length; i++) {
                $nodes[i].style.display = obj._changes.inline ? 'none' : 'block';
            }

            obj._checkBox(obj.$nodes.inline[obj._changes.inline ? 'inline' : 'block']);
            obj._uncheckBox(obj.$nodes.inline[obj._changes.inline ? 'block' : 'inline']);
        },

        /**
         * Check/uncheck checkbox
         *
         * @param $node
         */
        _checkBox: function ($node) {
            $node.classList.add('si-checkbox--checked');
            $node.querySelector('.iconify').outerHTML = htmlSamples.checkboxChecked;
        },

        _uncheckBox: function ($node) {
            $node.classList.remove('si-checkbox--checked');
            $node.querySelector('.iconify').outerHTML = htmlSamples.checkboxUnchecked;
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Inputs: size and color
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Change input value
         *
         * @param key
         * @param keyup
         */
        _changeInput: function (key, keyup) {
            var value = obj.$nodes[key].value.trim(),
                node;

            if (obj._changes[key] === value) {
                return;
            }

            if (!value.length) {
                if (obj._changes[key] === null) {
                    return;
                }
                obj._changes[key] = null;
                obj.$nodes[key + 'Reset'].style.display = 'none';
                obj._updateVisibleSamples();
                return;
            }

            // Test value by assigning it to div
            obj.$nodes[key + 'Reset'].style.display = 'inline';

            node = document.createElement('div');
            node.style[key] = 'inherit';
            node.style[key] = value;

            if (node.style[key] === 'inherit' && key !== 'color') {
                node.style[key] = value + 'px';
            }
            if (node.style[key] === 'inherit') {
                return;
            }

            obj._changes[key] = value;
            obj._updateVisibleSamples();
        },

        /**
         * Reset input value
         *
         * @param key
         * @param event
         */
        _resetInput: function (key, event) {
            event.preventDefault();
            obj.$nodes[key].value = '';
            obj._changeInput(key, false);
        },

        /**
         * Set final value
         *
         * @param key
         * @param event
         */
        _updateInputValue: function (key, event) {
            switch (key) {
                case 'color':
                    obj.$nodes[key].value = obj._changes[key] === null ? '' : obj._changes[key];
                    obj.$nodes[key + 'Reset'].style.display = obj._changes[key] === null ? 'none' : 'inline';
                    break;
            }
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Transformations
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Generate HTML code for rotation link
         *
         * @param rotation
         */
        _updateRotationNode: function (rotation) {
            obj.$nodes.rotate[rotation].innerHTML = '<span class="iconify arty-animated" data-icon="arty-animated:16-' + (rotation ? 'arc-' + rotation : 'close') + '"></span><strong>' + rotation + '&deg;</strong>';
            obj.$nodes.rotate[rotation].classList[obj._changes.rotate === (rotation / 90) ? 'add' : 'remove']('si-transform--active');
        },

        /**
         * Rotation clicked
         *
         * @param rotation
         * @param event
         */
        _rotationClicked: function (rotation, event) {
            var value = rotation / 90,
                oldValue = obj._changes.rotate;

            event.preventDefault();
            if (obj._changes.rotate === value) {
                if (!value) {
                    return;
                }
                value = 0;
            }

            obj._changes.rotate = value;
            obj._updateRotationNode(oldValue * 90);
            obj._updateRotationNode(value * 90);

            obj._updateVisibleSamples();
        },

        /**
         * Generate HTML code for flip link
         *
         * @param flip
         */
        _updateFlipNode: function (flip) {
            var arrows = flip === 'h' ? 'horizontal' : 'vertical',
                text = flip === 'h' ? 'Horizontal' : 'Vertical';

            obj.$nodes.flip[flip].innerHTML = '<span class="iconify arty-animated" data-icon="arty-animated:16-double-arrow-' + arrows + '"></span><strong>' + text + '</strong>';
            obj.$nodes.flip[flip].classList[obj._changes[flip + 'Flip'] ? 'add' : 'remove']('si-transform--active');
        },

        /**
         * Flip clicked
         *
         * @param flip
         * @param event
         */
        _flipClicked: function (flip, event) {
            var key = flip + 'Flip';

            event.preventDefault();

            obj._changes[key] = !obj._changes[key];
            obj._updateFlipNode(flip);
            obj._updateVisibleSamples();
        },

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
        //
        // Misc stuff
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

        /**
         * Toggle options
         *
         * @param event
         */
        _toggleOptions: function (event) {
            var $link, $node, toggle;

            $link = event.target;
            while ($link.tagName !== 'A') {
                $link = $link.parentNode;
                if (!$link) {
                    return;
                }
            }

            event.preventDefault();
            target = $link.getAttribute('data-target');
            if (!target) {
                return;
            }

            $node = $container.querySelector('.si-options--value[data-target="' + target + '"]');
            if (!$node) {
                return;
            }

            $node.style.display = 'block';

            toggle = $link.getAttribute('data-toggle');
            if (toggle === 'once') {
                $link.style.display = 'none';
            }
        },

        /**
         * Iconify event handler. Triggered when new icons are loaded
         */
        _IconifyEvent: function () {
            if (obj._icon === null || obj._iconLoaded) {
                return;
            }
            obj._iconLoaded = Iconify.iconExists(obj._icon);
            if (obj._iconLoaded) {
                obj.refresh();
            }
        }
    };

    document.addEventListener('IconifyAddedIcons', obj._IconifyEvent);

    return obj;
};
Iconify.ready(function() {
    var $searchContainer,
        $iconContainer,
        currentIcon;

    function showIconFinder() {
        var iconObject = null;

        if ($iconContainer) {
            iconObject = DisplayIcon($iconContainer);
        }

        // Replace icons list with search results
        $searchContainer.classList.remove('loading');

        if (document.collectionPageSize !== void 0) {
            IconifySearch.config.perPage = document.collectionPageSize;
        }
        if (document.IconifyAPI !== void 0) {
            IconifySearch.config.API = document.IconifyAPI;
        }
        if (document.collectionsInfo !== void 0) {
            IconifySearch.cacheCollectionsInfo(document.collectionsInfo);
        }
        if (document.collectionIcons !== void 0) {
            IconifySearch.cacheCollectionData(document.collectionIcons);
        }

        setTimeout(function() {
            function setURL(url, title) {
                if (typeof window.ga === 'function') {
                    window.ga('send', 'pageview', {
                        page: url,
                        location: 'https://iconify.design' + url,
                        title: title
                    });
                }
            }

            IconifySearch.create($searchContainer, {
                prefix: document.collectionPrefix === void 0 ? null : document.collectionPrefix,
                query: document.collectionQuery !== void 0 ? document.collectionQuery : null,
                show: true,
                append: false,
                overlay: false,
                poweredBy: false,
                callback: function(event, icon) {
                    var url;

                    if (iconObject === null || !icon) {
                        return;
                    }

                    switch (event) {
                        case 'submit':
                            if (icon.prefix && icon.prefixTitle) {
                                setURL('/icon-sets/' + icon.prefix + '/' + icon.name + '.html', icon.name + ' &bull; ' + icon.prefixTitle + ' &bull; Iconify');
                            }
                            iconObject.show(icon.icon);
                            break;

                        case 'collection':
                            if (icon.prefix && icon.prefixTitle) {
                                setURL('/icon-sets/' + icon.prefix + '/', icon.prefixTitle + ' &bull; Iconify');
                            }
                            break;
                    }
                }
            });

        }, 0);
    }

    // Check for icon placeholder
    $iconContainer = document.getElementById('current-icon');

    // Check for collection
    $searchContainer = document.getElementById('collection-icons');
    if ($searchContainer && document.collectionIcons) {
        showIconFinder();
        return;
    }

    // Check for index
    $searchContainer = document.getElementById('collections-search');
    if ($searchContainer) {
        showIconFinder();
        return;
    }

    // Check for icon
    if ($iconContainer) {
        currentIcon = $iconContainer.getAttribute('data-icon');
        if (currentIcon) {
            DisplayIcon($iconContainer).show(currentIcon);
        }
    }
});
Iconify.addCollection({"prefix":"mdi","icons":{"alert":{"body":"<path d=\"M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2L1 21z\" fill=\"currentColor\"/>"},"opacity":{"body":"<path d=\"M17.66 8L12 2.35L6.34 8A8.02 8.02 0 0 0 4 13.64c0 2 .78 4.11 2.34 5.67a7.99 7.99 0 0 0 11.32 0c1.56-1.56 2.34-3.67 2.34-5.67S19.22 9.56 17.66 8M6 14c0-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 18 12 18 14H6z\" fill=\"currentColor\"/>"},"flask":{"body":"<path d=\"M6 22a3 3 0 0 1-3-3c0-.6.18-1.16.5-1.63L9 7.81V6a1 1 0 0 1-1-1V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1v1.81l5.5 9.56c.32.47.5 1.03.5 1.63a3 3 0 0 1-3 3H6m-1-3a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1c0-.21-.07-.41-.18-.57l-2.29-3.96L14 17l-5.07-5.07l-3.75 6.5c-.11.16-.18.36-.18.57m8-9a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1z\" fill=\"currentColor\"/>"},"home":{"body":"<path d=\"M10 20v-6h4v6h5v-8h3L12 3L2 12h3v8h5z\" fill=\"currentColor\"/>"},"image-multiple":{"body":"<path d=\"M22 16V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2m-11-4l2.03 2.71L16 11l4 5H8M2 6v14a2 2 0 0 0 2 2h14v-2H4V6\" fill=\"currentColor\"/>"},"file-xml":{"body":"<path d=\"M13 8.998h5.5l-5.5-5.5v5.5zm-7-7h8l6 6v12a2 2 0 0 1-2 2H5.99a1.992 1.992 0 0 1-1.99-2l.01-16c0-1.104.884-2 1.99-2zM6.121 15.5l3.742 3.743l1.414-1.415L8.95 15.5l2.328-2.328l-1.414-1.415L6.122 15.5zm11.156 0l-3.742-3.743l-1.414 1.415L14.45 15.5l-2.328 2.328l1.414 1.415l3.742-3.743z\" fill=\"currentColor\"/>","hidden":true},"comment":{"body":"<path d=\"M9 22a1 1 0 0 1-1-1v-3H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6.1l-3.7 3.71c-.2.19-.45.29-.7.29H9z\" fill=\"currentColor\"/>"},"github-box":{"body":"<path d=\"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4.44c-.32-.07-.33-.68-.33-.89l.01-2.47c0-.84-.29-1.39-.61-1.67c2.01-.22 4.11-.97 4.11-4.44c0-.98-.35-1.79-.92-2.42c.09-.22.4-1.14-.09-2.38c0 0-.76-.23-2.48.93c-.72-.2-1.48-.3-2.25-.31c-.76.01-1.54.11-2.25.31c-1.72-1.16-2.48-.93-2.48-.93c-.49 1.24-.18 2.16-.09 2.38c-.57.63-.92 1.44-.92 2.42c0 3.47 2.1 4.22 4.1 4.47c-.26.2-.49.6-.57 1.18c-.52.23-1.82.63-2.62-.75c0 0-.48-.86-1.38-.93c0 0-.88 0-.06.55c0 0 .59.28 1 1.32c0 0 .52 1.75 3.03 1.21l.01 1.53c0 .21-.02.82-.34.89H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\" fill=\"currentColor\"/>","hidden":true},"alert-octagon":{"body":"<path d=\"M13 13h-2V7h2m-2 8h2v2h-2m4.73-14H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3z\" fill=\"currentColor\"/>"},"food-apple":{"body":"<path d=\"M20 10c2 3-3 12-5 12s-2-1-3-1s-1 1-3 1s-7-9-5-12s5-3 7-2V5C5.38 8.07 4.11 3.78 4.11 3.78S6.77.19 11 5V3h2v5c2-1 5-1 7 2z\" fill=\"currentColor\"/>"},"chart-gantt":{"body":"<path d=\"M2 5h8V2h2v20h-2v-4H6v-3h4v-2H4v-3h6V8H2V5m12 0h3v3h-3V5m0 5h5v3h-5v-3m0 5h8v3h-8v-3z\" fill=\"currentColor\"/>"},"arrow-up-box":{"body":"<path d=\"M21 19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14m-8-1V9.5l3.5 3.5l1.42-1.42L12 5.66l-5.92 5.92L7.5 13L11 9.5V18h2z\" fill=\"currentColor\"/>"},"all-inclusive":{"body":"<path d=\"M18.6 6.62c-1.44 0-2.8.56-3.77 1.53L7.8 14.39c-.64.64-1.49.99-2.4.99C3.53 15.38 2 13.87 2 12c0-1.87 1.53-3.38 3.4-3.38c.91 0 1.76.35 2.44 1.03l1.13 1l1.53-1.34L9.22 8.2A5.37 5.37 0 0 0 5.4 6.62C2.42 6.62 0 9.04 0 12s2.42 5.38 5.4 5.38c1.44 0 2.8-.56 3.77-1.53l7.03-6.24c.64-.64 1.49-.99 2.4-.99c1.87 0 3.4 1.51 3.4 3.38c0 1.87-1.53 3.38-3.4 3.38c-.9 0-1.76-.35-2.44-1.03L15 13.34l-1.5 1.34l1.28 1.12a5.386 5.386 0 0 0 3.82 1.57c2.98 0 5.4-2.41 5.4-5.37c0-3-2.42-5.38-5.4-5.38z\" fill=\"currentColor\"/>"},"account-search":{"body":"<path d=\"M15.5 12c2.5 0 4.5 2 4.5 4.5c0 .88-.25 1.71-.69 2.4l3.08 3.1L21 23.39l-3.12-3.07c-.69.43-1.51.68-2.38.68c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5m0 2a2.5 2.5 0 0 0-2.5 2.5a2.5 2.5 0 0 0 2.5 2.5a2.5 2.5 0 0 0 2.5-2.5a2.5 2.5 0 0 0-2.5-2.5M10 4a4 4 0 0 1 4 4c0 .91-.31 1.75-.82 2.43c-.86.32-1.63.83-2.27 1.47L10 12a4 4 0 0 1-4-4a4 4 0 0 1 4-4M2 20v-2c0-2.12 3.31-3.86 7.5-4c-.32.78-.5 1.62-.5 2.5c0 1.29.38 2.5 1 3.5H2z\" fill=\"currentColor\"/>"},"exit-to-app":{"body":"<path d=\"M19 3H5c-1.11 0-2 .89-2 2v4h2V5h14v14H5v-4H3v4a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m-8.92 12.58L11.5 17l5-5l-5-5l-1.42 1.41L12.67 11H3v2h9.67l-2.59 2.58z\" fill=\"currentColor\"/>"},"slack":{"body":"<path d=\"M6 15a2 2 0 0 1-2 2a2 2 0 0 1-2-2a2 2 0 0 1 2-2h2v2m1 0a2 2 0 0 1 2-2a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2a2 2 0 0 1-2-2v-5m2-8a2 2 0 0 1-2-2a2 2 0 0 1 2-2a2 2 0 0 1 2 2v2H9m0 1a2 2 0 0 1 2 2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2a2 2 0 0 1 2-2h5m8 2a2 2 0 0 1 2-2a2 2 0 0 1 2 2a2 2 0 0 1-2 2h-2v-2m-1 0a2 2 0 0 1-2 2a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2a2 2 0 0 1 2 2v5m-2 8a2 2 0 0 1 2 2a2 2 0 0 1-2 2a2 2 0 0 1-2-2v-2h2m0-1a2 2 0 0 1-2-2a2 2 0 0 1 2-2h5a2 2 0 0 1 2 2a2 2 0 0 1-2 2h-5z\" fill=\"currentColor\"/>"},"shuffle":{"body":"<path d=\"M14.83 13.41l-1.41 1.41l3.13 3.13L14.5 20H20v-5.5l-2.04 2.04l-3.13-3.13M14.5 4l2.04 2.04L4 18.59L5.41 20L17.96 7.46L20 9.5V4m-9.41 5.17L5.41 4L4 5.41l5.17 5.17l1.42-1.41z\" fill=\"currentColor\"/>"},"xml":{"body":"<path d=\"M12.89 3l1.96.4L11.11 21l-1.96-.4L12.89 3m6.7 9L16 8.41V5.58L22.42 12L16 18.41v-2.83L19.59 12M1.58 12L8 5.58v2.83L4.41 12L8 15.58v2.83L1.58 12z\" fill=\"currentColor\"/>"},"thought-bubble-outline":{"body":"<path d=\"M3.5 19A1.5 1.5 0 0 1 5 20.5A1.5 1.5 0 0 1 3.5 22A1.5 1.5 0 0 1 2 20.5A1.5 1.5 0 0 1 3.5 19m5-3a2.5 2.5 0 0 1 2.5 2.5A2.5 2.5 0 0 1 8.5 21A2.5 2.5 0 0 1 6 18.5A2.5 2.5 0 0 1 8.5 16m6-1c-1.19 0-2.27-.5-3-1.35c-.73.85-1.81 1.35-3 1.35c-1.96 0-3.59-1.41-3.93-3.26A4.02 4.02 0 0 1 2 8a4 4 0 0 1 4-4l.77.07C7.5 3.41 8.45 3 9.5 3c1.19 0 2.27.5 3 1.35c.73-.85 1.81-1.35 3-1.35c1.96 0 3.59 1.41 3.93 3.26A4.02 4.02 0 0 1 22 10a4 4 0 0 1-4 4l-.77-.07c-.73.66-1.68 1.07-2.73 1.07M6 6a2 2 0 0 0-2 2a2 2 0 0 0 2 2c.33 0 .64-.08.92-.22A2 2 0 0 0 6.5 11a2 2 0 0 0 2 2c.6 0 1.14-.27 1.5-.69l1.47-1.68L13 12.34c.38.4.91.66 1.5.66c1 0 1.83-.74 2-1.7c.34.43.89.7 1.5.7a2 2 0 0 0 2-2a2 2 0 0 0-2-2c-.33 0-.64.08-.92.22A2 2 0 0 0 17.5 7a2 2 0 0 0-2-2c-.59 0-1.12.26-1.5.66l-1.53 1.71L11 5.69c-.36-.42-.9-.69-1.5-.69c-1 0-1.83.74-2 1.7C7.16 6.27 6.61 6 6 6m2.5 11.5a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1z\" fill=\"currentColor\"/>"},"source-merge":{"body":"<path d=\"M7 3a3 3 0 0 1 3 3c0 1.29-.81 2.39-1.96 2.81c.54 5 5.04 5.96 7.15 6.15A2.985 2.985 0 0 1 18 13a3 3 0 0 1 3 3a3 3 0 0 1-3 3c-1.31 0-2.43-.84-2.84-2c-4.25-.2-5.72-1.81-7.16-3.61v1.78c1.17.41 2 1.52 2 2.83a3 3 0 0 1-3 3a3 3 0 0 1-3-3c0-1.31.83-2.42 2-2.83V8.83A2.99 2.99 0 0 1 4 6a3 3 0 0 1 3-3m0 2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1m0 12a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1m11-2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1z\" fill=\"currentColor\"/>"},"login":{"body":"<path d=\"M10 17v-3H3v-4h7V7l5 5l-5 5m0-15h9a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-9a2 2 0 0 1-2-2v-2h2v2h9V4h-9v2H8V4a2 2 0 0 1 2-2z\" fill=\"currentColor\"/>"},"newspaper":{"body":"<path d=\"M20 11H4V8h16m0 7h-7v-2h7m0 6h-7v-2h7m-9 2H4v-6h7m9.33-8.33L18.67 3L17 4.67L15.33 3l-1.66 1.67L12 3l-1.67 1.67L8.67 3L7 4.67L5.33 3L3.67 4.67L2 3v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V3l-1.67 1.67z\" fill=\"currentColor\"/>"},"map-marker-distance":{"body":"<path d=\"M6.5 8.11c-.89 0-1.61-.72-1.61-1.61A1.61 1.61 0 0 1 6.5 4.89c.89 0 1.61.72 1.61 1.61A1.61 1.61 0 0 1 6.5 8.11M6.5 2C4 2 2 4 2 6.5c0 3.37 4.5 8.36 4.5 8.36S11 9.87 11 6.5C11 4 9 2 6.5 2m11 6.11a1.61 1.61 0 0 1-1.61-1.61a1.609 1.609 0 1 1 3.22 0a1.61 1.61 0 0 1-1.61 1.61m0-6.11C15 2 13 4 13 6.5c0 3.37 4.5 8.36 4.5 8.36S22 9.87 22 6.5C22 4 20 2 17.5 2m0 14c-1.27 0-2.4.8-2.82 2H9.32a3 3 0 0 0-3.82-1.83A3.003 3.003 0 0 0 3.66 20a3.017 3.017 0 0 0 3.84 1.83c.85-.3 1.5-.98 1.82-1.83h5.37c.55 1.56 2.27 2.38 3.81 1.83A3 3 0 0 0 20.35 18c-.43-1.2-1.57-2-2.85-2m0 4.5A1.5 1.5 0 0 1 16 19a1.5 1.5 0 0 1 1.5-1.5A1.5 1.5 0 0 1 19 19a1.5 1.5 0 0 1-1.5 1.5z\" fill=\"currentColor\"/>"},"android":{"body":"<path d=\"M16.61 15.15c-.46 0-.84-.37-.84-.83s.38-.82.84-.82c.46 0 .84.36.84.82c0 .46-.38.83-.84.83m-9.2 0c-.46 0-.84-.37-.84-.83c0-.46.38-.82.84-.82c.46 0 .83.36.83.82c0 .46-.37.83-.83.83m9.5-5.01l1.67-2.88c.09-.17.03-.38-.13-.47c-.17-.1-.38-.04-.45.13l-1.71 2.91A10.15 10.15 0 0 0 12 8.91c-1.53 0-3 .33-4.27.91L6.04 6.91a.334.334 0 0 0-.47-.13c-.17.09-.22.3-.13.47l1.66 2.88C4.25 11.69 2.29 14.58 2 18h20c-.28-3.41-2.23-6.3-5.09-7.86z\" fill=\"currentColor\"/>"},"pencil-circle":{"body":"<path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10s10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1l-2.05-2.05l1-1c.1-.11.24-.16.38-.16m-1.97 1.74l2.06 2.06l-6.06 6.06H7.07v-2.06l6.06-6.06z\" fill=\"currentColor\"/>"},"account-off":{"body":"<path d=\"M12 4a4 4 0 0 1 4 4c0 1.95-1.4 3.58-3.25 3.93L8.07 7.25A4.004 4.004 0 0 1 12 4m.28 10l6 6L20 21.72L18.73 23l-3-3H4v-2c0-1.84 2.5-3.39 5.87-3.86L2.78 7.05l1.27-1.27L12.28 14M20 18v1.18l-4.86-4.86C18 14.93 20 16.35 20 18z\" fill=\"currentColor\"/>"}},"width":24,"height":24});
Iconify.addCollection({"prefix":"whh","icons":{"monitor":{"body":"<path d=\"M960.193 768h-384v128h64q53 0 90.5 37.5t37.5 90.5h-512q0-53 37.5-90.5t90.5-37.5h64V768h-384q-27 0-45.5-18.5T.193 704V64q0-26 18.5-45t45.5-19h896q26 0 45 19t19 45v640q0 27-18.5 45.5t-45.5 18.5zm-64-640h-768v512h768V128zm-704 448V191h512z\" fill=\"currentColor\"/>","width":1025},"business":{"body":"<path d=\"M377 61L253 204l121 570q6 16 8 22.5t.5 14.5t-8.5 15l-156 187q-10 11-25.5 11t-26.5-11L11 826q-10-13-9.5-21.5T11 774l121-571L9 61Q-4 49 2.5 24.5T31 0h325q22 0 27.5 24.5T377 61z\" fill=\"currentColor\"/>","width":386}},"width":1024,"height":1024,"inlineHeight":1024,"inlineTop":-5,"verticalAlign":-0.2});
Iconify.addCollection({"prefix":"ls","icons":{"server":{"body":"<path d=\"M36 160h508c19 0 36 17 36 36v84c0 20-17 36-36 36H36c-20 0-36-16-36-36v-84c0-19 16-36 36-36zm500 86v-16c0-6-6-12-12-12h-64c-7 0-12 6-12 12v16c0 7 5 12 12 12h64c6 0 12-5 12-12zM36 344h508c19 0 36 16 36 36v84c0 20-17 36-36 36H36c-20 0-36-16-36-36v-84c0-20 16-36 36-36zm500 86v-16c0-6-6-12-12-12h-64c-7 0-12 6-12 12v16c0 7 5 12 12 12h64c6 0 12-5 12-12zM36 528h508c19 0 36 16 36 36v84c0 20-17 36-36 36H36c-20 0-36-16-36-36v-84c0-20 16-36 36-36zm500 86v-16c0-7-6-12-12-12h-64c-7 0-12 5-12 12v16c0 7 5 12 12 12h64c6 0 12-5 12-12zm8-481H36c-6 0-12 1-17 3l61-83c12-16 38-29 58-29h304c19 0 45 13 57 29l62 83c-6-2-12-3-17-3z\" fill=\"currentColor\"/>","width":580,"height":684}},"width":717,"height":717,"inlineHeight":1086,"inlineTop":-205,"verticalAlign":-0.2});
Iconify.addCollection({"prefix":"ion","icons":{"ios-cart":{"body":"<circle transform=\"rotate(-1.057 159.995 423.97) scale(.99997)\" cx=\"160\" cy=\"424\" r=\"24\" fill=\"currentColor\"/><circle transform=\"matrix(.02382 -.9997 .9997 .02382 -48.51 798.282)\" cx=\"384.5\" cy=\"424\" r=\"24\" fill=\"currentColor\"/><path d=\"M463.8 132.2c-.7-2.4-2.8-4-5.2-4.2L132.9 96.5c-2.8-.3-6.2-2.1-7.5-4.7-3.8-7.1-6.2-11.1-12.2-18.6-7.7-9.4-22.2-9.1-48.8-9.3-9-.1-16.3 5.2-16.3 14.1 0 8.7 6.9 14.1 15.6 14.1s21.3.5 26 1.9c4.7 1.4 8.5 9.1 9.9 15.8 0 .1 0 .2.1.3.2 1.2 2 10.2 2 10.3l40 211.6c2.4 14.5 7.3 26.5 14.5 35.7 8.4 10.8 19.5 16.2 32.9 16.2h236.6c7.6 0 14.1-5.8 14.4-13.4.4-8-6-14.6-14-14.6H188.9c-2 0-4.9 0-8.3-2.8-3.5-3-8.3-9.9-11.5-26l-4.3-23.7c0-.3.1-.5.4-.6l277.7-47c2.6-.4 4.6-2.5 4.9-5.2l16-115.8c.2-.8.2-1.7 0-2.6z\" fill=\"currentColor\"/>","hidden":true},"ios-alarm":{"body":"<path d=\"M381.2 64.1c-1.3-.1-2.6-.1-3.9-.1h-.2c-16.2 0-32 5.4-44.6 15.1-1.6 1.3-2.6 3.2-2.7 5.2-.1 2 .8 4 2.3 5.4l89.8 80.5c1.3 1.1 2.9 1.8 4.6 1.8h.4c1.9-.1 3.6-1 4.8-2.4C440.9 159 448 150.8 448 133c.1-36.4-29.1-66.8-66.8-68.9z\" fill=\"currentColor\"/><path d=\"M64 133c0 17.8 7.1 26 16.3 36.6 1.2 1.4 2.9 2.3 4.8 2.4h.4c1.7 0 3.3-.6 4.6-1.8L180 89.7c1.5-1.4 2.4-3.3 2.3-5.4-.1-2-1-3.9-2.7-5.2C167 69.4 151.2 64 135 64h-.2c-1.3 0-2.6 0-3.9.1-37.7 2.1-67 32.5-66.9 68.9z\" fill=\"currentColor\"/><g><path d=\"M390 386c26.2-30.7 42-70.5 42-114 0-97.2-78.8-176-176-176S80 174.8 80 272c0 43.5 15.8 83.3 42 114l-34.7 35.5c-6.2 6.3-6 15.5.3 21.6 3.1 3 7.4 4.8 11.4 4.8 4.2 0 8.1-1.9 11.2-5.1l34.6-34.5c30.3 24.7 69 39.6 111.2 39.6s80.9-14.8 111.2-39.6l33.6 34.5c3.1 3.2 7.3 5.1 11.5 5.1 4 0 8.1-1.8 11.2-4.8 6.3-6.2 7.5-15.3 1.3-21.6L390 386zM270 274c0 7.7-6.3 14-14 14h-82c-7.7 0-14-6.3-14-14s6.3-14 14-14h68V158c0-7.7 6.3-14 14-14s14 6.3 14 14v116z\" fill=\"currentColor\"/></g>","hidden":true},"ios-bicycle":{"body":"<path d=\"M125.3 289.3c17.3 0 33.7 6.8 46.1 19.2 12.4 12.4 19.2 28.8 19.2 46.1s-6.8 33.7-19.2 46.1c-12.4 12.4-28.8 19.2-46.1 19.2s-33.7-6.8-46.1-19.2C66.8 388.4 60 372 60 354.7s6.8-33.7 19.2-46.1c12.4-12.4 28.8-19.3 46.1-19.3m0-28c-51.3 0-93.3 42-93.3 93.3C32 406 74 448 125.3 448s93.3-42 93.3-93.3c.1-51.4-41.9-93.4-93.3-93.4z\" fill=\"currentColor\"/><path d=\"M319.8 127.8c17.8 0 32-14.2 32-32S337.8 64 320 64s-32.2 14-32.2 31.8c0 17.7 14.3 32 32 32z\" fill=\"currentColor\"/><path d=\"M386.7 289.3c17.3 0 33.7 6.8 46.1 19.2 12.4 12.4 19.2 28.8 19.2 46.1s-6.8 33.7-19.2 46.1C420.4 413.2 404 420 386.7 420s-33.7-6.8-46.1-19.2c-12.4-12.4-19.2-28.8-19.2-46.1s6.8-33.7 19.2-46.1c12.3-12.4 28.7-19.3 46.1-19.3m0-28c-51.3 0-93.3 42-93.3 93.3s42 93.3 93.3 93.3 93.3-42 93.3-93.3-42-93.3-93.3-93.3z\" fill=\"currentColor\"/><path d=\"M368 192h-48l-29.5-60.1c-5.6-9.3-15.9-15.9-27.1-15.9-8.4 0-16.8 3.7-22.4 9.3l-71.7 69.1c-5.6 5.6-9.3 14-9.3 22.4 0 17.4 12.6 23.6 18.5 27.1C224 270.1 240 273 240 286.1V352c0 8.8 7.2 16 16 16s16-7.2 16-16v-90c0-13.2-30.4-24-48.3-38l48.9-51.5c18.7 28.5 27.3 51.5 38 51.5H368c8.8 0 16-7.2 16-16s-7.2-16-16-16z\" fill=\"currentColor\"/>","hidden":true},"ios-home":{"body":"<path d=\"M258.5 104.1c-1.5-1.2-3.5-1.2-5 0l-156 124.8c-.9.8-1.5 1.9-1.5 3.1v230c0 1.1.9 2 2 2h108c1.1 0 2-.9 2-2V322c0-1.1.9-2 2-2h92c1.1 0 2 .9 2 2v140c0 1.1.9 2 2 2h108c1.1 0 2-.9 2-2V232c0-1.2-.6-2.4-1.5-3.1l-156-124.8z\" fill=\"currentColor\"/><path d=\"M458.7 204.2l-189-151.4C265.9 49.7 261 48 256 48s-9.9 1.7-13.7 4.8L160 119.7V77.5c0-1.1-.9-2-2-2H98c-1.1 0-2 .9-2 2v92.2l-42.7 35.1c-3.1 2.5-5.1 6.2-5.3 10.2-.2 4 1.3 7.9 4.1 10.7 2.6 2.6 6.1 4.1 9.9 4.1 3.2 0 6.3-1.1 8.8-3.1l183.9-148c.5-.4.9-.4 1.3-.4s.8.1 1.3.4l183.9 147.4c2.5 2 5.6 3.1 8.8 3.1 3.7 0 7.2-1.4 9.9-4.1 2.9-2.8 4.4-6.7 4.2-10.7-.3-4-2.2-7.7-5.4-10.2z\" fill=\"currentColor\"/>","hidden":true},"md-cut":{"body":"<path d=\"M203.1 158.3c5.2-11.2 8.1-23.5 8.1-36.7 0-49.5-40.1-89.6-89.6-89.6S32 72.1 32 121.6s40.1 89.6 89.6 89.6c13.2 0 25.5-2.9 36.7-8.1l52.9 52.9-52.9 52.9c-11.2-5.2-23.5-8.1-36.7-8.1-49.5 0-89.6 40.1-89.6 89.6S72.1 480 121.6 480s89.6-40.1 89.6-89.6c0-13.2-2.9-25.5-8.1-36.7l52.9-52.9 156.8 156.8H480v-22.4L203.1 158.3zm-81.5 8.1c-24.6 0-44.8-19.9-44.8-44.8S97 76.8 121.6 76.8s44.8 19.9 44.8 44.8-20.2 44.8-44.8 44.8zm0 268.8c-24.6 0-44.8-19.9-44.8-44.8s20.2-44.8 44.8-44.8 44.8 19.9 44.8 44.8-20.2 44.8-44.8 44.8zm134.4-168c-6.3 0-11.2-4.9-11.2-11.2 0-6.3 4.9-11.2 11.2-11.2 6.3 0 11.2 4.9 11.2 11.2 0 6.3-4.9 11.2-11.2 11.2zM412.8 54.4L278.4 188.8l44.8 44.8L480 76.8V54.4h-67.2z\" fill=\"currentColor\"/>","hidden":true},"md-play-circle":{"body":"<path d=\"M256 48C141.2 48 48 141.2 48 256s93.2 208 208 208 208-93.2 208-208S370.8 48 256 48zm-41.6 301.6V162.4L339.2 256l-124.8 93.6z\" fill=\"currentColor\"/>","hidden":true},"md-notifications-outline":{"body":"<path d=\"M257 120.471c7.083 0 23.911 4.479 23.911 4.479 45.589 10.447 77.678 52.439 77.678 99.85V352.412l9.321 9.364 7.788 7.823H136.302l7.788-7.823 9.321-9.364V224.8c0-47.41 32.089-89.403 77.678-99.85 0 0 18.043-4.479 23.911-4.479M256 48c-17.602 0-31.059 13.518-31.059 31.2v14.559c-59.015 13.523-103.53 67.601-103.53 131.041v114.4L80 380.8v20.8h352v-20.8l-41.411-41.6V224.8c0-63.44-44.516-117.518-103.53-131.041V79.2c0-17.682-13.457-31.2-31.059-31.2zm41.411 374.4h-82.823c0 22.881 18.633 41.6 41.412 41.6s41.411-18.719 41.411-41.6z\" fill=\"currentColor\"/>","hidden":true},"md-football":{"body":"<path d=\"M256 48C141.3 48 48 141.3 48 256s93.3 208 208 208 208-93.3 208-208S370.7 48 256 48zM127 238.2l39.2 17.9 17.1 66.9-15.6 29.3-57.2-.7C95.6 329 86.2 303.1 83 276.3l44-38.1zm217.3 114.1L328.7 323l17.1-67 39.1-17.8 44 38.1c-3.1 26.8-12.6 52.7-27.5 75.3l-57.1.7zm32.4-146.2l-43.6 19.6-61.1-51.6v-47.2l47.9-32.6c29.8 11.9 56.4 32.3 75.6 57.8l-18.8 54zM191.3 94.4l47.7 32.5v47.2l-61 51.5-43-19.6-18.7-53.6c19.3-26.1 45.1-46 75-58zM218.4 426c-.7-.2-1.3-.3-2-.5l-20.5-55.1 14.7-29.4h90.8l15 30.3-19.8 53.9c-1 .2-2 .5-3 .7-11.5 2.3-27 3.8-40.4 4.1-11.7-.1-23.4-1.5-34.8-4z\" fill=\"currentColor\"/>","hidden":true},"md-heart-half":{"body":"<path d=\"M349.6 64c-36.4 0-70.7 16.7-93.6 43.9C233.1 80.7 198.8 64 162.4 64 97.9 64 48 114.2 48 179.1c0 79.5 70.7 143.3 177.8 241.7L256 448l30.2-27.2C393.3 322.4 464 258.6 464 179.1 464 114.2 414.1 64 349.6 64zM256 406V157.7l24.5-29.1c17.1-20.4 43-32.5 69.1-32.5 22.6 0 43.4 8.4 58.7 23.8 15.3 15.4 23.7 36.5 23.7 59.3 0 29-12.5 57.5-40.4 92.2C362.8 307 306.4 359.7 256 406z\" fill=\"currentColor\"/>","hidden":true},"md-musical-notes":{"body":"<path d=\"M160 64v257.6c-8.2-2.7-17.2-4.1-26.6-4.1-38.3 0-69.4 27.1-69.4 65.4 0 38.3 31.1 65.1 69.4 65.1 38.3 0 69.6-28.2 69.6-69.1V200h202v121.6c-8.2-2.7-17.2-4.1-26.6-4.1-38.3 0-69.4 27.1-69.4 65.4 0 38.3 31.1 65.1 69.4 65.1 38.3 0 69.6-28.2 69.6-69.1V64H160zm245 96H203v-53h202v53z\" fill=\"currentColor\"/>","hidden":true},"ios-briefcase":{"body":"<path d=\"M80 448h352c17.7 0 32-14.3 32-32V224H48v192c0 17.7 14.3 32 32 32z\" fill=\"currentColor\"/><path d=\"M432 128h-8v-8c0-4.4-3.6-8-8-8h-32c-4.4 0-8 3.6-8 8v8h-28V96c0-17.6-14.4-32-32-32H196c-17.6 0-32 14.4-32 32v32h-28v-8c0-4.4-3.6-8-8-8H96c-4.4 0-8 3.6-8 8v8h-8c-17.7 0-32 14.3-32 32v40h416v-40c0-17.7-14.3-32-32-32zm-112 0H192v-28c0-4.4 3.6-8 8-8h112c4.4 0 8 3.6 8 8v28z\" fill=\"currentColor\"/>","hidden":true},"ios-cloud-outline":{"body":"<path d=\"M288 124c30.3 0 59.3 11.2 81.8 31.5 22.3 20.1 36.3 47.6 39.5 77.3l1.2 11.1c.6 5.8 5 10.5 10.7 11.5l11 2c14 2.5 27 10.4 36.7 22.1 9.8 12 15.2 26.9 15.2 42.1 0 17-6.9 34.1-18.9 46.8C453 381 437.4 388 421.1 388H90.9c-16.3 0-31.9-7-43.9-19.7s-18.9-29.7-18.9-46.8c0-14.4 4.6-28.9 13.1-40.9 8.6-12.2 20.2-20.9 33.7-25.1l10.3-3.3c5.3-1.7 9-6.6 9.1-12.2l.2-10.8c.2-11.8 5.1-23.6 13.5-32.4 8.3-8.7 18.9-13.4 29.9-13.4 5.6 0 11.1 1.1 16.3 3.2l11.1 4.5c5.7 2.3 12.2.4 15.7-4.7l6.8-9.8C210.4 143.7 248 124 288 124m0-28c-51.2 0-96.3 25.6-123.4 64.7-8.3-3.4-17.4-5.3-26.9-5.3-39.1 0-70.8 34.4-71.4 73.4C26.4 241.5 0 280.5 0 321.5 0 371.7 40.7 416 90.9 416h330.3c50.2 0 90.9-44.3 90.9-94.5 0-44.7-32.3-84.1-74.9-91.7C429 154.6 365.4 96 288 96z\" fill=\"currentColor\"/>","hidden":true},"ios-desktop":{"body":"<path d=\"M352 442.2c-.3-2.2-2-3.9-4.2-4.3l-22.3-1.9c-11.8-3.1-20.5-16.2-22.3-28.3L302 400h-92l-1.2 7.6c-1.9 12.1-10.5 25.2-22.3 28.3l-22.3 1.9c-2.1.5-3.9 2.2-4.2 4.3-.4 3.1 2 5.8 5.1 5.8h181.8c3 .1 5.5-2.6 5.1-5.7z\" fill=\"currentColor\"/><path d=\"M472.9 71c-4.5-4.5-10.7-7-17-7H56.2c-6.4 0-12.5 2.5-17 7S32 81.7 32 88v272c0 6.4 2.7 12.5 7.2 17s10.5 7 16.8 7h400c6.4 0 12.3-2.5 16.8-7s7.2-10.7 7.2-17V88c.1-6.3-2.6-12.5-7.1-17zM256 360c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8zm203.9-40H52.2c-2.2 0-4-1.8-4-4V92c0-6.6 5.4-12 12-12h391.7c6.6 0 12 5.4 12 12v224c0 2.2-1.8 4-4 4z\" fill=\"currentColor\"/>","hidden":true},"ios-finger-print":{"body":"<path d=\"M450.8 182c-8.6-24.4-20.3-44.9-33-57.5-2.6-2.6-6-4-9.7-4-3.7 0-7.1 1.4-9.7 4-5.3 5.3-5.3 14 0 19.4 9.9 9.9 19.6 27.4 26.8 48.1 7.3 21.2 11.4 43.6 11.4 63.1 0 3-.1 7.6-.2 10.1-.2 3.7 1.1 7.1 3.6 9.8 2.5 2.7 5.8 4.3 9.5 4.4h.6c7.3 0 13.3-5.7 13.7-13.1.1-3.1.2-8.1.2-11.3 0-22.8-4.7-48.8-13.2-73z\" fill=\"currentColor\"/><path d=\"M143 110.6c2.9 0 5.6-.9 8-2.6 29.9-21.4 66.2-32.7 105-32.7 40.8 0 80.1 14.8 113.7 42.8 2.5 2 5.6 3.2 8.8 3.2 4.1 0 7.9-1.8 10.5-4.9 4.8-5.8 4-14.4-1.7-19.3C348.6 65 303.3 48 256 48c-44.6 0-86.4 13.1-121 37.8-3 2.1-4.9 5.3-5.5 8.9-.6 3.6.2 7.2 2.4 10.2 2.5 3.6 6.7 5.7 11.1 5.7z\" fill=\"currentColor\"/><path d=\"M75.4 255c0-43.7 15.8-85.8 44.5-118.7 2.4-2.8 3.6-6.3 3.3-9.9-.2-3.6-1.9-7-4.7-9.4-2.5-2.2-5.7-3.4-9-3.4-4 0-7.7 1.7-10.3 4.7C66.2 156.2 48 204.7 48 255c0 32.8 5.9 58.8 15.4 90.2 1.8 5.8 7 9.7 13.1 9.7 1.3 0 2.7-.2 4-.6 3.5-1.1 6.4-3.4 8.1-6.6 1.7-3.2 2.1-6.9 1-10.4-8.8-29-14.2-52.8-14.2-82.3z\" fill=\"currentColor\"/><path d=\"M355.7 129.8C328.4 106.1 295 93.6 259 93.6c-48.3 0-91.4 17.8-121.5 50.1-28.7 30.8-42.8 71.7-39.7 115.1 2.3 32.7 6 50.7 9.3 66.6 4.3 21.1 7.7 37.8 5.1 84.1-.4 6.7 3.7 12.7 10 14.6 1.2.4 2.3.5 3.6.5 7.2 0 13.2-5.7 13.7-12.9 2.9-50.4-.8-68.7-5.5-91.9-3.1-15.1-6.6-32.2-8.8-63.1-2.6-35.7 9-69.3 32.4-94.5 24.8-26.7 60.9-41.4 101.4-41.4 29.3 0 56.5 10.2 78.7 29.5 22.3 19.3 39.2 47.4 49 81.1 11.4 39.3 14.5 89.3 9.1 144.5-.7 7.5 4.8 14.2 12.3 15 .4 0 .9.1 1.3.1 7.1 0 12.9-5.3 13.6-12.4 5.8-58.7 2.3-112.2-10.1-154.8-11.1-38.6-30.9-71.2-57.2-94z\" fill=\"currentColor\"/><path d=\"M373.5 267.5c-5.9-37.5-19.9-68.8-40.6-90.6-20.8-22-47.4-33.7-76.9-33.7-19 0-37.7 4.1-54.1 12-3.7 1.8-6.4 5.1-7.4 9.1-1 4.1-.1 8.3 2.5 11.6 2.6 3.4 6.5 5.3 10.8 5.3 2.1 0 4-.5 5.9-1.3 12.6-6 27.2-9.2 42.2-9.2 22.4 0 42.5 9.2 58.3 26.6 16.1 17.8 27.3 43.6 32.1 74.6 4.7 29.6 7 53.5 7.1 73.1.2 39.7-4.8 72.7-4.8 73.1-.6 3.6.3 7.2 2.5 10.2 2.2 3 5.3 4.9 8.9 5.5.7.1 1.4.2 2.1.2 6.8 0 12.5-4.9 13.5-11.6.2-1.4 5.4-35.2 5.2-77.5 0-21.3-2.4-46.5-7.3-77.4z\" fill=\"currentColor\"/><path d=\"M185.3 203.5c4-5.8 2.9-13.6-2.5-18.2-2.5-2.1-5.6-3.2-8.8-3.2-4.5 0-8.7 2.2-11.3 5.9-14.7 21.5-19.7 49.1-14.4 79.8 8.9 51.3 16.9 111.1 9.4 165-.5 3.8.5 7.7 2.9 10.7 2.3 3 5.7 4.8 9.4 5.1.4 0 .8.1 1.2.1 6.8 0 12.6-5.1 13.5-11.8 8.2-57.7-.2-120.2-9.5-173.8-4.1-23.8-.7-43.9 10.1-59.6z\" fill=\"currentColor\"/><path d=\"M317.5 388h-.5c-7.6.3-13.5 6.6-13.2 14.2 0 .2.6 17.9-2.6 34.7-1.3 6.9 2.6 13.7 9.1 15.8 1.4.4 2.8.7 4.3.7 6.6 0 12.2-4.7 13.4-11.1 3.8-20.1 3.1-40.2 3.1-41.1-.2-7.5-6.2-13.2-13.6-13.2z\" fill=\"currentColor\"/><path d=\"M294.6 205.9c-11.2-10.5-25.2-16.1-40.5-16.1-19.8 0-36.7 7.3-47.6 20.5-8.3 10.1-17 28.8-10.9 60 12.3 62.5 15 121.6 8.1 175.6-1 7.5 4.4 14.4 11.8 15.3.6.1 1.2.1 1.7.1 6.9 0 12.7-5.1 13.6-12 7.3-57 4.5-119-8.3-184.4-3.2-16.4-1.4-29.3 5.1-37.3 5.6-6.8 15-10.5 26.4-10.5 25 0 35.1 27.6 38.3 39.4 6.9 25.7 10.9 63 11.5 107.7.1 7.4 6.2 13.5 13.7 13.5h.2c3.6-.1 7-1.5 9.6-4.1 2.5-2.6 3.9-6.1 3.9-9.7-.7-47-5-86.5-12.5-114.4-4.9-18.5-13.1-33.2-24.1-43.6z\" fill=\"currentColor\"/><path d=\"M265.2 245.9c-2.1-5.1-7.1-8.5-12.7-8.5-1.8 0-3.6.4-5.2 1-7 2.9-10.3 10.9-7.4 17.9 6.6 16 11.8 46.2 14.1 82.8 2.4 36.9 1.7 76.9-2 109.6-.4 3.6.6 7.2 2.9 10.1 2.3 2.9 5.5 4.6 9.2 5 .5.1 1 .1 1.5.1 7 0 12.8-5.2 13.6-12.2 3.9-35.5 4.6-76.6 2-115.8-2.5-39.3-8.2-71.3-16-90z\" fill=\"currentColor\"/>","hidden":true},"ios-star-outline":{"body":"<path d=\"M463 192H315.9L271.2 58.6C269 52.1 262.9 48 256 48s-13 4.1-15.2 10.6L196.1 192H48c-8.8 0-16 7.2-16 16 0 .9.1 1.9.3 2.7.2 3.5 1.8 7.4 6.7 11.3l120.9 85.2-46.4 134.9c-2.3 6.5 0 13.8 5.5 18 2.9 2.1 5.6 3.9 9 3.9 3.3 0 7.2-1.7 10-3.6l118-84.1 118 84.1c2.8 2 6.7 3.6 10 3.6 3.4 0 6.1-1.7 8.9-3.9 5.6-4.2 7.8-11.4 5.5-18L352 307.2l119.9-86 2.9-2.5c2.6-2.8 5.2-6.6 5.2-10.7 0-8.8-8.2-16-17-16zm-127.2 92.5c-10 7.2-14.2 20.2-10.2 31.8l30.1 87.7c1.3 3.7-2.9 6.8-6.1 4.6l-77.4-55.2c-4.9-3.5-10.6-5.2-16.3-5.2-5.7 0-11.4 1.7-16.2 5.2l-77.4 55.1c-3.2 2.3-7.4-.9-6.1-4.6l30.1-87.7c4-11.8-.2-24.8-10.3-32l-81-57.1c-3.2-2.2-1.6-7.3 2.3-7.3H196c12 0 22.7-7.7 26.5-19.1l29.6-88.2c1.2-3.6 6.4-3.6 7.6 0l29.6 88.2c3.8 11.4 14.5 19.1 26.5 19.1h97.3c3.9 0 5.5 5 2.3 7.2l-79.6 57.5z\" fill=\"currentColor\"/>","hidden":true},"md-contacts":{"body":"<path d=\"M239.208 343.937c-17.78 10.103-38.342 15.876-60.255 15.876-21.909 0-42.467-5.771-60.246-15.87C71.544 358.331 42.643 406 32 448h293.912c-10.639-42-39.537-89.683-86.704-104.063z\" fill=\"currentColor\"/><path d=\"M178.953 120.035c-58.479 0-105.886 47.394-105.886 105.858 0 58.464 47.407 105.857 105.886 105.857s105.886-47.394 105.886-105.857c0-58.464-47.408-105.858-105.886-105.858zm0 186.488c-33.671 0-62.445-22.513-73.997-50.523H252.95c-11.554 28.011-40.326 50.523-73.997 50.523z\" fill=\"currentColor\"/><g><path d=\"M322.602 384H480c-10.638-42-39.537-81.691-86.703-96.072-17.781 10.104-38.343 15.873-60.256 15.873-14.823 0-29.024-2.654-42.168-7.49-7.445 12.47-16.927 25.592-27.974 34.906C289.245 341.354 309.146 364 322.602 384z\" fill=\"currentColor\"/><path d=\"M306.545 200h100.493c-11.554 28-40.327 50.293-73.997 50.293-8.875 0-17.404-1.692-25.375-4.51a128.411 128.411 0 01-6.52 25.118c10.066 3.174 20.779 4.862 31.895 4.862 58.479 0 105.886-47.41 105.886-105.872 0-58.465-47.407-105.866-105.886-105.866-37.49 0-70.427 19.703-89.243 49.09C275.607 131.383 298.961 163 306.545 200z\" fill=\"currentColor\"/></g>","hidden":true},"ios-refresh":{"body":"<path d=\"M433 288.8c-7.7 0-14.3 5.9-14.9 13.6-6.9 83.1-76.8 147.9-161.8 147.9-89.5 0-162.4-72.4-162.4-161.4 0-87.6 70.6-159.2 158.2-161.4 2.3-.1 4.1 1.7 4.1 4v50.3c0 12.6 13.9 20.2 24.6 13.5L377 128c10-6.3 10-20.8 0-27.1l-96.1-66.4c-10.7-6.7-24.6.9-24.6 13.5v45.7c0 2.2-1.7 4-3.9 4C148 99.8 64 184.6 64 288.9 64 394.5 150.1 480 256.3 480c100.8 0 183.4-76.7 191.6-175.1.8-8.7-6.2-16.1-14.9-16.1z\" fill=\"currentColor\"/>","hidden":true}},"width":512,"height":512});
Iconify.addCollection({"prefix":"noto","icons":{"anchor":{"body":"<linearGradient id=\"ssvg-id-anchora\" gradientUnits=\"userSpaceOnUse\" x1=\"64.001\" y1=\"837.9\" x2=\"64.001\" y2=\"718.4\" gradientTransform=\"translate(0 -714)\"><stop offset=\".014\" stop-color=\"#757575\"/><stop offset=\".172\" stop-color=\"#818181\"/><stop offset=\".459\" stop-color=\"#a2a2a2\"/><stop offset=\".84\" stop-color=\"#d6d6d6\"/><stop offset=\"1\" stop-color=\"#eee\"/></linearGradient><path d=\"M121.4 72.4l-8.1-12.1c-.7-1-2.1-1-2.8 0l-8 12.1c-.7 1.1.1 2.6 1.4 2.6h3.6c-2.6 12-13.6 21.3-28 25c-5.5 1.4-11.6-2.5-11.6-8.3V58h11.4c2.6 0 4.8-2.4 4.8-5s-2.2-5-4.8-5H68v-9.1c8-1.9 13.3-8.8 13.3-17c0-9.7-7.8-17.5-17.5-17.5s-17.5 7.9-17.5 17.5c0 8 5.7 14.7 12.7 16.9V48H48.6c-2.6 0-4.8 2.4-4.8 5s2.2 5 4.8 5H59v33.6c0 6-7.4 9.6-13.1 7.8C33 95.2 23.5 86 21.1 75h3c1.3 0 2.1-1.5 1.4-2.6l-8.1-12.1c-.7-1-2.1-1-2.8 0l-8 12.1C5.9 73.5 6.7 75 8 75h3.4c2.3 17 17.4 31.2 37 36.2c4 1 7.5 3.2 9.9 6.6l2.8 5.2c.9 1.2 4 1.2 4.9 0l2.4-4.6c2.5-3.4 6.1-6.4 10.3-7.3c20.7-4.4 36.1-18 38.4-36h3c1.2-.1 2-1.6 1.3-2.7zM54.1 21.9c0-5.4 4.4-9.8 9.8-9.8s9.8 4.4 9.8 9.8s-4.4 9.8-9.8 9.8s-9.8-4.4-9.8-9.8z\" fill=\"url(#ssvg-id-anchora)\"/><path d=\"M63.9 7.2c8 0 14.5 6.5 14.5 14.5c0 6.8-4.4 12.5-11.1 14.1c-1.3.3-2.3 1.5-2.3 2.9v9.6c0 1.7 1.3 3 3 3h11.4c.9 0 1.8 1 1.8 2s-.9 2-1.8 2H68c-1.7 0-3 1.3-3 3v33.2c0 6.4 5.7 11.8 12.4 11.8c1 0 2-.1 2.9-.4c16.1-4.1 27.4-14.2 30.2-27c.2-.9 0-1.8-.6-2.5s-1.4-1.1-2.3-1.1h-1.3l5.6-8.7l5.8 8.7h-.7c-1.5 0-2.8 1.1-3 2.6c-2.1 16.2-15.9 28.9-36 33.2c-4.6 1-8.9 3.9-12.1 8.2c-.1.1-.2.3-.2.4l-2 3.9H63.4l-2.4-4.4c-.1-.1-.1-.2-.2-.3c-2.8-3.7-6.8-6.3-11.6-7.6c-9.2-2.3-17.4-6.7-23.6-12.7S15.4 82.6 14.3 75c-.2-1.5-1.5-2.6-3-2.6h-1.1l5.6-8.7l5.8 8.7H21c-.9 0-1.8.4-2.3 1.1s-.7 1.6-.5 2.5c2.6 12 12.6 21.8 26.8 26.4c1.2.4 2.5.6 3.9.6c6.3 0 13.1-4.6 13.1-11.5V58.4c0-1.7-1.3-3-3-3H48.6c-.9 0-1.8-1-1.8-2s.9-2 1.8-2H59c1.7 0 3-1.3 3-3v-9.8c0-1.3-.9-2.5-2.1-2.9c-6.1-1.8-10.5-7.7-10.5-14c-.1-7.9 6.4-14.4 14.5-14.5m0 27.4c7.1 0 12.8-5.8 12.8-12.8S71 9 63.9 9s-12.8 5.8-12.8 12.8c0 7.1 5.7 12.8 12.8 12.8m0-30.3c-9.7 0-17.5 7.9-17.5 17.5c0 8 5.7 14.7 12.7 16.8V48H48.6c-2.6 0-4.8 2.4-4.8 5s2.2 5 4.8 5H59v33.5c0 5-5.1 8.5-10.1 8.5c-1 0-2-.2-3-.4C33 95.4 23.5 86 21.1 75h3c1.3 0 2.1-1.3 1.4-2.4l-8.1-12.2c-.3-.5-.9-.8-1.4-.8s-1 .2-1.3.7l-8 12.3C5.9 73.7 6.7 75 8 75h3.4c2.3 17 17.4 31.4 37 36.3c4 1 7.5 3.1 9.9 6.4l2.8 5.1c.4.6 1.4.9 2.4.9s2-.3 2.5-.9l2.4-4.6c2.5-3.4 6.1-6.2 10.3-7.1c20.6-4.4 36-18.1 38.3-36.1h3c1.3 0 2.1-1.4 1.4-2.5l-8.1-12.2c-.3-.5-.9-.8-1.4-.8s-1 .2-1.3.7l-8 12.3c-.7 1.1.1 2.4 1.4 2.4h3.6c-2.6 12-13.6 21.4-28 25.1c-.7.2-1.5.3-2.2.3c-4.8 0-9.4-3.8-9.4-8.8V58h11.4c2.6 0 4.8-2.4 4.8-5s-2.2-5-4.8-5H68v-9.2c8-1.9 13.3-8.8 13.3-17c0-9.7-7.8-17.5-17.4-17.5zm0 27.3c-5.4 0-9.8-4.4-9.8-9.8s4.4-9.8 9.8-9.8s9.8 4.4 9.8 9.8s-4.4 9.8-9.8 9.8z\" fill=\"#0d47a1\" opacity=\".2\"/>"},"waving-hand":{"body":"<radialGradient id=\"ssvg-id-waving-handa\" cx=\"-779.868\" cy=\"686.689\" r=\"91.008\" gradientTransform=\"scale(1 -1) rotate(45 506.867 1318.897)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".353\" stop-color=\"#ffca28\"/><stop offset=\".872\" stop-color=\"#ffb300\"/></radialGradient><path d=\"M59.53 107.44c-3.95-3.17-40.63-38.84-41.04-39.23c-1.62-1.62-2.64-3.3-2.92-4.84c-.29-1.6.2-3 1.5-4.3c1.21-1.21 2.69-1.85 4.28-1.85c1.94 0 3.93.92 5.59 2.59l16.63 15.98c.29.28.67.42 1.04.42a1.494 1.494 0 0 0 1.07-2.54L19.13 46.25c-2.66-2.66-3.91-6.73-.75-9.89c1.21-1.21 2.69-1.85 4.28-1.85c1.94 0 3.93.92 5.59 2.59l27.16 26.48c.29.28.67.43 1.05.43s.77-.15 1.06-.44c.58-.58.59-1.52.01-2.11L24.91 28.02c-1.51-1.51-2.42-3.32-2.58-5.08c-.15-1.79.48-3.45 1.83-4.8c1.21-1.21 2.69-1.85 4.28-1.85c1.94 0 3.93.92 5.59 2.58L67.3 51.31c.29.28.67.43 1.05.43s.77-.15 1.06-.44c.58-.58.59-1.52.01-2.11L45.26 24.36c-1.52-1.52-2.43-3.32-2.58-5.08c-.15-1.79.48-3.45 1.83-4.8c1.21-1.21 2.69-1.85 4.28-1.85c1.94 0 3.93.92 5.59 2.59c8.86 8.7 31.99 31.45 32.77 32.29c2.97 2.05 3.57-1.05 3.72-3.06c.17-2.34-2.51-10.51-.95-17.86c2.62-9.77 10.17-8.17 10.34-8.09c4.14 1.94 3.35 4.84 1.88 10.67l-.15 1.15c-1.54 7.62 9.04 30.2 9.82 31.89c4.15 9.08 8.93 27.49-6.9 43.32c-17.35 17.35-38.83 8.46-45.38 1.91z\" fill=\"url(#ssvg-id-waving-handa)\"/><path d=\"M81.79 117.18c-10.64 0-19.69-5.09-23.26-8.62c-3.21-2.62-23.47-22.18-39.97-38.19c-.67-.65-1.06-1.02-1.1-1.07c-1.87-1.87-3.03-3.82-3.36-5.66c-.38-2.09.27-3.98 1.91-5.63c1.5-1.5 3.34-2.29 5.34-2.29c2.35 0 4.71 1.08 6.65 3.03l16.61 15.96l-26.56-27.42c-3.06-3.06-4.6-8.13-.73-11.99c1.5-1.5 3.34-2.29 5.34-2.29c2.35 0 4.71 1.08 6.65 3.03L56.45 62.5L23.84 29.07c-1.74-1.74-2.81-3.87-3-5.99c-.19-2.26.59-4.33 2.26-6c1.5-1.5 3.34-2.29 5.34-2.29c2.34 0 4.7 1.07 6.65 3.02l33.26 32.43l-24.16-24.83c-1.75-1.75-2.82-3.88-3-6c-.19-2.25.59-4.32 2.26-5.99c1.5-1.5 3.34-2.29 5.34-2.29c2.35 0 4.71 1.08 6.65 3.03l7.21 7.07c12.85 12.6 23.59 23.15 24.74 24.33c.56.45 1.29.62 1.6.47c.2-.1.42-.56.38-1.53c-.06-1.7-.3-3.81-.55-6.04c-.5-4.48-1.02-9.12-.37-12.18c1.42-5.31 4.21-7.56 6.29-8.53c2.86-1.32 5.63-.86 6.16-.61c5.2 2.44 4.17 6.52 2.75 12.18l-.03.14l-.16 1.17c-1.04 5.12 4.3 19.27 9.64 30.8l.08.16c3.57 7.8 10 27.81-7.2 45.01c-7.91 7.89-16.47 10.58-24.19 10.58zM21.35 58.72c-1.18 0-2.3.49-3.22 1.41c-.95.95-1.28 1.87-1.08 2.97c.22 1.21 1.11 2.65 2.5 4.05c.01.01.41.4 1.1 1.06c23.42 22.73 37.56 36.24 39.82 38.06l.12.11c5.52 5.52 26.03 15.32 43.26-1.91c15.87-15.87 9.9-34.4 6.59-41.64l-.07-.15c-3.44-7.42-11.26-25.42-9.87-32.6l.23-1.5c1.54-6.12 1.63-7.4-.98-8.66c-.77-.14-6.29-.81-8.4 7.06c-.53 2.51-.02 7.1.43 11.15c.26 2.29.5 4.46.56 6.27c.1 2.85-1.25 3.94-2.07 4.34c-1.67.81-3.66.12-4.9-.92l-.13-.12c-.61-.66-15.12-14.89-24.72-24.31L53.3 16.3c-2.46-2.47-5.63-2.88-7.76-.75c-1.04 1.04-1.51 2.26-1.4 3.61c.12 1.41.88 2.88 2.15 4.15L70.5 48.14a3.012 3.012 0 0 1-.02 4.22c-1.11 1.11-3.07 1.13-4.21.03L32.98 19.94c-2.46-2.46-5.64-2.87-7.76-.74c-1.04 1.04-1.51 2.26-1.4 3.61c.13 1.41.89 2.89 2.15 4.14L58.6 60.41c1.15 1.16 1.14 3.06-.02 4.22c-1.11 1.11-3.07 1.13-4.21.03L27.2 38.17c-2.46-2.48-5.64-2.88-7.76-.75c-2.59 2.59-1.21 5.8.75 7.77l26.57 27.44a2.988 2.988 0 0 1-.03 4.2c-1.12 1.12-3.06 1.13-4.2.04L25.9 60.89c-1.4-1.41-3.01-2.17-4.55-2.17z\" fill=\"#eda600\"/><path d=\"M84.76 46.54c-5.49 11.21-4.78 26.9 3.46 39.49c.93 1.7 2.52.87 1.71-.88c-9.95-21.29.48-36.63.48-36.63l-5.65-1.98z\" fill=\"#eda600\"/><g><path d=\"M63.17 4.5c3.02-.79 6.24-.72 9.37.01c3.11.75 6.22 2.33 8.53 4.91c2.26 2.56 3.65 5.67 4.12 8.93c.44 3.23.03 6.56-1.5 9.32c-.18-3.1-.72-5.95-1.63-8.58c-.47-1.31-1.02-2.56-1.69-3.74c-.66-1.17-1.44-2.33-2.27-3.28c-1.69-1.95-3.98-3.47-6.55-4.65c-2.58-1.22-5.39-2.12-8.38-2.92z\" fill=\"#b0bec5\"/><path d=\"M64 13.98c1.67-1.06 3.76-1.28 5.73-.93c1.99.35 3.89 1.34 5.39 2.71c1.49 1.39 2.55 3.14 3.21 4.96c.32.91.48 1.87.63 2.8c.05.96.05 1.92-.1 2.88c-.69-.73-1.23-1.46-1.74-2.17c-.59-.67-1.05-1.38-1.58-2.03c-1.04-1.29-2.05-2.46-3.14-3.5c-1.12-1.01-2.3-1.9-3.67-2.67c-1.36-.79-2.89-1.45-4.73-2.05z\" fill=\"#90a4ae\"/></g><g><path d=\"M6.83 77.34c1.41 2.76 2.88 5.32 4.59 7.58c1.7 2.26 3.65 4.18 5.92 5.43c1.1.61 2.41 1.14 3.69 1.54c1.29.41 2.63.69 4.01.88c2.76.34 5.66.28 8.73-.19c-2.38 2.07-5.56 3.17-8.8 3.41c-3.28.22-6.61-.49-9.59-2.17c-3-1.71-5.2-4.43-6.58-7.32c-1.38-2.91-2.12-6.04-1.97-9.16z\" fill=\"#b0bec5\"/><path d=\"M16.28 76.17c.97 1.68 1.93 3.03 2.98 4.21c1.04 1.18 2.16 2.15 3.38 3.03c1.24.85 2.6 1.6 4.08 2.35c.74.38 1.53.68 2.31 1.12c.81.35 1.63.72 2.49 1.25c-.91.34-1.84.54-2.79.69c-.94.04-1.91.09-2.87-.04c-1.92-.26-3.84-.93-5.52-2.1c-1.65-1.19-3.02-2.84-3.77-4.71c-.76-1.86-.98-3.94-.29-5.8z\" fill=\"#90a4ae\"/></g>"},"microphone":{"body":"<path d=\"M15.7 124c-3 0-4.8-1.4-5.8-3.1c-1.9-3-1.4-7.1 1.3-9.8l5.6-5.7l2.1 2.1l-5.6 5.7c-1.7 1.7-2 4.2-.9 6c2.3 3.6 8.1.9 12.6-2c6.4-4.1 11.3-5.2 14.5-3.2c2.9 1.7 3.6 6 3.7 8.3c0 .9-.6 1.6-1.5 1.6c-.8 0-1.5-.6-1.5-1.4c-.1-1.8-.5-4.9-2.3-5.9c-1.5-.9-4.8-1.1-11.4 3.2c-4.7 3.1-8.2 4.2-10.8 4.2z\" fill=\"#9e9e9e\"/><path d=\"M12.7 110.8c-1.6-1.6-1.6-4.1 0-5.7l4.2-7.1l8.5 8.5l-7.1 4.2c-1.5 1.7-4 1.7-5.6.1z\" fill=\"#757575\"/><path d=\"M17.5 102.9l3.1 3.1l-3.8 2.3l-.3.2l-.3.3c-.2.2-.5.3-.7.3h-.2l-.4-.1l-.2-.3c-.2-.3-.2-.9.1-1.2l.3-.3l.2-.3l2.2-4m-.6-4.8l-4.2 7.1c-1.3 1.3-1.5 3.4-.6 4.9l-1 1.1c-2.6 2.7-3.2 6.7-1.3 9.8c1.1 1.7 2.8 3.1 5.8 3.1c2.6 0 6.2-1.1 10.9-4.2c4.4-2.8 7.3-3.7 9.2-3.7c1 0 1.7.2 2.2.5c1.7 1 2.2 4.1 2.3 5.9c0 .8.7 1.4 1.5 1.4c.9 0 1.5-.7 1.5-1.6c-.1-2.3-.8-6.6-3.7-8.3c-1-.6-2.3-.9-3.6-.9c-2.9 0-6.6 1.4-10.9 4.2c-3 1.9-6.5 3.7-9.2 3.7c-1.4 0-2.6-.5-3.4-1.7c-1.2-1.8-.8-4.3.9-6l1.4-1.4c.3.1.6.1.9.1c1 0 2-.4 2.8-1.2l7.1-4.2l-8.6-8.6z\" fill=\"#eee\" opacity=\".2\"/><radialGradient id=\"ssvg-id-microphonea\" cx=\"53.976\" cy=\"749.013\" r=\"70.217\" gradientTransform=\"matrix(1 0 0 1.0013 0 -714.439)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#40c4ff\"/><stop offset=\".223\" stop-color=\"#3abffd\"/><stop offset=\".526\" stop-color=\"#29b1f7\"/><stop offset=\".872\" stop-color=\"#0c9bee\"/><stop offset=\"1\" stop-color=\"#0091ea\"/></radialGradient><path d=\"M65.9 41.5L15.5 96.7c-1.6 1.6-.3 5.4 2.8 8.5s6.9 4.4 8.5 2.8l55-50.5c-3.6-1.2-6.9-3.3-9.8-6.2c-2.8-2.8-4.8-6.2-6.1-9.8z\" fill=\"url(#ssvg-id-microphonea)\"/><path d=\"M74.9 31.5l-9 10c1.2 3.6 3.3 7 6.2 9.8s6.2 4.9 9.8 6.2l10-9l-17-17z\" fill=\"#0091ea\"/><path d=\"M57.2 69.7c-.9 0-1.8-.4-2.5-1c-1.4-1.4-1.4-3.6 0-5l4.2-4.2c.7-.7 1.5-1 2.5-1s1.8.4 2.5 1c1.4 1.4 1.4 3.6 0 5l-4.2 4.2c-.6.6-1.5 1-2.5 1z\" fill=\"#0091ea\"/><path d=\"M61.5 58.5c.9 0 1.8.4 2.5 1c1.4 1.4 1.4 3.6 0 5l-4.2 4.2c-.7.7-1.5 1-2.5 1s-1.8-.4-2.5-1c-1.4-1.4-1.4-3.6 0-5l4.2-4.2c.7-.7 1.6-1 2.5-1m0-2c-1.5 0-2.8.6-3.9 1.6l-4.2 4.2c-2.1 2.1-2.1 5.6 0 7.8c1 1 2.4 1.6 3.9 1.6s2.8-.6 3.9-1.6l4.2-4.2c2.1-2.2 2.1-5.6 0-7.8c-1.1-1.1-2.4-1.6-3.9-1.6z\" fill=\"#eee\" opacity=\".2\"/><path d=\"M75 35.9l12.5 12.5l-7.7 6.9l-54.9 50.3c-.8 0-2.6-.7-4.5-2.6c-2-2-2.6-3.9-2.6-4.5l50.3-55l6.9-7.6m-.1-4.4l-9 10l-50.4 55.1c-1.6 1.6-.3 5.4 2.8 8.5c2.2 2.2 4.8 3.5 6.6 3.5c.8 0 1.4-.2 1.9-.7l55-50.5l10-9l-16.9-16.9z\" fill=\"#424242\" opacity=\".2\"/><radialGradient id=\"ssvg-id-microphoneb\" cx=\"93.642\" cy=\"719.347\" r=\"51.366\" gradientTransform=\"matrix(1 0 0 1.0013 0 -714.439)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#757575\"/><stop offset=\".222\" stop-color=\"#6f6f6f\"/><stop offset=\".505\" stop-color=\"#606060\"/><stop offset=\".82\" stop-color=\"#464646\"/><stop offset=\".859\" stop-color=\"#424242\"/><stop offset=\"1\" stop-color=\"#424242\"/></radialGradient><circle cx=\"93.3\" cy=\"30.1\" fill=\"url(#ssvg-id-microphoneb)\" r=\"26\"/><defs><circle id=\"ssvg-id-microphonec\" cx=\"93.3\" cy=\"30\" r=\"26\"/></defs><clipPath id=\"ssvg-id-microphoned\"><use xlink:href=\"#ssvg-id-microphonec\" overflow=\"visible\"/></clipPath><g clip-path=\"url(#ssvg-id-microphoned)\" fill=\"#9e9e9e\"><circle cx=\"97.5\" cy=\"-11.9\" opacity=\".2\" r=\"2\"/><circle cx=\"74.9\" cy=\"10.8\" opacity=\".2\" r=\"2\"/><circle cx=\"89.1\" cy=\"8\" opacity=\".2\" r=\"2\"/><circle cx=\"83.4\" cy=\"13.6\" opacity=\".2\" r=\"2\"/><circle cx=\"77.7\" cy=\"19.3\" opacity=\".2\" r=\"2\"/><circle cx=\"72.1\" cy=\"25\" opacity=\".2\" r=\"2\"/><circle cx=\"66.4\" cy=\"30.6\" opacity=\".2\" r=\"2\"/><circle cx=\"103.2\" cy=\"5.1\" opacity=\".2\" r=\"2\"/><circle cx=\"97.5\" cy=\"10.8\" opacity=\".2\" r=\"2\"/><circle cx=\"91.9\" cy=\"16.5\" opacity=\".2\" r=\"2\"/><circle cx=\"86.2\" cy=\"22.1\" opacity=\".2\" r=\"2\"/><circle cx=\"80.6\" cy=\"27.8\" opacity=\".2\" r=\"2\"/><circle cx=\"74.9\" cy=\"33.5\" opacity=\".2\" r=\"2\"/><circle cx=\"69.2\" cy=\"39.1\" opacity=\".2\" r=\"2\"/><circle cx=\"106\" cy=\"13.6\" opacity=\".2\" r=\"2\"/><circle cx=\"100.4\" cy=\"19.3\" opacity=\".2\" r=\"2\"/><circle cx=\"94.7\" cy=\"25\" opacity=\".2\" r=\"2\"/><circle cx=\"89.1\" cy=\"30.6\" opacity=\".2\" r=\"2\"/><circle cx=\"83.4\" cy=\"36.3\" opacity=\".2\" r=\"2\"/><circle cx=\"77.7\" cy=\"42\" opacity=\".2\" r=\"2\"/><circle cx=\"72.1\" cy=\"47.6\" opacity=\".2\" r=\"2\"/><circle cx=\"114.5\" cy=\"16.5\" opacity=\".2\" r=\"2\"/><circle cx=\"108.8\" cy=\"22.1\" opacity=\".2\" r=\"2\"/><circle cx=\"103.2\" cy=\"27.8\" opacity=\".2\" r=\"2\"/><circle cx=\"97.5\" cy=\"33.5\" opacity=\".2\" r=\"2\"/><circle cx=\"91.9\" cy=\"39.1\" opacity=\".2\" r=\"2\"/><circle cx=\"86.2\" cy=\"44.8\" opacity=\".2\" r=\"2\"/><circle cx=\"80.6\" cy=\"50.5\" opacity=\".2\" r=\"2\"/><circle cx=\"117.3\" cy=\"25\" opacity=\".2\" r=\"2\"/><circle cx=\"111.7\" cy=\"30.6\" opacity=\".2\" r=\"2\"/><circle cx=\"106\" cy=\"36.3\" opacity=\".2\" r=\"2\"/><circle cx=\"100.4\" cy=\"42\" opacity=\".2\" r=\"2\"/><circle cx=\"94.7\" cy=\"47.6\" opacity=\".2\" r=\"2\"/><circle cx=\"89.1\" cy=\"53.3\" opacity=\".2\" r=\"2\"/><circle cx=\"120.2\" cy=\"33.5\" opacity=\".2\" r=\"2\"/><circle cx=\"114.5\" cy=\"39.1\" opacity=\".2\" r=\"2\"/><circle cx=\"108.8\" cy=\"44.8\" opacity=\".2\" r=\"2\"/><circle cx=\"103.2\" cy=\"50.5\" opacity=\".2\" r=\"2\"/><circle cx=\"97.5\" cy=\"56.1\" opacity=\".2\" r=\"2\"/></g><path d=\"M93.3 7.1c6.1 0 11.9 2.4 16.3 6.7c9 9 9 23.6 0 32.6c-4.3 4.3-10.1 6.8-16.3 6.8S81.4 50.7 77 46.4c-9-9-9-23.6 0-32.6c4.4-4.4 10.2-6.7 16.3-6.7m0-3c-6.7 0-13.3 2.5-18.4 7.6a25.953 25.953 0 0 0 0 36.8c5.1 5.1 11.7 7.6 18.4 7.6s13.3-2.5 18.4-7.6c10.2-10.2 10.2-26.6 0-36.8c-5.1-5.1-11.7-7.6-18.4-7.6z\" fill=\"#eee\" opacity=\".2\"/><path d=\"M107.9 51.1L72.3 15.4c-1.1-1.1-1.1-2.9 0-4L74 9.8c1.1-1.1 2.9-1.1 4 0l35.6 35.7c1.1 1.1 1.1 2.9 0 4l-1.7 1.7c-1.1 1-2.9 1-4-.1z\" fill=\"#bdbdbd\"/><path d=\"M110.6 51L72.4 12.8c-.8-.8-.8-2.1 0-2.8s2.1-.8 2.8 0l38.2 38.2c.8.8.8 2 0 2.8s-2 .8-2.8 0z\" fill=\"#e0e0e0\"/>"},"trolleybus":{"body":"<path d=\"M122.06 19H5.94C4.87 19 4 18.06 4 17s.87-2 1.94-2h116.13c1.07 0 1.94.94 1.94 2s-.88 2-1.95 2z\" fill=\"#504f4f\"/><path d=\"M108 16H91.96c-.26 0-.51.07-.73.19l-26 27.46c-.18.1-.34.35-.46.35H54c-1.1 0-2 .98-2 2.08v.83c0 1.1.9 2.08 2 2.08h23.92c1.1 0 2.08-.98 2.08-2.08v-.83c0-1.1-.98-2.08-2.08-2.08h-7.24l22.94-25H108c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5z\" fill=\"#787676\"/><linearGradient id=\"ssvg-id-trolleybusa\" gradientUnits=\"userSpaceOnUse\" x1=\"64\" y1=\"79.361\" x2=\"64\" y2=\"24.25\" gradientTransform=\"matrix(1 0 0 -1 0 128)\"><stop offset=\".007\" stop-color=\"#fff8e1\"/><stop offset=\".184\" stop-color=\"#fff7dc\"/><stop offset=\".405\" stop-color=\"#fff3cc\"/><stop offset=\".65\" stop-color=\"#ffecb3\"/><stop offset=\".909\" stop-color=\"#ffe490\"/><stop offset=\".998\" stop-color=\"#ffe082\"/></linearGradient><path d=\"M118 115.75H10c-3.3 0-6-2.7-6-6V54c0-3.3 2.7-6 6-6h108c3.3 0 6 2.7 6 6v55.75c0 3.3-2.7 6-6 6z\" fill=\"url(#ssvg-id-trolleybusa)\"/><path d=\"M29.95 81.92H16.03c-1.66 0-3-1.34-3-3V58.87c0-1.66 1.34-3 3-3h13.92c1.66 0 3 1.34 3 3v20.05c0 1.66-1.34 3-3 3z\" fill=\"#4fc3f7\"/><path d=\"M49.87 75.67h-9.84c-1.66 0-3-1.34-3-3v-13.8c0-1.66 1.34-3 3-3h9.84c1.66 0 3 1.34 3 3v13.8c0 1.66-1.34 3-3 3z\" fill=\"#4fc3f7\"/><path d=\"M69.82 75.67h-9.84c-1.66 0-3-1.34-3-3v-13.8c0-1.66 1.34-3 3-3h9.84c1.66 0 3 1.34 3 3v13.8c0 1.66-1.34 3-3 3z\" fill=\"#4fc3f7\"/><path d=\"M89.96 75.67h-9.84c-1.66 0-3-1.34-3-3v-13.8c0-1.66 1.34-3 3-3h9.84c1.66 0 3 1.34 3 3v13.8c0 1.66-1.34 3-3 3z\" fill=\"#4fc3f7\"/><path d=\"M109.92 75.67h-9.84c-1.66 0-3-1.34-3-3v-13.8c0-1.66 1.34-3 3-3h9.84c1.66 0 3 1.34 3 3v13.8c0 1.66-1.34 3-3 3z\" fill=\"#4fc3f7\"/><defs><path id=\"ssvg-id-trolleybusb\" d=\"M118 115.75H10c-3.3 0-6-2.7-6-6V54c0-3.3 2.7-6 6-6h108c3.3 0 6 2.7 6 6v55.75c0 3.3-2.7 6-6 6z\"/></defs><clipPath id=\"ssvg-id-trolleybusc\"><use xlink:href=\"#ssvg-id-trolleybusb\" overflow=\"visible\"/></clipPath><path clip-path=\"url(#ssvg-id-trolleybusc)\" fill=\"#66bb6a\" d=\"M3.88 89.1H124v29.05H3.88z\"/><path d=\"M4.87 90.75c-.3 0-.59.04-.87.1v10.3c.28.06.57.1.87.1a3.97 3.97 0 0 0 3.96-3.96v-2.58a3.97 3.97 0 0 0-3.96-3.96z\" fill=\"#ffeb3b\"/><circle cx=\"27\" cy=\"112\" r=\"12\" fill=\"#553a30\"/><circle cx=\"27\" cy=\"112\" r=\"5.14\" fill=\"#bdbdbd\"/><circle cx=\"101\" cy=\"112\" r=\"12\" fill=\"#553a30\"/><circle cx=\"101\" cy=\"112\" r=\"5.14\" fill=\"#bdbdbd\"/>"},"framed-picture":{"body":"<radialGradient id=\"ssvg-id-framed-picturea\" cx=\"63.125\" cy=\"75.5\" r=\"54.371\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#81D4FA\" offset=\"0\"/><stop stop-color=\"#81D4FA\" offset=\".47\"/><stop stop-color=\"#7BD2FA\" offset=\".549\"/><stop stop-color=\"#6CCDF9\" offset=\".65\"/><stop stop-color=\"#51C4F8\" offset=\".763\"/><stop stop-color=\"#2DB7F6\" offset=\".884\"/><stop stop-color=\"#03A9F4\" offset=\"1\"/></radialGradient><path fill=\"url(#ssvg-id-framed-picturea)\" d=\"M16 24h92v68H16z\"/><linearGradient id=\"ssvg-id-framed-pictureb\" x1=\"64\" x2=\"64\" y1=\"36.071\" y2=\"68.298\" gradientTransform=\"matrix(-1 0 0 1 128 0)\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#90A4AE\" offset=\"0\"/><stop stop-color=\"#849AA5\" offset=\".339\"/><stop stop-color=\"#637F8D\" offset=\".958\"/><stop stop-color=\"#607D8B\" offset=\"1\"/></linearGradient><path d=\"M38.34 51.51c.68-.71 1.59-1.15 2.56-1.28c1.24-.16 2.67.04 3.95-.98c1.34-1.07 7.98-13.31 11.06-13.26c.81.01 1.48.72 2.08 1.61c1.07 1.6 1.92 3.82 3.01 3.82c2.27 0 2.27 6.78 5.05 7.59c2.57.75 3.42.71 5.82 4.21c2.7-3.29 5.06-5.77 6.46-6.4c.23-.1.44-.17.61-.17c2.01 0 4.09 5.37 6.16 8.66s3.05 2.44 5 2.2C92.05 57.28 104 76 104 76H24s9.3-19.29 14.34-24.49z\" fill=\"url(#ssvg-id-framed-pictureb)\"/><path d=\"M38.34 51.51c.68-.71 1.59-1.15 2.56-1.28c1.24-.16 2.67.04 3.95-.98c1.34-1.07 7.98-13.31 11.06-13.26c.81.01 1.48.72 2.08 1.61c1.07 1.6 1.92 3.82 3.01 3.82c2.27 0 2.27 6.78 5.05 7.59c2.57.75 3.42.71 5.82 4.21c2.7-3.29 5.06-5.77 6.46-6.4c.23-.1.44-.17.61-.17c2.01 0 4.09 5.37 6.16 8.66s3.05 2.44 5 2.2C92.05 57.28 104 76 104 76H24s9.3-19.29 14.34-24.49z\" fill=\"url(#ssvg-id-framed-pictureb)\"/><radialGradient id=\"ssvg-id-framed-picturec\" cx=\"53.875\" cy=\"43.75\" r=\"36.276\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#4DB6AC\" offset=\"0\"/><stop stop-color=\"#4AB5AA\" offset=\".254\"/><stop stop-color=\"#3FB0A5\" offset=\".472\"/><stop stop-color=\"#2DA99D\" offset=\".676\"/><stop stop-color=\"#159F92\" offset=\".872\"/><stop stop-color=\"#009688\" offset=\"1\"/></radialGradient><path d=\"M72.48 54.15c-2.89-4.43-3.66-4.32-6.44-5.13c-2.77-.81-2.77-7.59-5.05-7.59c-1.09 0-1.94-2.22-3.01-3.82c-.6-.89-1.26-1.6-2.08-1.61c-3.08-.05-9.72 12.18-11.06 13.26c-1.27 1.02-2.71.82-3.95.98c-.98.13-1.88.57-2.56 1.28C33.3 56.71 24 76 24 76h63.2c-1.97-.77-9.5-13.85-14.72-21.85z\" fill=\"url(#ssvg-id-framed-picturec)\" opacity=\".8\"/><radialGradient id=\"ssvg-id-framed-pictured\" cx=\"78.5\" cy=\"49.375\" r=\"26.654\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#66BB6A\" offset=\"0\"/><stop stop-color=\"#52AC56\" offset=\".603\"/><stop stop-color=\"#43A047\" offset=\"1\"/></radialGradient><path d=\"M90.1 57.52c-1.95.24-2.93 1.1-5-2.2c-2.07-3.29-4.15-8.66-6.16-8.66c-.17 0-.38.07-.61.17C73.76 48.89 58.84 70.71 55.82 76H104S92.05 57.28 90.1 57.52z\" fill=\"url(#ssvg-id-framed-pictured)\"/><path d=\"M75.24 57.95c.08-.2-.2-.35-.33-.18c-1.74 2.31-8.35 8.77-10.84 11.6c-.24.28.07.68.4.53c1.01-.47 3.05-1.63 3.24-2.06c.27-.62 1.86-2.19 2.36-2.68c.1-.1.2-.19.3-.27l2-1.66c.39-.32.71-.73.92-1.19l1.95-4.09z\" fill=\"#81C784\" opacity=\".2\"/><path d=\"M77.65 62.93c.1-.14-.04-.32-.2-.25l-1.91.84a.89.89 0 0 0-.33.39l-2.39 4.92c-.04.2.24.3.33.12l4.5-6.02z\" fill=\"#81C784\" opacity=\".2\"/><path d=\"M52.23 45.7c.05-.28-.34-.41-.47-.15c-1.68 3.44-8.63 13.48-11.13 17.78c-.24.42.26.87.65.59c1.2-.86 3.55-2.88 3.68-3.49c.19-.88 1.86-3.31 2.39-4.07c.1-.15.21-.29.33-.43l2.17-2.66c.42-.52.73-1.13.9-1.77l1.48-5.8z\" fill=\"#4DB6AC\" opacity=\".2\"/><path d=\"M43.87 54.42c.15-.17-.02-.43-.24-.36l-2.62.88c-.2.11-.37.27-.48.47l-3.72 6.19c-.08.26.27.43.42.2l6.64-7.38z\" fill=\"#4DB6AC\" opacity=\".2\"/><path d=\"M88.95 67.15c.13.08.27-.09.17-.2c-1.35-1.51-4.89-6.91-6.5-8.99c-.16-.2-.48-.05-.42.2c.18.76.71 2.31.98 2.5c.39.27 1.25 1.57 1.52 1.98l.15.24l.87 1.59c.17.31.41.58.69.79l2.54 1.89z\" fill=\"#81C784\" opacity=\".2\"/><path d=\"M88.24 62.7c-.06-.11.04-.13.17-.04l2.15 1.6c.16.08.31.21.41.35l2.22 3.21l-1.68-1.56c-.08-.07-.17-.08-.14-.01l.99 2.6c.04.11-.15.06-.49 0l-3.63-6.15z\" fill=\"#81C784\" opacity=\".2\"/><path d=\"M56.59 46.39c-.04-.19.12-.19.27 0l2.69 3.28c.21.18.4.44.49.69l2.17 5.77l-1.98-3.04c-.09-.14-.22-.18-.21-.06l.52 4.37c.01.19-.26.04-.74-.19l-3.21-10.82z\" fill=\"#4DB6AC\" opacity=\".2\"/><linearGradient id=\"ssvg-id-framed-picturee\" x1=\"64.608\" x2=\"64.608\" y1=\"64\" y2=\"79.167\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#43A047\" offset=\"0\"/><stop stop-color=\"#378C3B\" offset=\".603\"/><stop stop-color=\"#2E7D32\" offset=\"1\"/></linearGradient><path d=\"M81.79 76.07s-.89-.58-1.35-1.41c.48.06 1.26.1 1.04-.36c0 0-.97-.67-1.33-1.6c.15.02.3-.01.45-.1c0 0 .2-.14-.35-.67c0 0-.48-.4-1.23-2.21c-.13-.3-.54-.32-.67-.02c-.33.71-.86 1.72-1.39 2.36c0 0-.7.83.45.53c-.2.27-.97 1.29-1.45 1.55c0 0-.11.12-.09.24c-.28-.3-.58-.67-.77-1.11c.48.06 1.26.09 1.04-.34c0 0-.8-.52-1.21-1.27c.43.05 1.13.09.93-.32c0 0-.88-.6-1.2-1.44c.13.01.27 0 .4-.09c0 0 .18-.13-.32-.6c0 0-.43-.36-1.1-1.99a.334.334 0 0 0-.61-.02c-.3.63-.77 1.55-1.25 2.12c0 0-.63.75.41.48c-.18.24-.87 1.16-1.3 1.39c0 0-.49.54.89.47c-.33.39-.82.94-1.17 1.12c0 0-.57.58 1.06.49c-.2.26-.51.65-.83.98c-.01-.03-.01-.06-.03-.09c0 0-.8-.52-1.21-1.27c.43.05 1.13.09.93-.32c0 0-.88-.6-1.2-1.44c.13.01.27 0 .4-.09c0 0 .18-.13-.32-.6c0 0-.43-.36-1.1-1.99a.334.334 0 0 0-.61-.02c-.3.63-.77 1.55-1.25 2.12c0 0-.63.75.41.48c-.18.24-.87 1.16-1.3 1.39c0 0-.49.54.89.47c-.31.37-.77.88-1.11 1.08a3.6 3.6 0 0 1-.29-.55c.17.02.36-.01.52-.12c0 0 .24-.16-.41-.78c0 0-.56-.47-1.43-2.58a.429.429 0 0 0-.79-.02c-.39.82-1 2.01-1.62 2.75c0 0-.82.97.53.62c-.14.2-.54.72-.96 1.17c-.26-.25-.56-.6-.73-1.01c.38.05 1.01.07.83-.27c0 0-.64-.42-.97-1.02c.35.04.91.07.75-.26c0 0-.7-.48-.96-1.15c.11.01.22 0 .32-.07c0 0 .15-.1-.25-.48c0 0-.34-.29-.88-1.59a.264.264 0 0 0-.49-.01c-.24.51-.62 1.24-1 1.7c0 0-.51.6.32.38c-.14.19-.7.93-1.04 1.12c0 0-.4.43.72.37c-.26.31-.66.75-.94.89c0 0-.45.47.85.39c-.29.37-.84 1.05-1.21 1.26c0 0-.51.56.93.49c-.34.4-.85.97-1.21 1.16c0 0-.06.07-.09.15c-.16-.16-.33-.36-.46-.59c.35.04.91.07.75-.26c0 0-.7-.48-.96-1.15c.11.01.22 0 .32-.07c0 0 .15-.1-.25-.48c0 0-.34-.29-.88-1.59a.264.264 0 0 0-.49-.01c-.24.51-.62 1.24-1 1.7c0 0-.51.6.33.38c-.14.19-.7.93-1.04 1.12c0 0-.4.43.72.37c-.09.11-.2.23-.31.34c0-.03-.01-.06-.03-.09c0 0-.64-.42-.97-1.02c.35.04.91.07.75-.26c0 0-.7-.48-.96-1.15c.11.01.22 0 .32-.07c0 0 .15-.1-.25-.48c0 0-.34-.29-.88-1.59a.264.264 0 0 0-.49-.01c-.24.51-.62 1.24-1 1.7c0 0-.51.6.33.38c-.14.19-.7.93-1.04 1.12c0 0-.4.43.72.37c-.26.31-.66.75-.94.89c0 0-.45.47.85.39c-.29.37-.84 1.05-1.21 1.26c0 0-.51.56.93.49c-.34.4-.85.97-1.21 1.16c0 0-.67.69 1.48.48c0 0 .12.69 1.48.08c0 0 .44.23.82.25c-.11.15-.31.62 1.52.43c0 0 .12.69 1.48.08c0 0 1.19.63 1.33-.1c0 0 1.77.34 1.44-.3c0 0-.83-.54-1.26-1.32c.45.06 1.18.09.97-.33c0 0-.84-.59-1.2-1.41c.38.05 1.01.07.83-.27c0 0-.05-.03-.12-.09c.24.04.61.05 1.18-.01c0 0 .12.69 1.48.08c0 0 .53.28.92.25c-.02.03-.8.86 1.85.59c0 0 .14.87 1.85.1c0 0 .49.26.94.31c-.12.15-.51.8 1.88.56c0 0 .14.87 1.85.1c0 0 1.49.79 1.66-.12c0 0 2.21.42 1.8-.37c0 0-.45-.3-.91-.78c.25 0 .55-.01.92-.05c0 0 .14.87 1.85.1c0 0 1.49.79 1.66-.12c0 0 2.21.42 1.8-.37c0 0-.37-.24-.78-.64c.25.02.59.01 1.06-.03c0 0 .12.74 1.59.08c0 0 1.28.68 1.42-.11c-.03-.04 1.86.32 1.51-.36zm-29.85.72s0 .01-.01.01c-.08-.12-.15-.25-.21-.38c.22.03.51.04.69-.01c-.17.16-.33.31-.47.38zm.59.71c-.1-.09-.21-.21-.32-.34c.14.02.32.03.58.01c-.07.1-.16.21-.26.33zm7.67-.62c.01-.03.02-.05.03-.09c0 0 .02 0 .06.01c-.04.03-.06.05-.09.08zm9.89-.19c-.01-.01-.01-.02-.02-.03c.02 0 .04 0 .05.01c-.01.01-.02.02-.03.02z\" fill=\"url(#ssvg-id-framed-picturee)\"/><linearGradient id=\"ssvg-id-framed-picturef\" x1=\"46.01\" x2=\"46.01\" y1=\"64\" y2=\"79.167\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#43A047\" offset=\"0\"/><stop stop-color=\"#378C3B\" offset=\".603\"/><stop stop-color=\"#2E7D32\" offset=\"1\"/></linearGradient><path d=\"M48.05 77s-.58-.38-.89-.93c.32.04.83.06.68-.24c0 0-.64-.44-.88-1.05c.1.01.2 0 .3-.07c0 0 .13-.09-.23-.44c0 0-.31-.27-.81-1.46a.236.236 0 0 0-.44-.01c-.22.46-.56 1.13-.91 1.55c0 0-.46.55.3.35c-.13.18-.64.85-.96 1.02c0 0-.36.4.66.34c-.24.28-.6.69-.86.82c0 0-.47.49 1.04.34c0 0 .08.49 1.04.06c0 0 .84.45.94-.07c0 0 1.25.24 1.02-.21z\" fill=\"url(#ssvg-id-framed-picturef)\"/><linearGradient id=\"ssvg-id-framed-pictureg\" x1=\"94.494\" x2=\"94.494\" y1=\"64\" y2=\"79.167\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#43A047\" offset=\"0\"/><stop stop-color=\"#378C3B\" offset=\".603\"/><stop stop-color=\"#2E7D32\" offset=\"1\"/></linearGradient><path d=\"M99.5 77.31s-.91-.59-1.38-1.45c.49.06 1.29.1 1.06-.37c0 0-1-.69-1.36-1.64c.15.02.31-.01.46-.1c0 0 .21-.15-.36-.68c0 0-.49-.41-1.26-2.27a.375.375 0 0 0-.69-.02c-.34.72-.88 1.76-1.42 2.41c0 0-.72.85.46.54c-.11.15-.4.54-.72.89a.138.138 0 0 1-.03-.04s-.49-.41-1.26-2.27a.375.375 0 0 0-.69-.02c-.34.72-.88 1.76-1.42 2.41c0 0-.72.85.46.54c-.21.28-.99 1.32-1.49 1.59c0 0-.56.62 1.02.53c-.37.44-.94 1.07-1.33 1.27c0 0-.74.76 1.63.52c0 0 .13.76 1.62.09c0 0 1.31.7 1.46-.11c0 0 1.94.37 1.58-.33c0 0-.71-.46-1.2-1.16c.07-.01.13-.01.21-.02c0 0 .13.76 1.62.09c0 0 1.31.7 1.46-.11c-.01.03 1.93.4 1.57-.29zm-5.09-1.45h.14c-.03.03-.05.06-.08.09l-.06-.09z\" fill=\"url(#ssvg-id-framed-pictureg)\"/><radialGradient id=\"ssvg-id-framed-pictureh\" cx=\"63.333\" cy=\"76.667\" r=\"52.258\" gradientTransform=\"matrix(1 0 0 .8 0 15.2)\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#8BC34A\" offset=\"0\"/><stop stop-color=\"#84BC47\" offset=\".247\"/><stop stop-color=\"#72AA3D\" offset=\".598\"/><stop stop-color=\"#689F38\" offset=\".753\"/><stop stop-color=\"#689F38\" offset=\"1\"/></radialGradient><path fill=\"url(#ssvg-id-framed-pictureh)\" d=\"M24 76h80v32H24z\"/><path d=\"M89.19 91.89h-.92c-.51 0-.92-.41-.92-.92v-4.59h2.76v4.59c0 .51-.41.92-.92.92z\" fill=\"#795548\"/><radialGradient id=\"ssvg-id-framed-picturei\" cx=\"88.5\" cy=\"65.75\" r=\"23.195\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#43A047\" offset=\"0\"/><stop stop-color=\"#378C3B\" offset=\".603\"/><stop stop-color=\"#2E7D32\" offset=\"1\"/></radialGradient><path d=\"M97.34 86.28s-2.47-1.61-3.75-3.92c1.33.17 3.5.27 2.89-1c0 0-2.7-1.86-3.69-4.44c.41.04.85-.02 1.25-.28c0 0 .57-.39-.98-1.85c0 0-1.33-1.12-3.41-6.15c-.35-.84-1.49-.88-1.87-.05c-.92 1.96-2.38 4.78-3.85 6.54c0 0-1.95 2.31 1.25 1.47c-.56.75-2.69 3.57-4.03 4.3c0 0-1.53 1.67 2.76 1.44c-1.01 1.2-2.54 2.9-3.61 3.45c0 0-2 2.06 4.4 1.42c0 0 .34 2.06 4.4.24c0 0 3.55 1.89 3.95-.29c0 0 5.26 1 4.29-.88z\" fill=\"url(#ssvg-id-framed-picturei)\"/><linearGradient id=\"ssvg-id-framed-picturej\" x1=\"49.428\" x2=\"49.428\" y1=\"74.5\" y2=\"100.25\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#039BE5\" offset=\"0\"/><stop stop-color=\"#039BE5\" offset=\".401\"/><stop stop-color=\"#0A87D8\" offset=\".649\"/><stop stop-color=\"#1565C0\" offset=\"1\"/></linearGradient><path d=\"M60.25 95.67c9.52-4.48 15.75-8.8-6.17-13.33C36.97 78.79 36.35 76 36.35 76h-6.63c-.39 3.67 7.73 6.26 15.43 8.77c7.67 2.5 14.17 4.57-2.15 9.17c-11.9 3.35-17.4 8.26-16.15 14.06h45.33c-16.66-2.76-20.01-8.53-11.93-12.33z\" fill=\"url(#ssvg-id-framed-picturej)\"/><path d=\"M34.43 87.2h-.78c-.43 0-.78-.35-.78-.78v-3.89h2.34v3.89c0 .43-.35.78-.78.78z\" fill=\"#795548\"/><radialGradient id=\"ssvg-id-framed-picturek\" cx=\"29.75\" cy=\"62.25\" r=\"22.82\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#43A047\" offset=\"0\"/><stop stop-color=\"#378C3B\" offset=\".603\"/><stop stop-color=\"#2E7D32\" offset=\"1\"/></radialGradient><path d=\"M41.33 82.44s-2.09-1.36-3.18-3.32c1.13.14 2.97.23 2.45-.84c0 0-2.29-1.58-3.13-3.76c.35.04.72-.01 1.06-.23c0 0 .48-.33-.83-1.57c0 0-1.12-.95-2.89-5.21c-.3-.71-1.26-.75-1.59-.05c-.78 1.66-2.01 4.05-3.26 5.54c0 0-1.66 1.96 1.06 1.25c-.47.64-2.28 3.03-3.41 3.65c0 0-1.3 1.42 2.34 1.22c-.85 1.02-2.15 2.45-3.06 2.92c0 0-1.7 1.75 3.73 1.2c0 0 .29 1.75 3.73.2c0 0 3 1.6 3.34-.25c.01 0 4.47.85 3.64-.75z\" fill=\"url(#ssvg-id-framed-picturek)\"/><linearGradient id=\"ssvg-id-framed-picturel\" x1=\"9.667\" x2=\"27.336\" y1=\"64\" y2=\"64\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFB300\" offset=\"0\"/><stop stop-color=\"#FF8F00\" offset=\"1\"/></linearGradient><path fill=\"url(#ssvg-id-framed-picturel)\" d=\"M6.5 18l15.33 11.5v69L6.5 110z\"/><linearGradient id=\"ssvg-id-framed-picturem\" x1=\"64\" x2=\"64\" y1=\"19.5\" y2=\"34.342\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFC107\" offset=\"0\"/><stop stop-color=\"#FFA000\" offset=\"1\"/></linearGradient><path fill=\"url(#ssvg-id-framed-picturem)\" d=\"M6.5 18l15.33 11.5h84.34L121.5 18z\"/><linearGradient id=\"ssvg-id-framed-picturen\" x1=\"125.17\" x2=\"105.32\" y1=\"64\" y2=\"64\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFCA28\" offset=\"0\"/><stop stop-color=\"#FFB300\" offset=\"1\"/></linearGradient><path fill=\"url(#ssvg-id-framed-picturen)\" d=\"M121.5 18l-15.33 11.5v69L121.5 110z\"/><linearGradient id=\"ssvg-id-framed-pictureo\" x1=\"64\" x2=\"64\" y1=\"97.667\" y2=\"109.67\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFCA28\" offset=\"0\"/><stop stop-color=\"#FFB300\" offset=\"1\"/></linearGradient><path fill=\"url(#ssvg-id-framed-pictureo)\" d=\"M21.83 98.5L6.5 110h115l-15.33-11.5z\"/><path d=\"M103.17 32.5v63H24.83v-63h78.34m3-3H21.83v69h84.33v-69h.01z\" fill=\"#FAFAFA\"/><path d=\"M119 21v86H9V21h110m1-5H8c-2.21 0-4 1.79-4 4v88c0 2.21 1.79 4 4 4h112c2.21 0 4-1.79 4-4V20c0-2.21-1.79-4-4-4z\" fill=\"#FFCA28\"/><path d=\"M120 19c.55 0 1 .45 1 1v88c0 .55-.45 1-1 1H8c-.55 0-1-.45-1-1V20c0-.55.45-1 1-1h112m0-3H8c-2.21 0-4 1.79-4 4v88c0 2.21 1.79 4 4 4h112c2.21 0 4-1.79 4-4V20c0-2.21-1.79-4-4-4z\" fill=\"#424242\" opacity=\".2\"/>"},"baby-angel":{"body":"<path d=\"M52.73 103.81c-2.84-4.71-6.45-12.77-8.44-15.57c-3.24-4.55-8.81-5.91-13.56-2.94c-8.61 5.38-14.63 6.99-20.63 7.49c-1.91.16-4.13.32-5.23 1.89c-.97 1.38-.58 3.38.48 4.7c3.02 3.74 9.56 4.43 13.19 4.77c-1.12.62-2.96 1.84-2.4 3.36c1.21 3.29 10.22 4.23 14.48 4.35c-.65.34-2.72 2.15-2.05 3.31c1.51 2.64 9.93 3.51 14.1 2.83c0 0-2.53 2.35-.95 3.81c2.85 2.63 10.78 2.84 14.86 1.58c4.11-1.28 5.18-3.22 5.62-5.31c.62-3.01-5.43-7.57-9.47-14.27z\" fill=\"#f5f5f5\"/><path d=\"M32.52 101.38c-1.23 1-5.93 2.93-7.34 3.39c-2.65.87-5.96 1.41-8.93 1.37c.45-.88 1.53-1.57 2.29-1.99c6.1-.37 13.03-2.51 13.98-2.77z\" fill=\"#bdbdbd\"/><path d=\"M41.39 108.48c-1.1.78-4.15 3.02-6.1 3.75c-2.91 1.09-5.07 1.4-6.54 1.47c.5-.84 1.45-1.62 1.86-1.83c1.71-.15 3.47-.55 5.13-1.18c1.83-.69 3.84-1.44 5.65-2.21z\" fill=\"#bdbdbd\"/><path d=\"M49.52 116.08c-.95.73-3 2.08-4.49 2.6c-.87.3-2.19.7-3.59 1c.42-.93 1.23-1.68 1.23-1.68c2.62-.51 4.51-1.16 6.85-1.92z\" fill=\"#bdbdbd\"/><linearGradient id=\"ssvg-id-baby-angela\" gradientUnits=\"userSpaceOnUse\" x1=\"30.828\" y1=\"17.985\" x2=\"52.782\" y2=\"41.985\" gradientTransform=\"matrix(1 0 0 -1 0 128)\"><stop offset=\"0\" stop-color=\"#e0e0e0\"/><stop offset=\".366\" stop-color=\"#f5f5f5\" stop-opacity=\"0\"/></linearGradient><path d=\"M52.73 103.81c-2.84-4.71-6.45-12.77-8.44-15.57c-3.24-4.55-8.81-5.91-13.56-2.94c-8.61 5.38-14.63 6.99-20.63 7.49c-1.91.16-4.13.32-5.23 1.89c-.97 1.38-.58 3.38.48 4.7c3.02 3.74 9.56 4.43 13.19 4.77c-1.12.62-2.96 1.84-2.4 3.36c1.21 3.29 10.22 4.23 14.48 4.35c-.65.34-2.72 2.15-2.05 3.31c1.51 2.64 9.93 3.51 14.1 2.83c0 0-2.53 2.35-.95 3.81c2.85 2.63 10.78 2.84 14.86 1.58c4.11-1.28 5.18-3.22 5.62-5.31c.62-3.01-5.43-7.57-9.47-14.27z\" fill=\"url(#ssvg-id-baby-angela)\"/><path d=\"M75.05 103.81c2.84-4.71 6.45-12.77 8.44-15.57c3.24-4.55 8.81-5.91 13.56-2.94c8.61 5.38 14.63 6.99 20.63 7.49c1.91.16 4.13.32 5.23 1.89c.97 1.38.58 3.38-.48 4.7c-3.02 3.74-9.56 4.43-13.19 4.77c1.12.62 2.96 1.84 2.4 3.36c-1.21 3.29-10.22 4.23-14.48 4.35c.65.34 2.72 2.15 2.05 3.31c-1.51 2.64-9.93 3.51-14.1 2.83c0 0 2.53 2.35.95 3.81c-2.85 2.63-10.78 2.84-14.86 1.58c-4.11-1.28-5.18-3.22-5.62-5.31c-.62-3.01 5.43-7.57 9.47-14.27z\" fill=\"#f5f5f5\"/><path d=\"M95.26 101.38c1.23 1 5.93 2.93 7.34 3.39c2.65.87 5.96 1.41 8.93 1.37c-.45-.88-1.53-1.57-2.29-1.99c-6.1-.37-13.03-2.51-13.98-2.77z\" fill=\"#bdbdbd\"/><path d=\"M86.39 108.48c1.1.78 4.15 3.02 6.1 3.75c2.91 1.09 5.07 1.4 6.54 1.47c-.5-.84-1.45-1.62-1.86-1.83c-1.71-.15-3.47-.55-5.13-1.18c-1.83-.69-3.84-1.44-5.65-2.21z\" fill=\"#bdbdbd\"/><path d=\"M78.26 116.08c.95.73 3 2.08 4.49 2.6c.87.3 2.19.7 3.59 1c-.42-.93-1.23-1.68-1.23-1.68c-2.62-.51-4.51-1.16-6.85-1.92z\" fill=\"#bdbdbd\"/><linearGradient id=\"ssvg-id-baby-angelb\" gradientUnits=\"userSpaceOnUse\" x1=\"30.828\" y1=\"17.985\" x2=\"52.782\" y2=\"41.985\" gradientTransform=\"rotate(180 63.89 64)\"><stop offset=\"0\" stop-color=\"#e0e0e0\"/><stop offset=\".366\" stop-color=\"#f5f5f5\" stop-opacity=\"0\"/></linearGradient><path d=\"M75.05 103.81c2.84-4.71 6.45-12.77 8.44-15.57c3.24-4.55 8.81-5.91 13.56-2.94c8.61 5.38 14.63 6.99 20.63 7.49c1.91.16 4.13.32 5.23 1.89c.97 1.38.58 3.38-.48 4.7c-3.02 3.74-9.56 4.43-13.19 4.77c1.12.62 2.96 1.84 2.4 3.36c-1.21 3.29-10.22 4.23-14.48 4.35c.65.34 2.72 2.15 2.05 3.31c-1.51 2.64-9.93 3.51-14.1 2.83c0 0 2.53 2.35.95 3.81c-2.85 2.63-10.78 2.84-14.86 1.58c-4.11-1.28-5.18-3.22-5.62-5.31c-.62-3.01 5.43-7.57 9.47-14.27z\" fill=\"url(#ssvg-id-baby-angelb)\"/><path d=\"M98.23 71.94H29.99c-7.36 0-13.38 5.34-13.38 11.87c0 6.53 6.02 11.87 13.38 11.87h68.24c7.36 0 13.38-5.34 13.38-11.87c0-6.53-6.02-11.87-13.38-11.87z\" fill=\"#e59600\"/><path d=\"M63.85 19.94c-21.62 0-41.65 21.95-41.65 53.53c0 31.42 20.63 46.95 41.65 46.95s41.65-15.53 41.65-46.95c0-31.58-20.03-53.53-41.65-53.53z\" fill=\"#ffca28\"/><path d=\"M68.54 88.17c-.13-.05-.26-.08-.39-.09h-8.51c-.13.02-.26.05-.39.09c-.77.3-1.2 1.06-.83 1.88c.37.81 2.06 3.1 5.47 3.1c3.42 0 5.11-2.29 5.47-3.1c.37-.82-.05-1.58-.82-1.88z\" fill=\"#e59600\"/><g fill=\"#404040\"><ellipse cx=\"43.88\" cy=\"82.22\" rx=\"5.93\" ry=\"5.87\"/><ellipse cx=\"83.9\" cy=\"82.22\" rx=\"5.93\" ry=\"5.87\"/></g><g fill=\"#6d4c41\"><path d=\"M92.5 71.83c.01-.01-2.73-4.16-9.07-4.17s-9.08 4.15-9.08 4.15l.01.01c-.22.3-.36.66-.36 1.06c0 1 .84 1.82 1.88 1.82c.21 0 .74-.15.79-.17c3.8-1.51 6.77-1.52 6.77-1.52s2.95.01 6.75 1.53c.05.02.57.17.79.17c1.04 0 1.88-.81 1.88-1.82c0-.39-.13-.76-.36-1.06z\"/><path d=\"M53.41 71.83c.01-.01-2.73-4.16-9.07-4.17s-9.08 4.15-9.08 4.15l.01.01c-.22.3-.36.66-.36 1.06c0 1 .84 1.82 1.88 1.82c.21 0 .74-.15.79-.17c3.8-1.51 6.77-1.52 6.77-1.52s2.95.01 6.75 1.53c.05.02.58.17.79.17c1.04 0 1.88-.81 1.88-1.82c0-.4-.13-.76-.36-1.06z\"/></g><g><path d=\"M64.24 15.41c-46.08 0-49.27 36.46-47.42 52.43c1.63 14.09 9.23 17.57 9.23 17.57s-1.49-12.3.92-21.22c1.91-7.07 6.48-12.32 6.48-12.32s8.31 6.99 23.81 11.54C64.73 65.6 74.3 64.5 74.3 64.5l-5.37-9.19s8.78 6.25 14.24 7.44c7 1.53 12.14.88 12.14.88l-2.57-9.7s4.45 2.83 7.79 10.56s1.27 20.92 1.27 20.92s8.01-3.45 9.29-17.57c1.62-17.69-.98-52.43-46.85-52.43z\" fill=\"#543930\"/><radialGradient id=\"ssvg-id-baby-angelc\" cx=\"16.41\" cy=\"17.246\" r=\"49.141\" gradientTransform=\"matrix(0 1.0795 -.9718 0 80.582 51.261)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".794\" stop-color=\"#6d4c41\" stop-opacity=\"0\"/><stop offset=\"1\" stop-color=\"#6d4c41\"/></radialGradient><path d=\"M64.24 15.41c-46.08 0-49.27 36.46-47.42 52.43c1.63 14.09 9.23 17.57 9.23 17.57s-1.49-12.3.92-21.22c1.91-7.07 6.48-12.32 6.48-12.32s8.31 6.99 23.81 11.54C64.73 65.6 74.3 64.5 74.3 64.5l-5.37-9.19s8.78 6.25 14.24 7.44c7 1.53 12.14.88 12.14.88l-2.57-9.7s4.45 2.83 7.79 10.56s1.27 20.92 1.27 20.92s8.01-3.45 9.29-17.57c1.62-17.69-.98-52.43-46.85-52.43z\" fill=\"url(#ssvg-id-baby-angelc)\"/></g><path d=\"M63.79 4c-24 0-43.46 7.23-43.46 16.15c0 8.93 19.46 16.15 43.46 16.15s43.46-7.23 43.46-16.15S87.8 4 63.79 4zm0 6.8c13.59 0 24.61 2.93 24.61 6.54c0 3.62-11.02 6.55-24.61 6.55c-13.6 0-24.63-2.93-24.63-6.55c0-3.61 11.03-6.54 24.63-6.54z\" fill=\"#40bfe6\"/><path d=\"M75.01 97.97c-4.19 2.49-17.91 2.49-22.1 0c-2.4-1.43-4.86.76-3.86 2.94c.98 2.15 8.47 7.13 14.95 7.13c6.47 0 13.87-4.98 14.85-7.13c.99-2.19-1.43-4.37-3.84-2.94z\" fill=\"#795548\"/>"},"nerd-face":{"body":"<radialGradient id=\"ssvg-id-nerd-facea\" cx=\"63.6\" cy=\"-2088.9\" r=\"56.96\" gradientTransform=\"matrix(1 0 0 -1 0 -2026)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".5\" stop-color=\"#fde030\"/><stop offset=\".919\" stop-color=\"#f7c02b\"/><stop offset=\"1\" stop-color=\"#f4a223\"/></radialGradient><path d=\"M63.6 118.8c-27.9 0-58-17.5-58-55.9S35.7 7 63.6 7c15.5 0 29.8 5.1 40.4 14.4c11.5 10.2 17.6 24.6 17.6 41.5s-6.1 31.2-17.6 41.4c-10.6 9.3-25 14.5-40.4 14.5z\" fill=\"url(#ssvg-id-nerd-facea)\"/><path d=\"M102.07 71.62c-1.33-2.46-4.14-3.53-7.14-2.6c-8.96 2.8-20.47 4.42-31.59 4.43c-11.12-.01-22.63-1.63-31.59-4.43c-2.99-.93-5.81.14-7.14 2.6c-1.36 2.52-.37 5.42.77 7.94c6.42 14.1 20.57 22.54 37.87 22.59h.16c17.3-.05 31.45-8.49 37.87-22.59c1.16-2.52 2.15-5.43.79-7.94z\" fill=\"#35220b\"/><g fill=\"#35220b\"><path d=\"M63.42 100.89h-.16h.16z\"/><path d=\"M63.49 74.7h-.3h.3z\"/></g><g fill=\"#35220b\"><path d=\"M63.49 74.7h-.3h.3z\"/><path d=\"M63.42 100.89h-.16h.16z\"/></g><path d=\"M78.22 97.17c9.37-3.29 16.75-9.76 20.8-18.66c1.26-2.77 1.51-4.48.85-5.71c-.76-1.42-2.35-1.98-4.19-1.4c-9.14 2.86-20.84 4.52-32.16 4.55h-.35c-11.31-.03-23.01-1.68-32.16-4.55c-.48-.15-.95-.23-1.38-.23c-1.24 0-2.24.58-2.81 1.62c-.67 1.24-.41 2.94.85 5.71c3.98 8.73 11.17 15.12 20.29 18.47c4.3-3.41 9.37-5.22 15.46-5.22c6.11.01 10.66 1.95 14.8 5.42z\" fill=\"none\"/><path d=\"M79.35 98.14c-.37-.34-.75-.65-1.13-.97c-4.15-3.47-8.69-5.41-14.8-5.41c-6.09 0-11.16 1.8-15.46 5.22c-.39.31-.78.61-1.16.94c-.31.35-.57.68-.8 1c5.21 2.07 11.03 3.2 17.27 3.22h.16c5.96-.02 11.54-1.05 16.57-2.95c-.18-.34-.39-.68-.65-1.05z\" fill=\"#ed7770\"/><path d=\"M94.93 69.02c-8.96 2.8-20.47 4.42-31.59 4.43c-11.12-.01-22.63-1.63-31.59-4.43c-2.99-.93-5.81.14-7.14 2.6c-.21.39-.35.79-.45 1.2c.33.17.71.34 1.16.52c12.1 6.17 25.16 8.93 38.8 8.93c13.09 0 25.64-2.55 37.33-8.21c.47-.2.86-.39 1.21-.57c-.09-.64-.27-1.26-.6-1.87c-1.32-2.46-4.13-3.54-7.13-2.6z\" fill=\"#fff\"/><path d=\"M62.84 75.06c8.17.14 14.82-1.1 22.9-2.64c2.02-.39 4.03-.84 6.02-1.37l1.49-.41c.45-.12.79-.2 1.19-.23c.76-.07 1.5.04 2.14.31c1.27.53 3.08 2.13 3.53 3.41c1.19 3.4-.74 9.34-.26 8.35c.02-.03 1.23-2.07 1.24-2.1c.81-1.95 1.87-4.16 1.61-6.83c-.27-2.69-2.3-5.16-4.83-6.09a7.862 7.862 0 0 0-3.82-.41c-.61.07-1.26.25-1.77.42l-1.41.46c-1.89.58-3.81 1.1-5.75 1.56c-7.76 1.81-14.16 2.76-22.18 2.96h-.24c-8.02-.19-14.03-1.15-21.79-2.96c-1.94-.46-3.86-.98-5.75-1.56l-1.41-.46c-.52-.17-1.16-.35-1.77-.42c-1.24-.17-2.58-.06-3.82.41c-2.53.93-4.31 3.39-4.67 6.07c-.58 4.38 3.39 9.09 3.41 9.12c.48.99-2.01-5.14-.82-8.54c.45-1.28 2.1-2.86 3.36-3.39c.64-.27 1.37-.39 2.14-.31c.4.03.73.11 1.19.23l1.49.41c2 .53 4.01.98 6.02 1.37c8.07 1.53 14.16 2.77 22.33 2.64\" fill=\"#eb8f00\"/><path d=\"M125.75 33.33s-1.03-1.78-20.16-3.56c-25.47-2.37-34.61 4.71-36.33 6.31l-.18-.01c-1.91-.12-3.72-.24-5.72-.24h-.09c-.98.01-2.93.11-4.59.21c-1.84-1.69-11.04-8.62-36.28-6.27c-19.12 1.78-20.15 3.56-20.15 3.56l-.12 7.22s2.85.81 4.7 3.1c1.84 2.26 2.7 14.92 5.69 20.87c4.63 9.24 27.65 6.9 27.65 6.9s9.39.74 13.97-7.17c4.15-7.15 5.69-17.17 5.94-19c.95-.55 2.19-.98 3.77-1c1.77.02 3.12.56 4.11 1.2c.33 2.26 1.9 11.88 5.91 18.79c4.58 7.9 13.97 7.17 13.97 7.17s23.02 2.34 27.65-6.9c2.99-5.96 3.85-18.61 5.69-20.87c1.84-2.29 4.7-3.1 4.7-3.1l-.13-7.21zm-73.4 19.92c-1.82 8.44-4.11 14.19-19.72 13.3c-10.05-.57-17.04-.55-18.65-15.21c-.99-9.11.11-12.55.86-13.65c.74-1.09 3.43-4.25 18.98-3.7c15.55.55 17.78 4.04 18.69 5.62c.04.06.07.13.11.2l.66 2.18c.37 2.17.29 5.65-.93 11.26zm61.67-1.91c-1.6 14.66-8.59 14.64-18.64 15.21c-15.61.89-17.9-4.86-19.72-13.3c-1.83-8.42-1.09-12.07-.17-13.64c.91-1.58 3.14-5.08 18.69-5.62c15.56-.55 18.24 2.61 18.98 3.7c.74 1.1 1.85 4.54.86 13.65z\" fill=\"#35220b\"/><path d=\"M90.02 41.94c-4.19 0-8 3.54-8 9.42s3.81 9.42 8 9.42c4.19 0 8-3.54 8-9.42s-3.81-9.42-8-9.42z\" fill=\"#35220b\"/><g><path d=\"M89.63 45.87c-1.03-.72-2.58-.49-3.58.95c-1 1.45-.67 2.97.36 3.69c1.03.72 2.58.49 3.58-.95c1.01-1.45.68-2.97-.36-3.69z\" fill=\"#896024\"/></g><path d=\"M90.02 41.94c-4.19 0-8 3.54-8 9.42s3.81 9.42 8 9.42c4.19 0 8-3.54 8-9.42s-3.81-9.42-8-9.42z\" fill=\"#35220b\"/><g><path d=\"M89.63 45.87c-1.03-.72-2.58-.49-3.58.95c-1 1.45-.67 2.97.36 3.69c1.03.72 2.58.49 3.58-.95c1.01-1.45.68-2.97-.36-3.69z\" fill=\"#896024\"/></g><g><path d=\"M37.67 41.94c-4.19 0-8 3.54-8 9.42s3.81 9.42 8 9.42c4.19 0 8-3.54 8-9.42s-3.81-9.42-8-9.42z\" fill=\"#35220b\"/><path d=\"M37.28 45.87c-1.03-.72-2.58-.49-3.58.95c-1 1.45-.67 2.97.36 3.69c1.03.72 2.58.49 3.58-.95c1-1.45.67-2.97-.36-3.69z\" fill=\"#896024\"/></g>"},"relieved-face":{"body":"<radialGradient id=\"ssvg-id-relieved-facea\" cx=\"63.6\" cy=\"1104.9\" r=\"56.96\" gradientTransform=\"translate(0 -1042)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".5\" stop-color=\"#fde030\"/><stop offset=\".92\" stop-color=\"#f7c02b\"/><stop offset=\"1\" stop-color=\"#f4a223\"/></radialGradient><path d=\"M63.6 118.8c-27.9 0-58-17.5-58-55.9S35.7 7 63.6 7c15.5 0 29.8 5.1 40.4 14.4c11.5 10.2 17.6 24.6 17.6 41.5s-6.1 31.2-17.6 41.4c-10.6 9.3-25 14.5-40.4 14.5z\" fill=\"url(#ssvg-id-relieved-facea)\"/><path d=\"M111.49 29.67c5.33 8.6 8.11 18.84 8.11 30.23c0 16.9-6.1 31.2-17.6 41.4c-10.6 9.3-25 14.5-40.4 14.5c-18.06 0-37-7.35-48.18-22.94c10.76 17.66 31 25.94 50.18 25.94c15.4 0 29.8-5.2 40.4-14.5c11.5-10.2 17.6-24.5 17.6-41.4c0-12.74-3.47-24.06-10.11-33.23z\" fill=\"#eb8f00\"/><g><path d=\"M64 101c-8.54 0-14.63-6.29-16.47-9.78c-.7-1.18-.83-2.62-.37-3.91c.28-.77 1.02-1.29 1.84-1.31c.28.01.55.06.81.16c4.3 1.69 8.07 4.14 14.24 4.14s10-2.45 14.24-4.14c.26-.1.53-.16.81-.16c.81.04 1.51.55 1.79 1.31c.46 1.29.33 2.73-.37 3.91C78.63 94.71 72.54 101 64 101z\" fill=\"#422b0d\"/><g fill=\"#422b0d\"><path d=\"M49.51 54.37l-.2.2c-.16.18-.33.35-.51.5l-.69.57c-.29.22-.62.46-1 .7s-.77.47-1.2.69c-.44.22-.9.41-1.37.57c-.49.15-.99.27-1.5.37c-.52.08-1.04.12-1.57.12H40.59l-.7-.09c-.51-.1-1.01-.22-1.5-.37c-.48-.18-.94-.39-1.39-.63c-.43-.22-.83-.46-1.2-.69c-.59-.39-1.14-.83-1.66-1.31l-.63-.58l-.25-.25a3.53 3.53 0 0 0-4.57-.17a2.66 2.66 0 0 0-.78 3.25l.15.3c.13.29.28.57.44.84a13.83 13.83 0 0 0 4.09 4.32c.79.55 1.63 1.02 2.51 1.4c.97.43 1.97.76 3 1c.55.1 1.06.2 1.73.26c.31 0 .67.06.83.06h.78c1.12-.02 2.23-.13 3.33-.35c1.03-.24 2.03-.57 3-1c.88-.38 1.72-.85 2.51-1.4a13.94 13.94 0 0 0 3.25-3.07l.48-.67l.4-.63c.15-.24.28-.5.39-.77l.11-.25c.6-1.43-.08-3.08-1.51-3.68c-.1-.04-.2-.08-.3-.1c-1.26-.4-2.65-.07-3.59.86z\"/><path d=\"M94.51 54.37l-.2.2c-.16.18-.33.35-.51.5l-.69.57c-.29.22-.62.46-1 .7s-.77.47-1.2.69c-.44.22-.9.41-1.37.57c-.49.15-.99.27-1.5.37c-.52.08-1.04.12-1.57.12H85.59l-.7-.09c-.51-.1-1.01-.22-1.5-.37c-.48-.18-.94-.39-1.39-.63c-.43-.22-.83-.46-1.2-.69c-.59-.39-1.14-.83-1.66-1.31l-.63-.58l-.25-.25a3.53 3.53 0 0 0-4.57-.17a2.66 2.66 0 0 0-.78 3.25l.15.3c.13.29.28.57.44.84a13.83 13.83 0 0 0 4.09 4.32c.79.55 1.63 1.02 2.51 1.4c.98.43 2 .77 3.05 1c.55.1 1.06.2 1.73.26c.31 0 .67.06.83.06h.78c1.12-.02 2.23-.13 3.33-.35c1.05-.23 2.07-.57 3.05-1c.88-.38 1.72-.85 2.51-1.4a13.94 13.94 0 0 0 3.25-3.07l.48-.67l.4-.63c.15-.24.28-.5.39-.77l.11-.25c.6-1.43-.08-3.08-1.51-3.68c-.1-.04-.2-.08-.3-.1a3.556 3.556 0 0 0-3.69.86z\"/></g><path d=\"M28.42 43.28c-.7.73-1.87.76-2.6.05c-.66-.63-.75-1.66-.22-2.4a17.9 17.9 0 0 1 4.07-4.17c4.19-3.23 9.44-4.76 14.71-4.27c2.48.31 2 3.48-.21 3.69c-5.92.47-11.48 2.98-15.75 7.1\" fill=\"#422b0d\"/><g><path d=\"M98.49 43.28c.7.73 1.87.76 2.6.05c.66-.63.75-1.66.22-2.4a17.9 17.9 0 0 0-4.07-4.17a20.916 20.916 0 0 0-14.71-4.27c-2.48.31-2 3.48.21 3.69c5.92.47 11.48 2.98 15.75 7.1\" fill=\"#422b0d\"/></g></g>"},"rolling-on-the-floor-laughing":{"body":"<radialGradient id=\"ssvg-id-rolling-on-the-floor-laughinga\" cx=\"-240.78\" cy=\"288.717\" r=\"56.96\" gradientTransform=\"matrix(.71 -.71 .71 .71 28.09 -314.89)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".5\" stop-color=\"#fde030\"/><stop offset=\".92\" stop-color=\"#f7c02b\"/><stop offset=\"1\" stop-color=\"#f4a223\"/></radialGradient><path d=\"M103.13 102.43c-19.73 19.73-53.39 28.64-80.54 1.48S4.34 43.1 24.07 23.37C35 12.41 48.75 5.91 62.82 5c15.35-.92 29.84 4.95 41.79 16.9s17.75 26.37 16.83 41.72c-.92 14.06-7.44 27.92-18.31 38.81z\" fill=\"url(#ssvg-id-rolling-on-the-floor-laughinga)\"/><path d=\"M74 5.54c9.84 2.31 19 7.59 27.11 15.64c12 12 17.75 26.38 16.83 41.72c-.94 14.1-7.46 27.93-18.35 38.82c-12.77 12.77-31.38 21-50.29 17.85c20.1 4.88 40.26-3.57 53.83-17.14c10.87-10.89 17.39-24.75 18.31-38.82c.92-15.35-4.88-29.77-16.83-41.72C95.6 12.88 85.14 7.33 74 5.54z\" fill=\"#eb8f00\"/><path d=\"M96.71 39.56c-2.77-.8-5.71.57-6.88 3.21a111.583 111.583 0 0 1-19.21 25.47c-7.52 7.59-16.1 14.06-25.47 19.2a5.812 5.812 0 0 0-3.21 6.88c.82 2.75 3.57 4.1 6.16 5.07c14.51 5.43 30.48 1.39 42.75-10.81l.12-.11c12.19-12.27 16.23-28.24 10.8-42.76c-.96-2.58-2.32-5.34-5.06-6.15z\" fill=\"#422b0d\"/><path d=\"M90.08 87.58l-.06.06v.06l.06-.12z\" fill=\"#422b0d\"/><path d=\"M71.61 69l-.11.1l-.1.11l.21-.21z\" fill=\"#422b0d\"/><path d=\"M71.61 69l-.11.1l-.1.11l.21-.21z\" fill=\"#422b0d\"/><path d=\"M90.08 87.58l-.06.06v.06l.06-.12z\" fill=\"#422b0d\"/><path d=\"M97.92 74.49a35.15 35.15 0 0 0 1.51-27.9C98.37 43.74 97.34 42.35 96 42c-1.63-.44-3.33.42-3.95 2c-5.23 9.56-11.8 18.31-19.52 26l-.2.21c-7.7 7.7-16.46 14.25-26.02 19.45c-.42.21-.81.49-1.14.82c-.87.79-1.2 2.01-.84 3.13C44.74 95 46.12 96 49 97.05c8.93 3.3 18.83 2.84 27.41-1.29c.64-5.57 3.2-10.75 7.24-14.63c3.76-3.91 8.85-6.28 14.27-6.64z\" fill=\"none\"/><path d=\"M99.4 74.38c-.51 0-1 .07-1.48.11c-5.43.35-10.53 2.72-14.3 6.64c-4.04 3.88-6.6 9.06-7.24 14.63c-.06.49-.12 1-.15 1.48s.08.88.14 1.28a47.158 47.158 0 0 0 14.48-9.94l.12-.11c4.01-3.99 7.27-8.67 9.62-13.81c-.39-.12-.79-.21-1.19-.28z\" fill=\"#ed7770\"/><path d=\"M89.83 42.77a111.583 111.583 0 0 1-19.21 25.47c-7.52 7.59-16.1 14.06-25.47 19.2a5.812 5.812 0 0 0-3.21 6.88c.13.41.3.8.52 1.17c.41-.14.8-.3 1.19-.49a84.436 84.436 0 0 0 33.76-21.08A84.677 84.677 0 0 0 98 41.71c.17-.41.32-.83.45-1.26c-.52-.4-1.11-.71-1.74-.89c-2.77-.8-5.71.57-6.88 3.21z\" fill=\"#fff\"/><path d=\"M71.4 69.74c5.87-5.68 9.71-11.26 14.33-18.06c1.15-1.7 2.24-3.44 3.29-5.23l.76-1.35c.2-.35.42-.69.68-1c.46-.57 1.05-1.01 1.73-1.29c1.58-.58 3.31-.61 4.91-.08c3.25 1.56 6.08 7.12 5.72 6.08c0 0-.59-2.33-.61-2.36c-.8-2-1.62-4.26-3.69-6a7.577 7.577 0 0 0-7.72-.88a7.755 7.755 0 0 0-3 2.41c-.38.48-.72 1-1 1.55l-.67 1.32c-.93 1.75-1.92 3.48-3 5.17c-3.84 6.41-8.37 12.38-13.51 17.8l-.16.16A98.741 98.741 0 0 1 52 81.31c-1.7 1-3.42 2-5.17 3l-1.36.69c-.55.28-1.07.61-1.55 1a7.69 7.69 0 0 0-2.42 3a7.54 7.54 0 0 0 1 7.59c2.69 3.51 8.83 4 8.86 4c1 .36-5.06-2.22-6.62-5.47a7.101 7.101 0 0 1 0-4.77c.26-.7.69-1.32 1.26-1.8c.31-.26.65-.48 1-.67l1.35-.76c1.78-1 3.52-2.15 5.23-3.3c6.79-4.62 12-8 17.65-13.92\" fill=\"#eb8f00\"/><g><radialGradient id=\"ssvg-id-rolling-on-the-floor-laughingb\" cx=\"-641.585\" cy=\"-742.502\" r=\"31.6\" gradientTransform=\"matrix(-.13 -.99 -1.53 .21 -1141.95 -448.74)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".46\" stop-color=\"#29b6f6\"/><stop offset=\"1\" stop-color=\"#1e88e5\"/></radialGradient><path d=\"M115.13 31.34c1.2 7.64-5.82 14.88-12.19 15.74c-4.48.6-9.48-.43-17-2.3c-1.11-.21-2.24-.54-3.48-.85c-4.58-1.27-9.08-2.8-13.49-4.58a1.806 1.806 0 0 1-1.13-2.13c.13-.38.39-.71.72-.93a58.01 58.01 0 0 1 11.29-9c10.41-6.44 14.37-7.31 18.85-7.91c6.18-1.01 15.13 3.62 16.43 11.96z\" fill=\"url(#ssvg-id-rolling-on-the-floor-laughingb)\"/><path d=\"M105.52 24.19c2.91 1.38 2.93 5.37-1.51 6c-2.85.38-17.52 1.76-15.81-.95c2.8-4.45 13.21-7 17.32-5.05z\" fill=\"#81d4fa\"/><path d=\"M72.65 31.1l-9.23 8.28l3.42-13.15c.03-.16.06-.31.07-.47a4.18 4.18 0 0 0-3.45-4.81c-.54-.09-1.1-.07-1.64.05a6.003 6.003 0 0 0-4.39 5.3c-.57 5.81-1.91 19.5-2.43 24.83c-.16.53.14 1.09.67 1.25c.35.11.73.01.99-.25l20.69-13.08l.41-.29c2.5-1.92 3.11-5.58 1.09-7.7c-1.54-1.62-4.2-1.49-6.2.04z\" fill=\"#422b0d\"/><radialGradient id=\"ssvg-id-rolling-on-the-floor-laughingc\" cx=\"-764.219\" cy=\"-690.255\" r=\"30.26\" gradientTransform=\"matrix(-1 .08 -.13 -1.53 -814.51 -921.26)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".46\" stop-color=\"#29b6f6\"/><stop offset=\"1\" stop-color=\"#1e88e5\"/></radialGradient><path d=\"M25.9 104c-.36-4.31-.37-8.19 3.52-19.26c1.52-4.38 3.58-8.55 6.13-12.42c.14-.36.4-.66.73-.86c.79-.4 1.75-.13 2.23.61c2.57 3.76 4.92 7.66 7.06 11.68c.54 1.1 1.08 2.08 1.51 3.08c3.3 6.69 5.29 11.16 5.65 15.47c.51 6.13-4.82 14.19-12.21 14.65c-8.05.46-14.24-6.95-14.62-12.95z\" fill=\"url(#ssvg-id-rolling-on-the-floor-laughingc)\"/><path d=\"M33 92.17c2.17-2.17 3.9 11.83 4.13 14.58c.35 4.28-3.39 5.08-5.27 2.65c-2.68-3.4-2.43-13.71 1.14-17.23z\" fill=\"#81d4fa\"/><path d=\"M30.17 78.76l6.66-10.47l-12.41 5.54L24 74c-2.19.74-4.57-.43-5.32-2.62c-.18-.52-.25-1.07-.21-1.62a5.99 5.99 0 0 1 4.51-5.2L47 58.05c.5-.24 1.1-.03 1.34.47c.16.33.13.72-.09 1.01l-9.47 22.55c-.06.16-.13.31-.21.46c-1.48 2.78-5 4-7.42 2.34c-1.85-1.26-2.15-3.88-.98-6.12z\" fill=\"#422b0d\"/></g>"},"smiling-face-with-open-mouth-and-cold-sweat":{"body":"<symbol id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweath\" viewBox=\"-64.5 -64.5 129 129\"><g fill=\"none\" stroke=\"#4285F4\" stroke-miterlimit=\"10\"><path d=\"M-64-64H64V64H-64z\"/><path d=\"M36.95 37.82C27.32 46.32 14.2 51 0 51c-14.27 0-27.39-4.62-36.96-13.01C-47.45 28.79-53 15.65-53 0c0-15.58 5.55-28.69 16.04-37.92C-27.36-46.35-14.24-51 0-51c14.17 0 27.29 4.71 36.95 13.25C47.45-28.45 53-15.4 53 0c0 15.47-5.55 28.55-16.05 37.82z\"/><path d=\"M0 55c-29.59 0-57-19.01-57-55 0-35.8 27.41-55 57-55S57-35.31 57 0c0 35.51-27.41 55-57 55z\"/><path d=\"M0-43c-12.29 0-23.54 3.94-31.68 11.09C-40.39-24.25-45-13.21-45 0c0 29.7 22.6 43 45 43 21.67 0 45-13.46 45-43S21.67-43 0-43z\"/><path d=\"M-.01 51V-51\"/><path d=\"M-16 48.95v-97.88\"/><path d=\"M15.99 48.91v-97.84\"/><path d=\"M53 .08H-53\"/></g></symbol><linearGradient id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweata\" x1=\"64.495\" x2=\"64.495\" y1=\"22.01\" y2=\"105.44\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FEE133\" offset=\".5\"/><stop stop-color=\"#FEDE32\" offset=\".612\"/><stop stop-color=\"#FCD32F\" offset=\".708\"/><stop stop-color=\"#FAC12B\" offset=\".797\"/><stop stop-color=\"#F7A924\" offset=\".883\"/><stop stop-color=\"#F6A323\" offset=\".9\"/></linearGradient><path d=\"M64.5 117c-26.49 0-55-16.58-55-53 0-36.41 28.51-53 55-53 14.68 0 28.28 4.86 38.27 13.69C113.71 34.34 119.5 47.94 119.5 64c0 15.99-5.78 29.56-16.73 39.24C92.74 112.11 79.15 117 64.5 117z\" fill=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweata)\"/><path d=\"M64.5 13c14.19 0 27.32 4.68 36.95 13.18 10.5 9.27 16.05 22.34 16.05 37.82 0 15.4-5.55 28.45-16.05 37.75C91.78 110.29 78.66 115 64.49 115c-14.24 0-27.36-4.65-36.96-13.08C17.04 92.69 11.5 79.58 11.5 64c0-15.65 5.55-28.79 16.04-37.99C37.1 17.62 50.23 13 64.5 13m0-4c-29.59 0-57 19.01-57 55 0 35.8 27.41 55 57 55s57-19.69 57-55c0-35.51-27.41-55-57-55z\" fill=\"#EB8F00\"/><defs><path id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweatb\" d=\"M63.47 62.53c-15.71 0-30.31-1.32-42.49-3.57-3.02-.56-5.69 2.1-5.08 5.11 4.04 19.81 23.55 36.08 47.55 36.08 26.27 0 43.94-16.8 47.61-36.15.57-2.99-2.1-5.6-5.09-5.04-12.18 2.25-26.78 3.57-42.5 3.57z\"/></defs><clipPath id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweatc\"><use xlink:href=\"#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatb\"/></clipPath><path d=\"M63.47 62.53c-15.71 0-30.31-1.32-42.49-3.57-3.02-.56-5.69 2.1-5.08 5.11 4.04 19.81 23.55 36.08 47.55 36.08 26.27 0 43.94-16.8 47.61-36.15.57-2.99-2.1-5.6-5.09-5.04-12.18 2.25-26.78 3.57-42.5 3.57z\" clip-path=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatc)\" fill=\"#242424\"/><path d=\"M116.72 61.38V46.49H10.24v14.89C26.61 71 44.6 76.35 63.48 76.35s36.86-5.35 53.24-14.97z\" clip-path=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatc)\" fill=\"#fff\"/><path d=\"M63.48 86.42c-11.78 0-22.05 6.42-27.53 15.95 7.12 3.89 16.83 6.29 27.53 6.29s20.41-2.4 27.53-6.29c-5.48-9.53-15.75-15.95-27.53-15.95z\" clip-path=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatc)\" fill=\"#ED7770\"/><g clip-path=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatc)\"><defs><path id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweatd\" d=\"M10.24 46.49v14.89C26.62 71 44.6 76.35 63.48 76.35s36.86-5.35 53.24-14.97V46.49H10.24zm53.24 39.93c-11.78 0-22.05 6.42-27.53 15.95 7.12 3.89 16.83 6.29 27.53 6.29 10.71 0 20.41-2.4 27.53-6.29-5.48-9.53-15.75-15.95-27.53-15.95z\"/></defs><clipPath id=\"ssvg-id-smiling-face-with-open-mouth-and-cold-sweate\"><use xlink:href=\"#ssvg-id-smiling-face-with-open-mouth-and-cold-sweatd\"/></clipPath><g clip-path=\"url(#ssvg-id-smiling-face-with-open-mouth-and-cold-sweate)\"><path d=\"M106.79 63.09c.07 0 .14.07.14.12-1.68 8.85-6.6 16.96-13.85 22.84-7.97 6.46-18.21 9.88-29.63 9.88-10.46 0-20.64-3.45-28.67-9.72-7.72-6.03-12.96-14.19-14.76-23.02.01-.02.07-.1.18-.1h.01c12.86 2.38 27.82 3.64 43.26 3.64s30.41-1.26 43.28-3.65c.01.01.03.01.04.01m0-4.21c-.27 0-.54.02-.81.08-12.18 2.26-26.79 3.58-42.51 3.58-15.71 0-30.31-1.32-42.49-3.57-.27-.05-.54-.08-.81-.08-2.67 0-4.83 2.44-4.27 5.18 4.04 19.81 23.55 36.08 47.55 36.08 26.27 0 43.94-16.8 47.61-36.15.52-2.72-1.63-5.12-4.27-5.12z\" fill=\"#EB8F00\"/></g></g><path d=\"M110 52.99c-5.64 0-10.01-5.51-10.01-10.25 0-3.29 1.46-7.07 3.48-12.31.29-.76.6-1.55.91-2.37 1.59-4.19 3.9-8.7 5.5-11.67 1.41 2.92 3.52 7.34 5.5 11.77 3.59 8.06 4.63 11.33 4.63 14.58 0 4.74-4.37 10.25-10.01 10.25z\" fill=\"#5F7AFF\"/><path d=\"M109.8 20.86c1.16 2.44 2.48 5.28 3.75 8.12 3.46 7.76 4.46 10.85 4.46 13.76 0 3.74-3.57 8.25-8.01 8.25s-8.01-4.51-8.01-8.25c0-2.92 1.4-6.55 3.34-11.59.3-.77.6-1.56.91-2.38 1.02-2.67 2.34-5.48 3.56-7.91m.2-8.78s-4.74 8.04-7.49 15.26c-2.51 6.6-4.52 11.22-4.52 15.39 0 5.96 5.38 12.25 12.01 12.25s12.01-6.29 12.01-12.25c0-3.75-1.21-7.34-4.81-15.39-3.43-7.7-7.2-15.26-7.2-15.26z\" fill=\"#4864ED\"/><g fill=\"#242424\"><path d=\"M48.83 47.08s-.06-.07-.17-.21c-.1-.13-.25-.33-.45-.57-.16-.17-.35-.37-.57-.6-.23-.26-.5-.52-.77-.79-.28-.26-.58-.53-.88-.76-.3-.24-.62-.42-.88-.57-.27-.16-.52-.21-.69-.26-.09-.04-.16-.03-.22-.04-.03.01-.06-.01-.09 0l-.04.01h-.04c.13 0-.29.01.29-.01l-.58.02c-.15 0-.05.01-.04.01.03 0 .05 0 .08-.01.09-.03 0 0-.03 0-.04 0-.08.01-.12.03-.16.05-.42.1-.69.26-.27.15-.58.33-.88.57-.3.23-.6.5-.88.76-.55.54-1.03 1.08-1.37 1.47-.34.4-.54.63-.54.63l-.24.28c-1.44 1.68-4.09 1.97-5.91.64-1.24-.9-1.78-2.32-1.55-3.66 0 0 .07-.43.28-1.18.22-.74.59-1.81 1.31-3.06.73-1.24 1.78-2.71 3.55-4.04.87-.66 1.94-1.31 3.2-1.74.31-.12.63-.22.97-.3.35-.09.62-.17 1.1-.24l.65-.09c.2-.03.49-.06.54-.06l.58-.04.32-.01h.1l.13.01.27.01.54.04c.36.03.7.09 1.05.15.69.13 1.37.3 1.99.53 1.26.44 2.32 1.09 3.2 1.74 1.78 1.33 2.82 2.8 3.55 4.04.37.62.64 1.2.84 1.72.22.49.38 1.02.51 1.41.12.38.12.58.16.76.03.17.05.26.05.26.39 2.12-1.17 4.13-3.48 4.49-1.65.25-3.24-.42-4.15-1.6z\"/><path d=\"M88.26 47.08s-.06-.07-.16-.21c-.1-.13-.25-.33-.45-.57-.16-.17-.35-.37-.57-.6-.23-.26-.5-.52-.77-.79-.28-.26-.58-.53-.88-.76-.3-.24-.62-.42-.88-.57-.27-.16-.52-.21-.69-.26-.09-.04-.16-.03-.22-.04-.03.01-.06-.01-.09 0l-.04.01h-.04c.13 0-.29.01.29-.01l-.58.02c-.15 0-.05.01-.04.01.03 0 .05 0 .08-.01.09-.03 0 0-.03 0-.04 0-.08.01-.12.03-.16.05-.42.1-.69.26-.27.15-.58.33-.88.57-.3.23-.6.5-.88.76-.55.54-1.03 1.08-1.37 1.47-.34.4-.54.63-.54.63l-.24.28c-1.44 1.68-4.09 1.97-5.91.64-1.24-.9-1.78-2.32-1.55-3.66 0 0 .07-.43.28-1.18.22-.74.59-1.81 1.31-3.06.73-1.24 1.78-2.71 3.55-4.04.87-.66 1.94-1.31 3.2-1.74.31-.12.63-.22.97-.3.35-.09.62-.17 1.1-.24l.65-.09c.2-.03.49-.06.54-.06l.58-.04.32-.01h.1l.13.01.27.01.54.04c.36.03.7.09 1.05.15.69.13 1.37.3 1.99.53 1.26.44 2.32 1.09 3.2 1.74 1.78 1.33 2.82 2.8 3.55 4.04.37.62.64 1.2.84 1.72.22.49.38 1.02.51 1.41.12.38.12.58.16.76.03.17.05.26.05.26.39 2.12-1.17 4.13-3.48 4.49-1.66.25-3.25-.42-4.16-1.6z\"/></g>","hidden":true},"alien":{"body":"<path d=\"M64 4.5C36.2 4.5 8 28.1 8 55.8s44.3 67.7 56.2 67.7c13.2 0 55.8-39.9 55.8-67.7S91.8 4.5 64 4.5z\" fill=\"#adbcc3\"/><g fill=\"#422b0d\"><path d=\"M64 102.35c-9.37 0-16.06-5.52-18.07-8.58c-.76-.98-.92-2.31-.41-3.44c.39-.74 1.17-1.18 2-1.15c.3 0 .6.05.88.15C53.1 90.8 57.23 93 64 93s10.92-2.16 15.63-3.63c.28-.1.58-.15.88-.15c.83-.03 1.61.41 2 1.15c.51 1.13.35 2.46-.41 3.44c-2.04 3.02-8.73 8.54-18.1 8.54z\"/><path d=\"M54.05 81.56c-3 3.88-17.71 3.89-28.85-6.36c-10.09-9.28-9.46-25.64-6.13-28.94s19.19-3.38 28.85 6.36s9.8 25.3 6.13 28.94z\"/><path d=\"M80.08 52.58c9.66-9.7 25.52-9.62 28.85-6.33s3.53 19.11-6.13 28.8S77.64 85 73.94 81.38s-3.52-19.1 6.14-28.8z\"/></g><path d=\"M64 4.5c14.52 0 29.13 6.42 39.8 16.5C93 9.46 77.17 2 61.47 2c-27.8 0-56 23.6-56 51.3c0 15.6 14.06 35.11 28.47 49.18C20.46 88.64 8 70.49 8 55.8C8 28.1 36.2 4.5 64 4.5z\" fill=\"#adbcc3\"/>"},"soccer-ball":{"body":"<linearGradient id=\"ssvg-id-soccer-balla\" gradientUnits=\"userSpaceOnUse\" x1=\"4\" y1=\"64\" x2=\"124\" y2=\"64\"><stop offset=\".633\" stop-color=\"#424242\"/><stop offset=\"1\" stop-color=\"#655c5a\"/></linearGradient><circle cx=\"64\" cy=\"64\" r=\"60\" fill=\"url(#ssvg-id-soccer-balla)\"/><radialGradient id=\"ssvg-id-soccer-ballb\" cx=\"64.358\" cy=\"66.237\" r=\"61.962\" gradientTransform=\"matrix(1 0 0 .9961 0 .258)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".799\" stop-color=\"#655c5a\" stop-opacity=\"0\"/><stop offset=\".967\" stop-color=\"#655c5a\"/></radialGradient><circle cx=\"64\" cy=\"64\" r=\"60\" fill=\"url(#ssvg-id-soccer-ballb)\"/><radialGradient id=\"ssvg-id-soccer-ballc\" cx=\"65.365\" cy=\"56.864\" r=\"57.592\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".603\" stop-color=\"#fcfcfc\"/><stop offset=\"1\" stop-color=\"#e3e1db\"/></radialGradient><path d=\"M123.86 67.92L106.3 50.81a6.536 6.536 0 0 1-1.88-5.78l3.72-21.66A60.114 60.114 0 0 0 85.7 8.06l-18.66 9.81c-1.9 1-4.17 1-6.08 0L42.31 8.06a60.114 60.114 0 0 0-22.44 15.31l3.72 21.66c.36 2.12-.34 4.28-1.88 5.78L4.14 67.92c.53 8.28 2.75 16.09 6.3 23.12l25.54 3.71c2.13.31 3.97 1.64 4.92 3.57l12.17 24.66c3.55.65 7.2 1.01 10.93 1.01s7.39-.36 10.93-1.01L87.1 98.33a6.521 6.521 0 0 1 4.92-3.57l25.54-3.71a59.854 59.854 0 0 0 6.3-23.13z\" fill=\"url(#ssvg-id-soccer-ballc)\"/><path d=\"M49.58 76.32a1.6 1.6 0 0 0-2.18.64L37.33 95.18s.87.3 1.57.77c.7.47 1.05 1.12 1.05 1.12L50.22 78.5c.43-.78.14-1.75-.64-2.18z\" fill=\"#424242\"/><path d=\"M78.31 75.95a1.6 1.6 0 0 0-.64 2.18l10.34 18.93s.44-.7 1.19-1.19s1.46-.66 1.46-.66L80.49 76.59a1.62 1.62 0 0 0-2.18-.64z\" fill=\"#424242\"/><path d=\"M86.86 49.37c.05.85.76 1.51 1.6 1.51h.1l16.88-1.08s-.54-.97-.79-1.72c-.24-.75-.31-1.41-.31-1.41l-15.99 1c-.87.05-1.55.81-1.49 1.7z\" fill=\"#4e4545\"/><path d=\"M64.21 32.68c.89 0 1.61-.72 1.61-1.61V18.36s-.95.23-1.68.26s-1.53-.15-1.53-.15v12.6c0 .89.71 1.61 1.6 1.61z\" fill=\"#4e4545\"/><path d=\"M39.48 50.97h.11a1.6 1.6 0 0 0 1.6-1.5c.06-.89-.61-1.65-1.5-1.71l-16.11-1.17s-.02 1.12-.29 1.74c-.22.5-.87 1.37-.87 1.37l17.06 1.27z\" fill=\"#4e4545\"/><linearGradient id=\"ssvg-id-soccer-balld\" gradientUnits=\"userSpaceOnUse\" x1=\"64\" y1=\"71.291\" x2=\"64\" y2=\"35.608\"><stop offset=\".213\" stop-color=\"#424242\"/><stop offset=\".864\" stop-color=\"#655c5a\"/></linearGradient><path d=\"M47.49 76.64l-8.43-25.96c-.4-1.24.04-2.6 1.09-3.36l22.08-16.04c1.05-.77 2.48-.77 3.53 0l22.08 16.04c1.05.77 1.49 2.12 1.09 3.36L80.5 76.64a3.008 3.008 0 0 1-2.86 2.08H50.35c-1.3 0-2.45-.84-2.86-2.08z\" fill=\"url(#ssvg-id-soccer-balld)\"/>"}},"width":128,"height":128});
Iconify.addCollection({"prefix":"fxemoji","icons":{"alien":{"body":"<path fill=\"#597B91\" d=\"M67.9 30.9v-1.2C67.2 13.2 53.6 0 37 0C20.3 0 6.7 13.2 6.1 29.7v2.9C7.1 55.3 28.1 72 37 72c8.8 0 29.8-16.7 30.9-39.4c-.1-.5 0-1.1 0-1.7z\"/><path fill=\"#2B3B47\" d=\"M26.3 33.4c-1.3-3.5-5-5.6-8.7-4.6c-3.7 1-5.9 4.6-5.3 8.4h-.1l2.7 9.9c1 3.9 5.1 6.2 9 5.2s6.2-5.1 5.2-9l-2.8-9.9z\"/><path fill=\"#2B3B47\" d=\"M61.6 37.1c.7-3.7-1.6-7.4-5.3-8.4c-3.7-1-7.5 1.1-8.7 4.6h-.1l-2.7 9.9c-1 3.9 1.3 7.9 5.2 9c3.9 1 7.9-1.3 9-5.2l2.6-9.9z\"/><path fill=\"#2B3B47\" d=\"M37 64.5c-3.2 0-6-1.6-7.6-4.3c-.2-.4-.2-.8 0-1.2c.2-.4.6-.6 1.1-.6h13.2c.4 0 .8.2 1.1.6c.2.4.2.8 0 1.2c-1.8 2.7-4.7 4.3-7.8 4.3z\"/>","width":72,"height":72},"worldmap":{"body":"<path fill=\"#13A031\" d=\"M387.548 144.017c3.408.692 6.687.993 7.231 5.868c.277 2.483 3.627 2.737 6.1 2.804c4.436.121 5.596.838 5.332 4.793c-.213 3.194.819 4.139 3.805 4.402c3.932.346 7.616 1.467 11.754-.124c3.724-1.431 5.854.458 7.622 4.943c.375.95.912 2.217 2.022 1.532c5.06-3.122 11.102-.69 16.523-3.445c3.601-1.83 8.732-1.001 12.345 2.471c1.747 1.679 3.82 2.486 5.988 1.01c2.299-1.565 4.203-.125 5.386 1.092c3.758 3.865 8.001 2.716 12.313 1.894c.577-.11 1.136-.318 1.703-.48c2.342-.671.147 4.704 2.772 2.413c1.391-1.214 2.364-1.468 3.937-1.659c7.167-.871 12.452 3.194 17.948 6.797l-2.629 6.175a13.99 13.99 0 0 0-.573-.133c-1.559-.325-2.982-3.053-3.452-2.307c-.972 1.54-2.927 2.857-2.673 5.011c.326 2.764-1.041 3.417-3.489 3.534c-2.18.104-4.407.49-6.095 2.213c-1.375 1.405-3.004 1.433-4.954 1.358c-5.038-.194-7.75 2.198-8.38 7.305c-.647 5.238-5.538 7.118-8.125 10.807c-.836 1.192-1.586-.353-2.035-1.148c-2.053-3.638-.781-7.02 1.05-10.212c.886-1.544 2.31-2.772 3.434-4.189c.682-.859 2.456-1.411 1.648-2.747c-.715-1.182-2.358-1.503-3.782-1.466c-1.779.047-2.983 1.267-3.803 2.652c-1.429 2.414-3.113 2.059-5.589 1.615c-6.455-1.157-13.138-1.834-17.634 4.644c-1.19 1.715-4.873 1.965-3.75 4.75c1.057 2.621 4.312.887 6.517 1.566c1.629.501 3.825-.061 3.898 2.132c.078 2.364 2.484 5.01-.2 7.116c-.833.654-1.585 1.052-1.698 2.165c-.057.561-.038 1.41-.724 1.408c-.649-.002-.578-.84-.645-1.379c-.049-.398-.015-.805-.061-1.204c-.128-1.119.365-2.333-.504-3.34c-.303 1.133-.407 2.373-.944 3.382c-2.557 4.817-5.283 9.367-11.26 10.817c-5.476 1.328-6.02 2.449-4.703 7.979c.48 2.016.491 3.733-1.671 4.446c-2.09.689-2.741-1.252-3.462-2.596c-.556-1.036-.868-2.254-1.049-3.427c-.265-1.718-1.219-1.873-2.558-1.381c-1.042.383-2.148 1.681-3.099.143c-.656-1.061-1.074-1.763-2.021-.432c-.567.797-1.46 1.779-1.349 2.555c.241 1.688 1.493.322 2.307.401c2.327.228 4.52.505 1.462 3.248c-1.387 1.244-.972 2.872-.654 4.496c1.624 8.294-1.931 14.421-9.803 17.233c-1.967.703-4.424.583-5.273 3.356c-.541 1.767-1.349 1.617-2.135-.152c-.95-2.139-2.372-.77-3.438-.024c-1.447 1.014-1.471 2.284-.128 3.501c.596.54 1.234 1.038 1.791 1.615c3.801 3.935 2.463 9.444-2.709 11.499c-1.426.567-1.645-.407-2.216-1.217c-1.553-2.203-4.233-4.803-6.227-2.999c-2.573 2.328.148 5.093 2.195 7.052c1.506 1.441 3.279 3.176 2.897 5.048c-.875 4.282 2.918 6.886 3.159 10.679c.109 1.71 1.756 1.966 3.127 2.346c4.021 1.115 7.765 3.419 12.209 2.726c.764-.119 1.887.188 1.943 1.01c.08 1.166-1.131.83-1.839.894c-5.069.455-10.258-.399-14.817-1.856c-3.515-1.123-6.489-5.166-8.773-8.54a77.322 77.322 0 0 0-6.226-8.029c-.658-.741-1.888-1.209-1.093-2.33c.897-1.264 2.206-.767 3.136.052c1.35 1.189 2.528 2.573 3.795 3.858c.42.426 1.021.892 1.529.463c.596-.502-.042-1.048-.354-1.484c-3.299-4.616-4.536-9.737-4.083-15.38c.169-2.104-.175-4.21-3.297-3.536c-2.686.58-2.615-1.983-3.548-3.303c-3.915-5.54-5.369-5.682-10.398-1.191c-1.155 1.031-2.421 1.938-3.684 2.834c-4.344 3.083-5.489 7.65-3.257 12.72c.457 1.039 1.577 2.189.34 3.241c-1.14.97-2.101-.257-3.187-.628c-5.012-1.713-6.9-5.889-7.589-10.382c-1.027-6.693-6.065-10.562-9.666-15.465c-.924-1.259-2.304-1.525-3.752-1.55c-1.809-.032-3.633-.192-5.424-.017c-1.115.109-2.176-.053-3.222-.282c-1.784-.39-2.842 1.902-1.387 3.005c.694.526 1.447 1.005 2.089 1.575c1.156 1.026-.034 1.648-.37 2.518c-2.124 5.505-7.421 6.922-11.972 9.013c-2.846 1.307-5.541 3.283-8.87 3.479c-.618.036-1.233.361-1.233 1.067c0 .953.754 1.413 1.556 1.485c2.039.184 3.835-.928 5.785-1.239c2.716-.432 4.026 1.41 2.815 3.879c-2.389 4.873-5.461 9.368-9.861 12.794c-6.738 5.247-7.38 7.39-4.853 15.249c1.98 6.159 1.748 7.088-3.623 11.162c-2.049 1.555-3.805 2.98-2.786 5.923c.403 1.164.502 2.755-.462 3.42c-3.853 2.661-5.114 7.087-7.533 10.687c-3.889 5.787-9.849 5.509-15.583 5.945c-1.797.137-3.152-1.645-3.334-3.038c-.656-5.013-3.142-9.576-4.865-13.997c-2.651-6.803-4.64-12.668-1.984-19.841c.762-2.059-.242-5.46-1.597-7.46c-2.27-3.351-3.349-6.727-3.244-10.669c.033-1.256-.65-2.82-1.916-2.636c-3.452.502-6.252-2.678-9.144-2.027c-3.245.731-6.798.092-9.78 1.947c-2.003 1.246-3.775.745-5.599-.454c-4.58-3.01-7.175-7.934-11.171-11.506c-.419-.375-.672-1.111-.572-1.664c1.374-7.608-1.254-16.357 5.925-22.326c3.49-2.902 4.868-7.349 8.226-10.323c1.41-1.249 1.475-2.94-.668-3.776c-1.429-.558-2.919-1.361-2.454-2.904c.775-2.571-.717-5.281.586-7.634c1.17-2.111 3.442-1.728 5.432-1.622c5.931.316 6.473-.139 5.419-6.187c-.446-2.562.164-3.757 2.353-5.341c2.539-1.838 4.965-3.975 7.546-5.798c4.152-2.934 4.621-4.074 1.656-8.53c-.928-1.394-1.53-2.758-1.896-4.328c-1.018-4.374-.332-6.256 3.797-8.196c2.881-1.353 5.041-3.124 6.308-6.083c2.201-5.141 6.441-8.055 11.46-9.987c2.06-.793 4.212-1.346 6.286-2.107c3.695-1.356 6.851-1.983 10.201 1.562c2.205 2.333 6.412 1.974 9.331 3.866c.992.644 2.534.755 3.155 1.601c2.43 3.307 4.211 5.019 5.591-.702c.317-1.313 2.416-1.751 3.548-.403c1.72 2.049 3.269 1.569 5.221.442c3.274-1.89 7.072-.932 10.598-1.619c3.742-.729 1.287-2.342.805-3.733l.067-.083c2.944.603 5.874 1.29 8.837 1.774c1.568.256 2.673.294 3.16-2.161c1.057-5.329 3.45-6.334 9.301-5.783c2.094.197 4.118-.164 6.239.773c1.225.541 3.422.303 3.762-1.873c.474-3.035 2.025-2.644 4.311-1.974c2.114.619 4.999 1.678 4.969-2.589c-.008-1.118 1.374-1.322 2.345-1.534c4.265-.93 8.243-2.888 12.841-2.683c4.222.188 5.361-2.615 3.092-6.64c1.244-.986 1.96-2.349 2.629-3.746zm-135.297 83.107c-4.451.786-7.471 3.471-9.284 7.34c-.886 1.891-1.658 3.587-3.617 4.518c-.653.31-1.977.132-1.817.984c.125.664 1.461.525 2.177.275c3.588-1.251 7.159-2.422 11.005-2.756c2.101-.183 3.987.119 5.818.957c1.8.824 1.569 2.526 1.668 4.142c.078 1.256 1.061 2.303 2.318 2.368c4.028.207 7.866 3.622 12.133.646c.658-.459 2.089-.364 2.891.029c4.438 2.179 9.185.667 13.746 1.294c2.234.307 3.028-1.88 3.456-3.502c.523-1.984-1.087-2.024-2.632-2.131c-1.338-.093-2.726-1.213-3.942-1.005c-4.188.716-6.032-1.023-6.297-5.043c-.053-.812-.546-1.586-1.555-1.447c-.679.094-.62.839-.877 1.333c-1.483 2.854-5.322 3.344-7.158.916c-.557-.736-.606-2.689-1.415-2.283c-4.169 2.092-6.013-1.779-8.791-3.123c-1.824-.883-2.958-1.207-3.141 1.441c-.097 1.409-.885 3.188-2.474 2.72c-2.283-.672-.257-2.255-.159-3.45c.151-1.791 1.447-4.175-2.053-4.223zm15.908-21.938c2.779.145 2.549-.001 3.678-1.78c2.651-4.179 1.6-8.31.216-12.472c-.389-1.171-.234-3.334-2.38-2.569c-1.634.583-2.657 2.485-1.598 3.924c3.579 4.868-1.13 7.218-3.056 10.162c-1.204 1.841-3.624 3.708-5.668.231c-.299-.509-.988-.921-1.472-.441c-.347.344-.485 1.127-.388 1.654c.638 3.454 3.359 2.718 5.685 2.724c1.794.005 2.931-2.307 4.983-1.433zm33.065 24.301c-.848-3.305-5.536-3.019-6.229-6.811c-.158-.865-1.34 1.328-2.181 1.964c-1.332 1.007-2.677 1.308-3.502-.348c-.675-1.355-1.401-2.169-2.575-.932c-1.342 1.414-2.931 2.874-2.673 5.157c.164 1.451 1.28 2.279 2.506 2.012c3.848-.838 7.412-.3 11.045 1.13c1.522.598 3.189-.12 3.609-2.172zm-3.793 31.371c-1.259.272-1.308 1.187-1.374 2.188c-.194 2.918 1.904 4.615 3.447 6.602c.7.901 1.419 2.512 2.576 2.019c1.67-.712.618-2.352.302-3.59c-.599-2.352-2.333-4.072-3.548-6.08c-.278-.462-.88-.728-1.403-1.139z\"/><path fill=\"#13A031\" d=\"M-3.619 209.272c5.029-3.084 10.121-6.033 15.75-7.933c.718-.242 1.716-.687 1.638-1.555c-.09-1.005-1.303-.568-1.939-.942c-2.591-1.524-5.277-2.915-7.733-4.634c-3.034-2.124-2.893-3.882.231-5.785c.674-.411 1.467-.624 2.201-.94c.841-.363 2.553-.113 2.217-1.354c-.295-1.09-1.758-.06-2.699-.113c-.791-.044-1.641.001-2.354-.278c-1.375-.538-2.588-1.563-2.342-3.127c.313-1.991 2.081-2.145 3.738-2.164c.738-.009 1.796.856 2.124-.068c.305-.858-.959-.995-1.596-1.408c-4.759-3.09-4.741-3.846.053-6.629c1.213-.704 2.349-1.569 3.622-2.132c3.619-1.6 7.02-2.569 11.291-1.067c4.629 1.628 9.835 1.533 14.718 2.54c6.058 1.249 11.81 1.278 17.988-.292c5.934-1.508 12.295-.386 18.247 1.707c.715.251 1.632.883 2.188.053c.503-.751-.111-1.566-.784-2.019c-1.005-.675-1.924-1.242-2.179-2.642c-.289-1.586-1.227-1.94-2.45-.625c-1.45 1.559-3.195 1.531-4.975.756c-1.822-.793-3.215-1.957-1.954-4.155c.706-1.231 1.479-2.355 1.394-3.874c-.12-2.131 1.743-2.6 2.805-1.918c3.417 2.192 7.701.977 11.172 3.659c2.854 2.206 6.795 2.853 10.56.558c2.173-1.324 4.466-1.617 3.991 2.29c-.184 1.517.325 3.173 1.449 3.768c3.086 1.633 5.675 2.892 1.282 6.087c-.921.67-.236 1.932.91 2.257c1.366.387 3.325.656 3.482-1.086c.184-2.041.892-3.149 2.485-4.326c2.599-1.92 2.162-3.092-1.176-3.127c-2.712-.029-3.641-2.839-5.682-3.958c2.377-.428 3.311-3.279 5.874-3.455c1.395-.096 2.777-.398 4.162-.626c1.976-.325 3.329-1.309 3.62-3.431c.148-1.076.07-2.068-1.201-2.321c-1.813-.36-3.407-1.438-5.043 1.187c-2.31 3.705-6.887.604-10.086 2.301l-.829-2.195c.501-.532.557-1.063-.002-1.594c.411-2.134-1.138-4.058-.103-6.451c1.736-4.014 2.172-4.424 5.672-2.206c1.044.662 2.38 1.408 1.972 2.693c-.547 1.718-2.002.262-3.042.332c-1.291.087-2.534.203-2.548 1.823c-.014 1.594 1.163 1.877 2.495 1.869c1.403-.008 2.81.13 4.208.055c2.579-.138 4.086-1.013 2.013-3.684c-.902-1.163-2.06-2.447-.573-3.621c1.548-1.223 2.622.554 3.372 1.5c.749.945 3.376.944 1.821 3.541c-.471.787 2.022 1.324 3.295 1.638c.609.15 1.208-.222 1.36-.901c.308-1.379-.349-2.298-1.527-2.923a4.291 4.291 0 0 1-.535-.326c-7.44-5.468-7.351-7.183.638-11.885a15.884 15.884 0 0 1 4.442-1.784c8.178-1.95 16.559-2.513 24.859-3.484c3.469-.406 7.144.782 10.702 1.387c1.352.23 3.715.788 3.748 1.315c.097 1.532-2.031 1.476-2.982 2.454c-.54.556-1.547.952-1.01 1.886c.613 1.065 1.97 1.116 2.556.33c3.491-4.677 8.36-3.494 13.149-3.792c3.897-.242 7.833-.755 11.838-2.133c4.41-1.518 9.67-1.958 14.625-2.355c.993-.079 2.27.485 2.964.043c5.994-3.812 11.006 1.861 16.602 1.591c.667-.032 1.181.532.967 1.201c-.16.5-.678 1.218-1.085 1.251c-2.796.229-5.606.289-8.41.44c-.578.031-1.148.221-1.722.338c.34.981 1.212.646 1.845.645c5.989-.014 11.967.832 17.975.112c1.459-.175 3.574-.383 3.861 1.812c.226 1.727-1.61 2.054-2.804 2.709c-4.292 2.356-9.078 4.428-5.79 10.858c.411.803-.656 1.545-.638 2.169c.162 5.545-4.685 9.879-3.65 15.66c.291 1.626-.73 3.322-2.383 3.832c-3.611 1.114-6.42 4.297-10.544 4.04c-.39-.024-.873.003-1.175.21c-5.904 4.038-13.766 5.954-15.743 14.283c-.751 3.163-2.603 3.558-5.428 2.75c-4.475-1.28-6.688-4.685-8.936-8.361c-2.329-3.809-3.339-7.257.228-10.834c.557-.558.518-1.258-.261-1.987c-1.779-1.664-4.923-7.116-5.395-8.929c-1.447-5.562-6.985-10.103-12.472-8.637c-6.063 1.62-8.245-2.416-11.29-5.61c-1.238-1.298-.153-2.206.966-2.765c1.601-.801 3.487-.796 5.038-1.903c1.257-.897 1.342-1.663.701-2.983c-.676-1.393-1.504-.903-2.42-.536c-5.449 2.182-10.285 4.855-12.074 11.194c-.599 2.125-2.277 3.859-2.827 6.293c-.473 2.094-3.341 1.617-5.275 1.931c-.705.115-1.926-.552-1.988.424c-.046.724 1.419.378 2.047.739c4.346 2.494 9.736.976 14.074 4.117c3.454 2.501 7.524 3.812 9.205 8.514c.82 2.295 3.999 3.125 6.393 4.131c1.119.47 2.742.833 1.52 2.28c-.957 1.133-1.411 3.85-3.971 2.5c-.862-.455-1.504-1.32-2.265-1.976c-.442-.381-1.041-.89-1.532-.46c-.542.474-.014 1.064.363 1.493c.53.604 1.178 1.115 1.648 1.758c.858 1.174 3.106 2.272 1.347 3.889c-1.327 1.221-2.998 3.186-5.245 2.132c-4.427-2.075-8.393-5.417-13.816-4.453c-.514.091-1.019-.59-1.028-1.245c-.011-.733.511-1.033 1.164-1.085c.999-.08 2.056.066 2.99-.212c2.564-.764 4.139-3.933 3.226-6.217c-1.061-2.653-7.489-5.738-10.532-5.389c-2.157.248-.749 1.097-.895 2.014c-.411 2.584 1.648 6.679-3.852 6.9c-1.953.079-.407 1.688.38 2.417c1.43 1.325 4.775 1.534 4.383 3.464c-.373 1.84-3.634-.835-5.287 1.039c-.688.78-1.971.861-2.793.19c-3.226-2.632-5.174.1-7.234 1.732c-6.128 4.856-5.875 7.54 1.239 10.968c1.609.775 3.092 1.941 4.814 2.36c4.486 1.093 8.308 2.765 9.435 7.897c.199.904 1.315 2.542 2.664 1.276c.742-.697.747-1.859.174-2.7c-1.757-2.58-1.425-4.292 1.589-5.611c1.345-.588.936-2.137.373-3.212c-1.001-1.91-.617-3.925-.709-5.908c-.234-5.085 2.622-6.946 7.201-4.53c1.741.919 3.744 1.997 4.719 3.566c1.636 2.633 2.922 3.998 6.088 2.035c2.058-1.276 3.522.683 4.187 2.277c1.455 3.487 4.116 5.733 6.824 8.14c2.062 1.833 5.325 3.479 3.383 7.402c-.628 1.267.79 1.547 1.567 2.071c1.35.911 2.613 1.92 2.913 3.658c.138.799-.379 2.208-.477 2.132c-2.21-1.711-4.849-.082-7.023-.954c-1.466-.588-1.548-2.142-.999-3.658c.843-2.329-.378-2.269-2.114-1.839c-1.154.286-2.426.469-3.585.294c-4.178-.629-3.943.791-2.673 4.123c1.127 2.957 2.281 2.726 4.383 1.539c.983-.555 2.018-.43 2.478.723c.437 1.095-.245 2.376-1.08 2.511c-3.133.508-5.691 4.283-9.413 1.629c-1.12-.798-3.002-.192-3.194.699c-.76 3.536-3.74 4.467-6.198 6.09c-.464.306-.803.933-1.006 1.483c-1.809 4.878-4.394 9.053-8.68 12.332c-2.178 1.666-2.319 4.563-.084 6.958c1.097 1.175 1.407 2.797-.071 3.643c-1.464.837-1.67-1.264-2.549-1.914c-.937-.693-1.729-1.699-2.323-2.72c-1.751-3.008-4.44-3.332-7.304-2.414c-1.753.562-3.446.987-5.273.988c-3.596.002-6.806-.176-5.972 5.452c.311 2.099-2.691 4.457.055 7.137c2 1.951 3.807 2.877 6.33 1.302c.851-.531 1.647-1.154 2.508-1.669c1.254-.751 2.814-1.327 4.01-.586c1.835 1.138.038 2.569-.447 3.556c-1.56 3.181-1.253 4.829 2.74 4.796c2.13-.017 3.319 1.407 3.368 3.501c.046 1.962-.786 4.429 1.723 5.187c2.617.79 5.939 1.058 7.981-.574c4.396-3.513 8.727-2.769 13.453-1.288c1.271.398 2.591.586 3.92.673c7.666.506 11.885 7.746 18.923 9.456c2.4 8.306 10.977 7.022 16.499 10.471c1.431.894 3.269 1.353 4.817 2.308c2.985 1.844 3.808 4.211 1.543 6.99c-2.265 2.778-2.851 6.034-3.815 9.325c-1.585 5.409-2.561 11.657-10.337 12.149c-2.096.133-3.185 2.105-3.805 4.21c-2.488 8.448-3.387 9.339-12.514 12.865c-.708.274-.913.554-.681 1.204c1.434 4.014-1.315 5.107-4.224 5.379c-2.719.255-2.858 2.516-3.937 3.988c-1.94 2.647-2.392 6.252-5.284 8.354c-.18.131.022 1.294.367 1.559c1.87 1.435 1.041 2.36-.148 3.854c-3.944 4.96-3.873 5.232-.331 10.392c.566.824 1.66 1.438-.117 2.036c-4.804 1.616-9.314-.618-11.134-5.401c-1.42-3.73-1.504-7.806-.512-11.293c2.071-7.282 1.769-14.849 3.529-22.233c1.347-5.653 2.434-11.942 2.524-18.096c.057-3.851-1.479-6.816-4.529-8.619c-3.376-1.996-5.268-4.8-6.54-8.294c-.338-.928-.945-1.756-1.372-2.656c-1.127-2.375-5.605-3.16-3.035-7.365c1.39-2.274.779-5.583 3.34-7.463c1.649-1.21 1.733-2.97 1.828-4.841c.102-1.999-.38-2.823-2.579-3.037c-3.977-.386-8.146-.815-9.126-6.011c-.213-1.129-1.565-1.253-2.46-1.434c-4.62-.939-8.264-4.006-13.604-4.201c-4.507-.164-10.581-2.451-12.868-8.454c-1.01-2.651-2.14-4.578-6.319-3.732c-3.418.692-5.636-3.607-6.796-6.722c-1.809-4.855-4.388-8.583-8.565-11.926c-4.515-3.613-5.755-9.549-5.641-15.318c.078-3.942.377-7.673-3.863-9.818c-.903-.457-1.273-1.192-1.398-2.372c-.497-4.68-.881-4.942-5.851-5.337c-1.599-.127-1.536-1.485-2.124-2.475c-3.615-6.082-8.206-10.585-15.877-11.414c-2.78-.301-4.487 1.133-6.706 1.562c-2.355.455-5.158-.643-3.61 3.734c.457 1.294-1.57 3.253-3.228 2.717c-3.031-.981-4.475.643-6.029 2.569c-.37.459-.842 1.166-1.289 1.183c-5.492.209-10.032 3.851-15.455 4.248l-.352-1.043zm114.169-44.896c-.985.166-1.969.36-2.652 1.179c-.779.934-.486 1.914.165 2.696c2.108 2.531 3.675 5.667 7.404 6.421c.724.146-.188 2.349 1.373 1.964c.762-.187 1.547-1.317 1.823-2.18c.356-1.113-.657-1.889-1.601-2.122c-3.235-.798-4.377-3.089-4.724-6.085c-.119-1.023-.431-1.975-1.788-1.873z\"/><path fill=\"#13A031\" d=\"M446.603 313.211c-.053-2.95.058-5.476-3.11-6.241c-.386-.093-1.091-.303-1.08-.393c.702-6.101-4.675-5.117-7.796-6.77c-.69-.366-1.27-.988-1.813-1.573c-.971-1.047-2.1-2.333-.979-3.679c1.313-1.578 3.412-1.052 4.115.367c1.471 2.97 3.295 2.088 5.819 1.865c5.589-.495 10.072 2.498 13.118 6.908c1.183 1.713 4.506 3.632 3.476 4.768c-1.641 1.81-3.752-.956-5.616-1.896c-1.5-.756-2.807-.38-3.797.768c-1.105 1.282-.371 2.552.256 3.885c3.052 6.494 7.542 12.008 11.829 17.664c3.99 5.264 4.214 8.171 1.014 13.907c-.591 1.059-1.197 2.112-1.7 3.215c-3.863 8.477-10.266 9.522-16.833 3.302c-3.107-2.943-6.85-5.248-10.448-7.624c-2.244-1.482-4.544-.771-6.809.489c-3.683 2.05-7.542 3.506-11.854 3.933c-4.713.466-4.768.733-5.431-4.036c-.57-4.101-3.022-7.68-2.454-12.2c.453-3.609 1.812-5.401 5.149-6.349c2.758-.783 5.343-1.285 6.679-5.031c.741-2.077 4.65-4.161 7.902-4.008c1.894.089 2.955-.204 3.903-1.816c1.487-2.529 4.044-2.247 6.466-2.065c1.576.118 2.898.838 2.51 2.625c-.875 4.029 1.717 5.374 4.678 5.212c3.401-.187 2.484-3.479 2.806-5.227zM263.66 142.115c-1.937.478-4.574-1.59-5.804 1.381c-1.263 3.051 2.251 3.847 3.105 5.934c.476 1.162 1.499 1.817 2.444 2.568c1.704 1.354 3.51 1.562 4.611-.378c1.696-2.99 3.537-3.042 6.014-1.115c.642.499 1.539.391 2.218-.17c.507-.419.785-1.188.279-1.566c-5.333-3.98-.562-3.305 1.729-3.928c.928-.253 1.773-.88 2.597-1.426c.464-.307 1.111-.783 1.132-1.208c.031-.638-.764-.728-1.32-.765c-2.792-.184-5.413-1.547-8.576-1.093c-2.859-.6-5.538 1.052-8.429 1.766zM86.396 152.701c-.935-1.046-2.377-1.294-2.952.115c-2.242 5.492-4.972 1.33-6.674.027c-4.539-3.473-6.493-3.66-10.346.07c-1.67 1.617-1.775 2.631.725 3.131c3.332.666 6.464 1.624 9.478 3.416c3.651 2.171 10.999.167 13.923-3.204c.501-.532.557-1.063-.002-1.594c-1.763.146-3.014-.688-4.152-1.961zm313.283 139.207c-.216.154-.254.777-.156 1.121c.773 2.722 1.593 5.453 4.842 6.238c2.809.679 4.865-.083 6.651-2.618c2.237-3.176 1.22-6.946 2.5-10.277c.473-1.23-1.104-1.882-3.178-1.896c-3.225 2.234-6.961 4.806-10.659 7.432zm-86.083 20.15c-2.503 1.759-5.973 3.135-7.259 5.811c-1.481 3.083-2.015 6.813-1.801 10.422c.075 1.267.743 2.279 2.116 2.523c1.662.296 3.636.187 4.111-1.517c1.317-4.72 3.869-9.05 4.519-13.672c-.559-1.57-.036-4.727-1.686-3.567zm12.469-141.595c-4.139-4.596-4.134-5.565.561-9.462c2.77-2.299 5.792-4.212 9.394-5.062c1.538-.363 3.04-.949 4.482-1.603c.384-.174.695-.983.67-1.481c-.049-.943-.832-1.432-1.684-1.223c-7.757 1.897-15.519 3.804-20.544 10.883c-2.009 2.83-1.318 5.907 1.756 7.438c1.685.839 3.512.571 5.298.592l.067-.082zm163.347 193.855c1.447-3.491 4.082-5.679 7.012-7.855c3.556-2.641 3.301-4.549-.368-7.456c-.775-.614-1.552-1.621-2.555-1.163c-1.211.553-.44 1.712-.28 2.633c.461 2.662.104 4.482-2.819 6.027c-2.483 1.313-4.249 4.108-6.113 6.423c-1.468 1.824-.675 3.754 1.609 3.886c1.567.021 2.915-1.05 3.514-2.495zm-42.85-132.574c-.806-.464-1.653-.301-2.075.458c-2.557 4.606-6.823 6.856-11.468 8.752c-1.899.775-3.222 2.373-3.124 4.675c.038.89.533 1.675 1.464 1.261c4.246-1.886 8.627-3.581 12.583-5.968c2.381-1.436 3.186-4.46 3.738-6.806c.064-1.328-.389-1.953-1.118-2.372zm-64.729-92.871c-2.878-1.879-4.653-.09-5.729 2.135c-1.12 2.314-.303 4.356 2.411 5.134c2.118.607 4.27 1.093 6.407 1.633c1.241-.997 1.957-2.36 2.626-3.757c-1.321-2.365-3.54-3.726-5.715-5.145zm59.004 17.021c-1.185 2.079 1.346 2.396 2.242 3.496c.376.462.799.892 1.12 1.389c.901 1.395 1.985 2.857 3.782 2.269c2.222-.727-.525-2.377.342-3.507c.477-.622.88-1.306 1.387-1.901c1.199-1.409.406-2.18-.913-2.543c-1.134-.312-2.353-.316-3.143-.409c-1.961.168-3.948-.319-4.817 1.206zm-22.579 121.842c1.945 1.68 3.712.344 4.696-.844c1.064-1.285-.11-2.777-1.667-3.086c-2.818-.559-2.988-1.937-2.01-4.296c.415-1.001-.771-1.86-1.72-2.117c-1.268-.344-1.722.801-2.038 1.724c-.254.742-.225 1.582-.322 2.378c-.197 2.688 1.14 4.581 3.061 6.241zm-4.735 19.387c.147 1.784.401 4.338 2.339 4.782c1.046.24 3.721-.704 3.545-3.056c-.128-1.722-.534-3.627-2.944-3.88c-1.436.07-3.071.559-2.94 2.154z\"/>"},"umbrellawithraindrops":{"body":"<path fill=\"#597B91\" d=\"M279.034 106.239c-.374-10.88-9.317-19.621-20.287-19.621c-10.969 0-19.913 8.742-20.287 19.621c-.023.23-.036.464-.036.701v18.242a6.842 6.842 0 0 0 6.25 6.814v314.267c0 16.488-13.415 29.902-29.903 29.902s-29.903-13.414-29.903-29.902c0-8.258-6.694-14.951-14.951-14.951s-14.951 6.693-14.951 14.951c0 32.977 26.829 59.805 59.805 59.805s59.805-26.828 59.805-59.805V131.602a6.84 6.84 0 0 0 4.492-6.42V106.94a6.758 6.758 0 0 0-.034-.701z\"/><path fill=\"#FF473E\" d=\"M495.212 301.08c-28.708-104.623-121.848-181.503-235.586-181.503S50.99 196.456 22.282 301.08h.208l-.208.208c0 21.244 17.222 38.466 38.466 38.466c13.274 0 24.976-6.723 31.89-16.95c3.823-5.656 12.085-6.118 16.433-.854c9.653 11.685 24.25 19.133 40.591 19.133c18.092 0 34.046-9.129 43.519-23.031c3.87-5.679 12.144-5.87 16.511-.564c11.857 14.406 29.819 23.594 49.935 23.594c19.689 0 37.319-8.801 49.178-22.681c4.397-5.146 12.384-4.638 16.349.847c9.561 13.226 25.112 21.834 42.68 21.834c16.331 0 30.92-7.438 40.573-19.11c4.34-5.247 12.594-4.79 16.407.851c6.918 10.231 18.625 16.957 31.906 16.957c21.259 0 38.493-17.234 38.493-38.493l-.208-.208h.207z\"/><path fill=\"#FF6E83\" d=\"M96.786 319.269a10.2 10.2 0 0 0-4.148 3.535c-6.913 10.227-18.616 16.95-31.89 16.95c-21.244 0-38.466-17.222-38.466-38.466l.208-.208h-.208c28.663-104.461 123.313-181.259 236.816-181.497c-77.847.239-162.34 111.687-162.34 193.272c0 2.234.01 4.36.028 6.414zm398.426-18.189c-28.673-104.496-121.623-181.312-235.173-181.498c77.862.187 162.395 111.669 162.395 193.273c0 2.611-.012 5.094-.036 7.461a10.224 10.224 0 0 1 2.416 2.508c6.917 10.231 18.625 16.957 31.906 16.957c21.259 0 38.493-17.234 38.493-38.493l-.208-.208h.207zM258.941 119.584c-.154 0-.308.004-.463.005c-26.365.518-54.939 111.783-54.939 193.266l.001.979a10.478 10.478 0 0 1 6.152 3.655c11.857 14.406 29.819 23.594 49.934 23.594c19.689 0 37.319-8.801 49.178-22.681a10.09 10.09 0 0 1 5.149-3.235l.002-2.312c0-81.56-28.628-192.961-55.014-193.271z\"/><path fill=\"#59CAFC\" d=\"M61.678 81.864l16.711 42.054c4.023 13.266-3.468 27.282-16.737 31.305c-13.266 4.026-27.282-3.468-31.309-16.737a24.947 24.947 0 0 1 0-14.568l16.712-42.054c1.222-4.037 5.492-6.315 9.529-5.093c2.519.766 4.369 2.761 5.094 5.093zm355.253-45.028c-4.037-1.222-8.307 1.056-9.529 5.093L390.69 83.983a24.947 24.947 0 0 0 0 14.568c4.026 13.269 18.043 20.764 31.309 16.737c13.269-4.023 20.76-18.039 16.737-31.305l-16.711-42.054c-.725-2.332-2.575-4.327-5.094-5.093zM189.113.037c-3.878-1.174-7.979 1.014-9.154 4.892l-16.053 40.396a23.962 23.962 0 0 0 0 13.994c3.868 12.746 17.332 19.945 30.074 16.077c12.746-3.864 19.942-17.328 16.077-30.071L194.006 4.929c-.697-2.24-2.474-4.157-4.893-4.892z\"/>"},"snowmountains":{"body":"<path fill=\"#AAA8A0\" d=\"M113.804 437.298h375.131c14.129 0 22.95-15.305 15.868-27.531L332.163 66.742c-8.812-15.212-30.776-15.212-39.588 0l-183.668 362.06c-2.185 3.773.537 8.496 4.897 8.496z\"/><path fill=\"#C1BFB4\" d=\"M13.354 437.298h388.284L224.104 185.565c-16.226-18.894-45.471-18.894-61.697 0L3.428 415.69c-7.286 8.484-1.258 21.608 9.926 21.608z\"/><path fill=\"#CFE7E8\" d=\"M115.263 289.355c26.748 0 19.106-13.161 47.23-13.161c20.792 0 22.354 16.205 22.354 28.412c0 15.965 12.942 28.907 28.907 28.907s28.907-12.941 28.907-28.907c0-45.412 11.186-31.269 28.907-31.269c5.641 0 10.782 1.664 14.787.496l-62.247-88.262l-.005-.006c-6.085-7.085-14-11.514-22.373-13.285c-13.956-2.952-29.182 1.476-39.324 13.285L93.121 285.858c3.986 1.866 10.714 3.497 22.142 3.497z\"/><path fill=\"#B9D3DB\" d=\"M332.163 66.742c-8.812-15.211-30.776-15.211-39.588 0L240.4 169.594c14.993.857 21.326 12.194 20.772 21.229c-.437 7.122 3.632 14.056 9.892 17.479c16.774 9.172 33.717-2.731 33.717-18.59c0-32.068 7.402-40.975 19.319-41.97c.799.067 1.564.215 2.388.215c20.034 0 28.894 16.877 27.329 27.888c-.956 6.724 2.704 13.313 8.272 17.204c12.537 8.761 25.295 7.048 33.731.174L332.163 66.742z\"/>"},"cop":{"body":"<path fill=\"#FFD3B6\" d=\"M434.7 252.4l.7-6c0-99.8-80.9-180.8-180.8-180.8c-99.8 0-180.8 81-180.8 180.8l.7 6.1c-17.5 3.4-30.6 18.8-30.6 37.3c0 21 17 38 37.9 38h1.5l1.7 14.1c0 93.7 75.9 169.6 169.6 169.6c93.7 0 169.7-76 169.7-169.6l1.7-14.1c.7 0 1.4.1 2.1.1c20.9 0 37.9-17 37.9-38c-.1-18.8-13.6-34.3-31.3-37.5z\"/><path fill=\"#E5AB83\" d=\"M254.6 362.8c-12.2 0-23.3-6-29.6-16.2c-2.2-3.4-1.1-8 2.3-10.1c3.4-2.2 8-1.1 10.1 2.3c3.7 5.8 10.1 9.3 17.2 9.3s13.5-3.5 17.2-9.3c2.2-3.4 6.7-4.5 10.1-2.3c3.4 2.2 4.5 6.7 2.3 10.1c-6.4 10.2-17.4 16.2-29.6 16.2z\"/><path fill=\"#2B3B47\" d=\"M164.8 263.4c-.8-9.2-8.4-16.5-17.8-16.5s-17 7.2-17.8 16.5l-.2 25.3h.1v.1c0 9.9 8.1 18 18 18s18-8.1 18-18v-.1l-.3-25.3z\"/><path fill=\"#2B3B47\" d=\"M380.2 263.4c-.8-9.2-8.4-16.5-17.8-16.5s-17 7.2-17.8 16.5l-.2 25.3h.1v.1c0 9.9 8.1 18 17.9 18c9.9 0 18-8.1 18-18v-.1l-.2-25.3z\"/><path fill=\"#FFF\" d=\"M143.1 264.4c-.2-2.3-2.1-4.1-4.4-4.1c-2.3 0-4.2 1.8-4.4 4.1v6.3c0 2.5 2 4.5 4.5 4.5s4.5-2 4.5-4.5l-.2-6.3z\"/><path fill=\"#FFF\" d=\"M359.8 264.4c-.2-2.3-2.1-4.1-4.4-4.1c-2.3 0-4.2 1.8-4.4 4.1v6.3c0 2.5 2 4.5 4.5 4.5s4.5-2 4.5-4.5l-.2-6.3z\"/><path fill=\"#EDC0A2\" d=\"M239.9 494.3c-38.7 0-74.7-11.8-104.6-31.9c30.7 30.6 73 49.5 119.7 49.5c93.6 0 169.4-75.9 169.4-169.4l.6-8.6c-13 90.7-90.8 160.4-185.1 160.4z\"/><path fill=\"#2B3B47\" d=\"M328.5 407.7c-4.4-.4-8.8-.7-13.2-.9c-.1.1-.1.3-.2.3l-.2.1s-1.9.5-5.2 1.1c-3.3.5-8 1.6-13.6 2.1s-12.2 1.5-19.3 1.8c-7.1.5-14.6.6-22.1.7c-7.5-.1-15.1-.2-22.1-.7c-7.1-.4-13.6-1.3-19.3-1.8c-5.6-.5-10.4-1.7-13.6-2.1c-3.3-.6-5.2-1.1-5.2-1.1l-.2-.1c-.1 0-.2-.2-.3-.3c-4.4.3-8.8.5-13.3.9c-.3 0-.6.1-.9.3c-.8.6-1 1.8-.5 2.7l1.3 2c3.1 4.7 6.2 8.7 9.2 12c3.1 3.5 6.2 6.4 9.2 9.2c6.2 5.4 12.3 9.4 18.5 12.8c1.7.9 3.4 1.5 5 2.3c9.4-6.6 20.3 2.3 31.9 2.3c11.7 0 22.6-8.8 32-2.2c1.7-.7 3.3-1.4 5-2.2c6.2-3.4 12.3-7.4 18.5-12.8c3.1-2.8 6.2-5.7 9.2-9.2c3.1-3.4 6.2-7.4 9.2-12.1l1.4-2.1c.2-.3.3-.6.3-.9c.2-1-.5-2-1.5-2.1z\"/><path fill=\"#FFF\" d=\"M194.3 407.2s1.9.5 5.2 1.1c3.3.5 8 1.6 13.6 2.1s12.2 1.5 19.3 1.8c7.1.5 14.6.6 22.1.7c7.5-.1 15.1-.2 22.1-.7c7.1-.3 13.6-1.3 19.3-1.8c5.6-.5 10.4-1.7 13.6-2.1c3.3-.6 5.2-1.1 5.2-1.1l.2-.1c.1 0 .2-.2.2-.3c-1.8-.1-3.5-.2-5.3-.3l-18.5-.7c-12.3-.4-24.7-.4-37-.6c-12.3.2-24.7.2-37 .6l-18.5.7c-1.7.1-3.5.2-5.2.3c.1.1.1.3.3.3l.4.1z\"/><path fill=\"#FF473E\" d=\"M286.4 449.2h.1c-9.4-6.6-20.3-4.4-31.9-3c-11.6-1.4-22.5-3.5-31.9 3h0c10.5 4.7 20.9 6.9 31.4 6.9h1c10.5-.1 20.9-2.3 31.4-6.9h-.1z\"/><path fill=\"#FFB636\" d=\"M447.6 181.8c0-72.5-42.7-170.2-170.7-170.2c0 0-13.7 8.3-32.1 20.8c-7.1-12.8-11.4-20.8-11.4-20.8c-128 0-169.1 84.9-169.1 164.2c0 55.7 1.9 76.1 3.8 84.4c3.2 13.8 9.3 6.5 12.3-1.8c11.2-30.4 20.8-155.2 65.9-116.6c32.3 27.7 214.1 67.4 198.6 48.4c-2.6-3.2-5.2-6.5-7.9-10c61 27.3 87.2 67.1 90.9 75.7c3.5 8.2 11.1 15.2 14.2-2.2c5.7-32.7 5.5-46.6 5.5-71.9z\"/><path fill=\"#00B1FF\" d=\"M488.8 123.5c0 68.2-104.3 97.6-232.9 97.6S23.1 191.6 23.1 123.5S127.3 0 256 0s232.8 55.3 232.8 123.5z\"/><path fill=\"#597B91\" d=\"M390.3 113.6H113c-24.8 0-44.9 24.4-44.9 54.4v13.6c0 5.1 4.2 9.3 9.3 9.3h357c5.2 0 9.3-4.1 9.3-9.3v-3.3c.1-35.7-23.8-64.7-53.4-64.7z\"/><path fill=\"#FFB636\" d=\"M258.8 49.9l-22.6 16.7c-1.3 1-3.1 1-4.5.1l-21.8-14.5c-2.6-1.7-6.1.1-6.1 3.3v59.3c0 37.1 46.7 59 55.8 62.9c1 .4 2 .4 3 0c9-3.9 55.8-25.8 55.8-62.9v-59c0-3.2-3.6-5-6.2-3.2L292 66.8c-1.3.9-3.1.9-4.5 0l-24.1-16.9c-1.4-1.1-3.3-1-4.6 0z\"/><path fill=\"#2B3B47\" d=\"M434.4 190.9h-357c-1.2 0-2.3-.2-3.3-.6c35.7 33.8 103.8 56.6 182 56.6c78.5 0 146.7-23 182.4-56.9c-1.2.6-2.6.9-4.1.9z\"/>"},"foxsmiling":{"body":"<path fill=\"#FFD8CA\" d=\"M30.4 61C15.5 60 7.7 54.7.3 41.4c-.2-.3-.3-.7-.3-1h8.5v-3.2v-.6c0-4.9 3.9-8.8 8.8-8.8s8.8 3.9 8.8 8.8v16.3c0 3.3 1.7 6.3 4.3 8.1zm33.1-20.6v-3.2v-.7c0-4.9-3.9-8.8-8.8-8.8c-4.8 0-8.7 3.8-8.8 8.5v16.7c0 3.4-1.7 6.3-4.3 8.1c14.9-1 22.7-6.2 30.1-19.5c.2-.3.3-.7.2-1.1h-8.4z\"/><path fill=\"#FF6F1F\" d=\"M42.5 60.3c.1 0 .1-.1.2-.1l.6-.6l.2-.2c.2-.2.4-.5.6-.7l.1-.1c.2-.3.4-.6.6-1c.2-.3.3-.6.4-1c0-.1.1-.2.1-.3c.1-.2.2-.5.2-.7c0-.1.1-.2.1-.4c.1-.3.1-.5.1-.8c0-.1 0-.2.1-.3c0-.4.1-.8.1-1.1V37.1v-1c.1-4.7 4-8.5 8.8-8.5c4.9 0 8.8 3.9 8.8 8.8V40.3H72c0-.4-.1-.8-.3-1.1c-2-3.7-4.1-7.2-6.3-10.4c1.6-1.2 2.9-2.8 4-4.6c3-5.2 2.8-11.3.1-16.2c-.2-.3-.5-.5-.9-.5c-5.5 0-10.4 3-13.4 8.2c-.4.6-.7 1.3-1 1.9c-5-2.9-10.8-4.6-18.2-4.6s-13.2 1.8-18.1 4.8c-.3-.7-.6-1.3-1-1.9c-3-5.2-7.9-8.2-13.4-8.2c-.4 0-.7.2-.9.5c-2.7 4.8-2.9 11 .1 16.2c1.1 1.8 2.4 3.3 4 4.6c-2.3 3-4.4 6.5-6.4 10.3c-.2.3-.3.7-.3 1.1h8.5v-3.2v-.6c0-4.9 3.9-8.8 8.8-8.8s8.8 3.9 8.8 8.8v16.3c0 .4 0 .8.1 1.1c0 .1 0 .2.1.3c0 .3.1.5.1.8c0 .1.1.2.1.4c.1.3.2.5.2.7c0 .1.1.2.1.3c.1.3.3.6.4 1c.2.3.4.7.6 1l.1.1c.2.3.4.5.6.7l.2.2l.6.6c.1 0 .1.1.2.1c.3.2.6.5.9.7c1.6 1.1 3.5 1.7 5.6 1.7c2.1 0 4-.6 5.6-1.7c.3-.1.6-.3.9-.6z\"/><path fill=\"#2B3B47\" d=\"M32.9 45.7h5.2c.6 0 1-.1 1-.1c1.2-.1 2.3.8 2.4 2.1c.1.6-.2 1.3-.6 1.7L39 51.5s-.4.4-1 .7c-.3.2-.6.3-1 .4c-.2.1-.4.1-.6.1h-1.2c-.2 0-.4-.1-.6-.1c-.2 0-.4-.1-.5-.2c-.2 0-.3-.1-.5-.2c-.6-.3-1-.6-1-.6l-1.8-1.8c-.9-.9-.9-2.4 0-3.3c.8-.6 1.5-.9 2.1-.8z\"/><path fill=\"#2B3B47\" stroke=\"#2B3B47\" stroke-width=\"1.09\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M30.6 55s2.1 1.3 5.4 1.3s5.4-1.3 5.4-1.3s-.3 4.9-5.4 4.9s-5.4-4.9-5.4-4.9z\"/><path fill=\"#2B3B47\" d=\"M17.3 32.5c1.7 0 3 1.3 3 3v6.8c0 1.7-1.3 3-3 3s-3-1.3-3-3v-6.8c0-1.7 1.4-3 3-3z\"/><path fill=\"#2B3B47\" d=\"M54.8 32.5c1.7 0 3 1.3 3 3v6.8c0 1.7-1.3 3-3 3s-3-1.3-3-3v-6.8c0-1.7 1.3-3 3-3z\"/><path fill=\"#2B3B47\" d=\"M57.3 20.1c3.6-8 10-11.5 11.5-12.3v-.1H67.3c-5.1.4-9.5 3.3-12.3 8.1c-.4.6-.7 1.3-1 1.9c1.2.8 2.3 1.5 3.3 2.4z\"/><path fill=\"#2B3B47\" d=\"M14.7 20.1c1.1-.9 2.3-1.8 3.6-2.5c-.2-.7-.5-1.3-.9-1.8c-3.1-5.2-8.6-8.1-14.2-8.1c-.1 0-.1.1 0 .2c1.5.6 7.9 4.2 11.5 12.2z\"/>","width":72,"height":72},"sunglasses":{"body":"<path fill=\"#FFD469\" d=\"M255.9 35.3C134 35.3 35.2 134.1 35.2 256c0 3.3.1 6.6.2 9.9c-12.8 1.7-22.8 12.6-22.8 25.9c0 14.5 11.7 26.2 26.2 26.2H44c26.8 91.7 111.4 158.7 211.7 158.7c121.8 0 220.6-98.8 220.6-220.6c.2-122-98.6-220.8-220.4-220.8z\"/><path fill=\"#FFB636\" d=\"M476.2 265.8c.1-3.3.2-6.6.2-9.9c0-58.9-23.1-112.5-60.8-152c21.3 34.5 33.6 75.2 33.6 118.8c0 125.2-101.5 226.7-226.7 226.7c-43.6 0-84.2-12.3-118.8-33.6c39.6 37.7 93.1 60.8 152 60.8c100.3 0 185-67 211.7-158.7h5.2c14.5 0 26.2-11.7 26.2-26.2c.2-13.3-9.7-24.2-22.6-25.9z\"/><path fill=\"#F2A74E\" d=\"M145.4 184c-13.2 0-25.7-5.6-34.3-15.4c-2.8-3.1-2.5-8 .7-10.8c3.1-2.8 8-2.5 10.8.7c5.8 6.5 14.1 10.3 22.9 10.3c8.8 0 17.2-3.7 23-10.3c2.8-3.1 7.6-3.4 10.8-.6c3.1 2.8 3.4 7.6.6 10.8c-8.8 9.6-21.3 15.3-34.5 15.3z\"/><path fill=\"#F2A74E\" d=\"M394.4 159.4c-2.1 0-4.2-.9-5.7-2.6c-5.8-6.5-14.1-10.3-22.9-10.3c-8.8 0-17.2 3.7-23 10.3c-2.8 3.2-7.6 3.4-10.8.6c-3.1-2.8-3.4-7.6-.6-10.8c8.7-9.8 21.2-15.4 34.4-15.4c13.1 0 25.7 5.6 34.3 15.4c2.8 3.1 2.5 8-.7 10.8c-1.4 1.4-3.2 2-5 2z\"/><path fill=\"#2B3B47\" d=\"M249.8 397.2c-27.7 0-52.7-10.7-67-23.5c-4.6-4.1-5-11-.9-15.6c4-4.6 11-5 15.6-.9c15.2 13.5 45.5 23 74.2 15c5.9-1.7 12 1.8 13.6 7.7c1.6 5.9-1.8 12-7.7 13.6c-9.4 2.6-18.8 3.7-27.8 3.7z\"/><path fill=\"#2B3B47\" d=\"M224.7 271.1c0 32.1-26 58.1-58.1 58.1h-30.1c-32.1 0-58.1-26-58.1-58.1v-30.9c0-32.1 26-25.6 58.1-25.6h30.1c32.1 0 58.1-6.5 58.1 25.6v30.9z\"/><path fill=\"#2B3B47\" d=\"M435.6 271.1c0 32.1-26 58.1-58.1 58.1h-30.1c-32.1 0-58.1-26-58.1-58.1v-30.9c0-32.1 26-25.6 58.1-25.6h30.1c32.1 0 58.1-6.5 58.1 25.6v30.9z\"/><path fill=\"#597B91\" d=\"M287.5 269.5c-1.8 0-3.6-.6-5-1.8c-15.3-12.5-37.8-12.5-53.4 0c-3.4 2.8-8.4 2.2-11.2-1.2c-2.8-3.4-2.2-8.4 1.2-11.2c21.5-17.3 52.4-17.2 73.5.1c3.4 2.8 3.9 7.8 1.1 11.2c-1.6 1.9-3.9 2.9-6.2 2.9z\"/><path fill=\"#597B91\" d=\"M427.3 222H84.2c-4.4 0-8-3.6-8-8s3.6-8 8-8h343.1c4.4 0 8 3.6 8 8s-3.6 8-8 8z\"/><path fill=\"#597B91\" d=\"M471 248.1h-35.4V264H471c4.4 0 8-3.6 8-8s-3.6-7.9-8-7.9z\"/><path fill=\"#597B91\" d=\"M78.5 248.1h-38c-4.4 0-8 3.6-8 8s3.6 8 8 8h37.9v-16z\"/>"},"childrencrossing":{"body":"<path fill=\"#FFB636\" d=\"M247.243 507.583L6.082 266.421c-5.755-5.755-5.755-15.087 0-20.842L247.243 4.417c5.755-5.755 15.087-5.755 20.842 0l241.162 241.162c5.755 5.755 5.755 15.087 0 20.842L268.086 507.583c-5.756 5.755-15.087 5.755-20.843 0z\"/><path fill=\"#2B3B47\" d=\"M257.665 38.895c.104 0 .144.039.178.074l216.853 216.853a.253.253 0 0 1 0 .357L257.843 473.031c-.035.035-.074.074-.178.074s-.144-.039-.178-.074L40.633 256.178a.253.253 0 0 1 0-.357L257.486 38.969c.035-.035.074-.074.179-.074m0-13a13.213 13.213 0 0 0-9.371 3.881L31.441 246.629c-5.175 5.175-5.175 13.566 0 18.741l216.853 216.853c2.588 2.588 5.979 3.881 9.371 3.881s6.783-1.294 9.371-3.881L483.889 265.37c5.175-5.175 5.175-13.566 0-18.741L267.035 29.776a13.211 13.211 0 0 0-9.37-3.881z\"/><path fill=\"#2B3B47\" d=\"M217.798 153.711c1.728 12.005-6.604 23.137-18.608 24.864c-12.005 1.728-23.137-6.604-24.864-18.608c-1.727-12.005 6.604-23.137 18.608-24.864s23.136 6.603 24.864 18.608zm100.158 33.202c-9.382 1.35-15.892 10.05-14.542 19.431s10.05 15.892 19.431 14.542c9.382-1.35 15.892-10.05 14.542-19.431c-1.35-9.382-10.05-15.892-19.431-14.542zm65.31 90.995l-6.075-28.204a7.374 7.374 0 0 0-3.518-4.832l-34.586-20.003a7.363 7.363 0 0 0-2.17-.829a19.203 19.203 0 0 0-9.033-.867l-8.169 1.176a19.185 19.185 0 0 0-10.762 5.349a7.355 7.355 0 0 0-2.116 1.829l-15.771 20.07l-17.185-6.355l-6.816-33.576a9.436 9.436 0 0 0-5.131-6.614l-42.569-20.65a9.469 9.469 0 0 0-2.02-.703a24.582 24.582 0 0 0-11.707-1.146l-10.453 1.504a24.591 24.591 0 0 0-13.876 6.911a9.37 9.37 0 0 0-3.519 3.682l-19.938 37.583l-25.188 3.151a9.438 9.438 0 1 0 2.343 18.731l30.055-3.76a9.441 9.441 0 0 0 7.167-4.942l5.372-10.126l6.418 44.599c.103.716.397 1.35.802 1.891l-14.168 16.45a11.739 11.739 0 0 0-2.838 7.27l-1.451 43.488c-.216 6.48 4.862 11.909 11.342 12.125c6.469.241 11.909-4.861 12.125-11.342l1.313-39.354l26.88-31.21l1.077-.155l2.918 31.209c.156 1.67.668 3.287 1.502 4.742l24.108 42.092a11.735 11.735 0 0 0 16.022 4.352c5.627-3.223 7.575-10.396 4.353-16.022l-22.843-39.884l-4.561-48.787a24.753 24.753 0 0 0-.151-5.731l-5.478-38.068l14.525 7.046l7.63 37.585c.908 4.475 4.844 7.562 9.24 7.562c.622 0 1.254-.062 1.888-.19a9.403 9.403 0 0 0 5.883-3.891l16.852 6.232a7.379 7.379 0 0 0 8.359-2.36l5.667-7.212l5.974 41.515c.039.268.117.517.214.757l-8.406 11.663a9.391 9.391 0 0 0-1.656 4.017l-5.424 34.105c-.815 5.123 2.678 9.937 7.8 10.751c5.128.818 9.936-2.678 10.751-7.8l5.073-31.9l15.684-21.76l.978-.141l-.884 22.827a9.391 9.391 0 0 0 .776 4.117l12.704 29.135a9.393 9.393 0 0 0 8.614 5.641a9.358 9.358 0 0 0 3.749-.785a9.39 9.39 0 0 0 4.855-12.363l-11.845-27.165l1.533-39.632a9.388 9.388 0 0 0-.29-2.657c-.033-.455-.061-.91-.127-1.368l-4.005-27.831l12.373 7.156l5.387 25.009a7.378 7.378 0 0 0 8.765 5.657a7.375 7.375 0 0 0 5.658-8.764z\"/>"}},"width":512,"height":512});
Iconify.addCollection({"prefix":"arty-animated","icons":{"16-chevron-left":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M40 64l48-48\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-102\"/><path d=\"M40 64l48 48\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-102\"/></g>"},"16-caret-up":{"body":"<path d=\"M24 80l40-40 40 40z\" fill=\"currentColor\" fill-rule=\"evenodd\" class=\"animation-delay-0 animation-duration-10 animate-fill\"/>"},"16-confirm":{"body":"<path d=\"M8 64l48 48 64-96\" stroke-linecap=\"round\" stroke-width=\"16\" stroke=\"currentColor\" stroke-linejoin=\"round\" fill=\"none\" fill-rule=\"evenodd\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-230\"/>"},"16-arc-90":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\"><path d=\"M64 24c22.143 0 40 17.906 40 40v8\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-102\"/><path d=\"M104 88l16-16\" class=\"animation-delay-8 animation-duration-3 animate-stroke stroke-length-30\"/><path d=\"M104 88L88 72\" class=\"animation-delay-8 animation-duration-3 animate-stroke stroke-length-30\"/></g>"},"16-arc-180":{"body":"<g stroke-linecap=\"round\" stroke=\"currentColor\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M64 24c22.143 0 40 17.906 40 40s-17.863 40-40 40h-8\" class=\"animation-delay-0 animation-duration-11 animate-stroke stroke-length-153\"/><path d=\"M40 104l16 16\" class=\"animation-delay-9 animation-duration-2 animate-stroke stroke-length-30\"/><path d=\"M40 104l16-16\" class=\"animation-delay-9 animation-duration-2 animate-stroke stroke-length-30\"/></g>"},"16-arc-270":{"body":"<g stroke-linecap=\"round\" stroke-width=\"16\" stroke=\"currentColor\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M64 24c22.143 0 40 17.906 40 40s-17.863 40-40 40-40-17.906-40-40v-8\" class=\"animation-delay-0 animation-duration-12 animate-stroke stroke-length-230\"/><path d=\"M24 40L8 56\" class=\"animation-delay-10 animation-duration-1 animate-stroke stroke-length-30\"/><path d=\"M24 40l16 16\" class=\"animation-delay-10 animation-duration-1 animate-stroke stroke-length-30\"/></g>"},"16-double-arrow-horizontal":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M64 64h48\" class=\"animation-delay-0 animation-duration-8 animate-stroke stroke-length-68\"/><path d=\"M64 64H16\" class=\"animation-delay-0 animation-duration-8 animate-stroke stroke-length-68\"/><path d=\"M120 64L96 40\" stroke-linejoin=\"round\" class=\"animation-delay-8 animation-duration-5 animate-stroke stroke-length-45\"/><path d=\"M120 64L96 88\" stroke-linejoin=\"round\" class=\"animation-delay-8 animation-duration-5 animate-stroke stroke-length-45\"/><path d=\"M8 64l24-24\" stroke-linejoin=\"round\" class=\"animation-delay-8 animation-duration-5 animate-stroke stroke-length-45\"/><path d=\"M8 64l24 24\" stroke-linejoin=\"round\" class=\"animation-delay-8 animation-duration-5 animate-stroke stroke-length-45\"/></g>"},"16-double-small-chevron-left":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M72 64l32-32\" class=\"animation-delay-6 animation-duration-6 animate-stroke stroke-length-68\"/><path d=\"M24 64l32-32\" class=\"animation-delay-0 animation-duration-6 animate-stroke stroke-length-68\"/><path d=\"M72 64l32 32\" class=\"animation-delay-6 animation-duration-6 animate-stroke stroke-length-68\"/><path d=\"M24 64l32 32\" class=\"animation-delay-0 animation-duration-6 animate-stroke stroke-length-68\"/></g>"},"16-small-chevron-left":{"body":"<g stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M48 64l32-32\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-68\"/><path d=\"M48 64l32 32\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-68\"/></g>"},"16-search":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M52 76L8 120\" class=\"animation-delay-10 animation-duration-3 animate-stroke stroke-length-102\"/><path d=\"M51.92 76.364C44.558 69.06 40 58.965 40 48 40 25.909 57.857 8 80 8s40 17.909 40 40-17.86 40-40 40c-11.186 0-20.866-4.48-28.08-11.636z\" class=\"animation-delay-0 animation-duration-10 animate-stroke stroke-length-345\"/></g>"},"16-close":{"body":"<g stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M8 8l112 112\" class=\"animation-delay-0 animation-duration-6 animate-stroke stroke-length-230\"/><path d=\"M8 120L120 8\" class=\"animation-delay-6 animation-duration-6 animate-stroke stroke-length-230\"/></g>"},"24-grid-3-outline":{"body":"<g transform=\"translate(8 8)\" stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\" fill-rule=\"evenodd\"><circle cx=\"16\" cy=\"16\" r=\"16\" class=\"animation-delay-0 animation-duration-2 animate-fill\"/><circle cx=\"88\" cy=\"16\" r=\"16\" class=\"animation-delay-2 animation-duration-2 animate-fill\"/><circle cx=\"160\" cy=\"16\" r=\"16\" class=\"animation-delay-4 animation-duration-2 animate-fill\"/><circle cx=\"16\" cy=\"88\" r=\"16\" class=\"animation-delay-6 animation-duration-2 animate-fill\"/><circle cx=\"88\" cy=\"88\" r=\"16\" class=\"animation-delay-7 animation-duration-2 animate-fill\"/><circle cx=\"160\" cy=\"88\" r=\"16\" class=\"animation-delay-9 animation-duration-2 animate-fill\"/><circle cx=\"16\" cy=\"160\" r=\"16\" class=\"animation-delay-11 animation-duration-2 animate-fill\"/><circle cx=\"88\" cy=\"160\" r=\"16\" class=\"animation-delay-13 animation-duration-2 animate-fill\"/><circle cx=\"160\" cy=\"160\" r=\"16\" class=\"animation-delay-15 animation-duration-2 animate-fill\"/></g>","width":192,"height":192},"24-grid-3":{"body":"<g fill=\"currentColor\" fill-rule=\"evenodd\"><circle cx=\"24\" cy=\"24\" r=\"24\" class=\"animation-delay-0 animation-duration-2 animate-fill\"/><circle cx=\"96\" cy=\"24\" r=\"24\" class=\"animation-delay-2 animation-duration-2 animate-fill\"/><circle cx=\"168\" cy=\"24\" r=\"24\" class=\"animation-delay-4 animation-duration-2 animate-fill\"/><circle cx=\"24\" cy=\"96\" r=\"24\" class=\"animation-delay-6 animation-duration-2 animate-fill\"/><circle cx=\"96\" cy=\"96\" r=\"24\" class=\"animation-delay-7 animation-duration-2 animate-fill\"/><circle cx=\"168\" cy=\"96\" r=\"24\" class=\"animation-delay-9 animation-duration-2 animate-fill\"/><circle cx=\"24\" cy=\"168\" r=\"24\" class=\"animation-delay-11 animation-duration-2 animate-fill\"/><circle cx=\"96\" cy=\"168\" r=\"24\" class=\"animation-delay-13 animation-duration-2 animate-fill\"/><circle cx=\"168\" cy=\"168\" r=\"24\" class=\"animation-delay-15 animation-duration-2 animate-fill\"/></g>","width":192,"height":192},"24-list-3-outline":{"body":"<g transform=\"translate(8 8)\" stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" fill=\"none\" fill-rule=\"evenodd\"><circle stroke-linejoin=\"round\" cx=\"16\" cy=\"16\" r=\"16\" class=\"animation-delay-0 animation-duration-3 animate-fill\"/><rect x=\"72\" width=\"104\" height=\"32\" rx=\"16\" class=\"animation-delay-3 animation-duration-3 animate-fill\"/><circle stroke-linejoin=\"round\" cx=\"16\" cy=\"88\" r=\"16\" class=\"animation-delay-5 animation-duration-3 animate-fill\"/><rect x=\"72\" y=\"72\" width=\"104\" height=\"32\" rx=\"16\" class=\"animation-delay-8 animation-duration-3 animate-fill\"/><circle stroke-linejoin=\"round\" cx=\"16\" cy=\"160\" r=\"16\" class=\"animation-delay-11 animation-duration-3 animate-fill\"/><rect x=\"72\" y=\"144\" width=\"104\" height=\"32\" rx=\"16\" class=\"animation-delay-13 animation-duration-3 animate-fill\"/></g>","width":192,"height":192},"24-list-3":{"body":"<g fill=\"none\" fill-rule=\"evenodd\"><circle fill=\"currentColor\" cx=\"24\" cy=\"24\" r=\"24\" class=\"animation-delay-0 animation-duration-4 animate-fill\"/><path d=\"M96 24h72\" stroke=\"currentColor\" stroke-width=\"48\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"animation-delay-4 animation-duration-1 animate-stroke stroke-length-102\"/><circle fill=\"currentColor\" cx=\"24\" cy=\"96\" r=\"24\" class=\"animation-delay-5 animation-duration-4 animate-fill\"/><path d=\"M96 96h72\" stroke=\"currentColor\" stroke-width=\"48\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"animation-delay-9 animation-duration-1 animate-stroke stroke-length-102\"/><circle fill=\"currentColor\" cx=\"24\" cy=\"168\" r=\"24\" class=\"animation-delay-11 animation-duration-4 animate-fill\"/><path d=\"M96 168h72\" stroke=\"currentColor\" stroke-width=\"48\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"animation-delay-14 animation-duration-1 animate-stroke stroke-length-102\"/></g>","width":192,"height":192}},"aliases":{"16-chevron-right":{"parent":"16-chevron-left","hFlip":true},"16-caret-down":{"parent":"16-caret-up","vFlip":true},"16-double-arrow-vertical":{"parent":"16-double-arrow-horizontal","rotate":1},"16-double-small-chevron-right":{"parent":"16-double-small-chevron-left","hFlip":true},"16-small-chevron-right":{"parent":"16-small-chevron-left","hFlip":true}},"width":128,"height":128});
Iconify.addCollection({"prefix":"octicon","icons":{"server":{"body":"<path fill-rule=\"evenodd\" d=\"M11 6H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM2 9H1V7h1v2zm2 0H3V7h1v2zm2 0H5V7h1v2zm2 0H7V7h1v2zm3-8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM2 4H1V2h1v2zm2 0H3V2h1v2zm2 0H5V2h1v2zm2 0H7V2h1v2zm3-1h-1V2h1v1zm0 8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm-9 3H1v-2h1v2zm2 0H3v-2h1v2zm2 0H5v-2h1v2zm2 0H7v-2h1v2z\" fill=\"currentColor\"/>","width":12,"hidden":true}},"width":16,"height":16});
Iconify.addCollection({"prefix":"flat-color-icons","icons":{"alarm-clock":{"body":"<g fill=\"#37474F\"><path d=\"M38.5 44.6l-4-4l2.1-2.1l4 4c.6.6.6 1.5 0 2.1c-.5.5-1.5.5-2.1 0z\"/><path d=\"M9.5 44.6l4-4l-2.1-2.1l-4 4c-.6.6-.6 1.5 0 2.1c.5.5 1.5.5 2.1 0z\"/></g><circle fill=\"#C62828\" cx=\"24\" cy=\"24\" r=\"20\"/><circle fill=\"#eee\" cx=\"24\" cy=\"24\" r=\"16\"/><path fill=\"#E53935\" d=\"M15.096 33.48l-.566-.566l9.191-9.191l.566.565z\"/><path d=\"M23 11h2v13h-2z\" fill=\"#000\"/><path d=\"M31.285 29.654L29.66 31.28l-6.504-6.504l1.626-1.627z\" fill=\"#000\"/><circle cx=\"24\" cy=\"24\" r=\"2\" fill=\"#000\"/><circle fill=\"#C62828\" cx=\"24\" cy=\"24\" r=\"1\"/><path fill=\"#37474F\" d=\"M22 1h4v3h-4z\"/><g fill=\"#37474F\"><path d=\"M44.4 16.2c2.5-3.5 2.1-8.4-1-11.5c-3.1-3.1-8-3.5-11.5-1l12.5 12.5z\"/><path d=\"M3.6 16.2c-2.5-3.5-2.1-8.4 1-11.5c3.1-3.1 8-3.5 11.5-1L3.6 16.2z\"/></g>"},"print":{"body":"<path fill=\"#424242\" d=\"M9 11h30v3H9z\"/><path fill=\"#616161\" d=\"M4 25h40v-7c0-2.2-1.8-4-4-4H8c-2.2 0-4 1.8-4 4v7z\"/><path fill=\"#424242\" d=\"M8 36h32c2.2 0 4-1.8 4-4v-8H4v8c0 2.2 1.8 4 4 4z\"/><circle fill=\"#00E676\" cx=\"40\" cy=\"18\" r=\"1\"/><path fill=\"#90CAF9\" d=\"M11 4h26v10H11z\"/><path fill=\"#242424\" d=\"M37.5 31h-27c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5h27c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z\"/><path fill=\"#90CAF9\" d=\"M11 31h26v11H11z\"/><path fill=\"#42A5F5\" d=\"M11 29h26v2H11z\"/><g fill=\"#1976D2\"><path d=\"M16 33h17v2H16z\"/><path d=\"M16 37h13v2H16z\"/></g>"},"film-reel":{"body":"<path fill=\"#3F51B5\" d=\"M43 39V24h-4v15c0 5 4 9 9 9v-4c-2.8 0-5-2.2-5-5z\"/><circle fill=\"#90A4AE\" cx=\"24\" cy=\"24\" r=\"19\"/><circle fill=\"#37474F\" cx=\"24\" cy=\"24\" r=\"2\"/><g fill=\"#253278\"><circle cx=\"24\" cy=\"14\" r=\"5\"/><circle cx=\"24\" cy=\"34\" r=\"5\"/><circle cx=\"34\" cy=\"24\" r=\"5\"/><circle cx=\"14\" cy=\"24\" r=\"5\"/></g>"},"invite":{"body":"<path fill=\"#78909C\" d=\"M40 41H8c-2.2 0-4-1.8-4-4V16.1c0-1.3.6-2.5 1.7-3.3L24 0l18.3 12.8c1.1.7 1.7 2 1.7 3.3V37c0 2.2-1.8 4-4 4z\"/><path fill=\"#fff\" d=\"M12 11h24v22H12z\"/><path fill=\"#CFD8DC\" d=\"M40 41H8c-2.2 0-4-1.8-4-4V17l20 13l20-13v20c0 2.2-1.8 4-4 4z\"/><g fill=\"#4CAF50\"><path d=\"M22 14h4v12h-4z\"/><path d=\"M18 18h12v4H18z\"/></g>"},"add-database":{"body":"<g fill=\"#D1C4E9\"><path d=\"M38 7H10c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h28c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2z\"/><path d=\"M38 19H10c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h28c1.1 0 2-.9 2-2v-6c0-1.1-.9-2-2-2z\"/><path d=\"M38 31H10c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h28c1.1 0 2-.9 2-2v-6c0-1.1-.9-2-2-2z\"/></g><circle fill=\"#43A047\" cx=\"38\" cy=\"38\" r=\"10\"/><g fill=\"#fff\"><path d=\"M36 32h4v12h-4z\"/><path d=\"M32 36h12v4H32z\"/></g>"},"key":{"body":"<g fill=\"#FFA000\"><path d=\"M30 41l-4 4h-4l-4-4V21h12v8l-2 2l2 2v2l-2 2l2 2z\"/><path d=\"M38 7.8c-.5-1.8-2-3.1-3.7-3.6C31.9 3.7 28.2 3 24 3s-7.9.7-10.3 1.2C12 4.7 10.5 6 10 7.8c-.5 1.7-1 4.1-1 6.7c0 2.6.5 5 1 6.7c.5 1.8 1.9 3.1 3.7 3.5c2.4.6 6.1 1.3 10.3 1.3s7.9-.7 10.3-1.2c1.8-.4 3.2-1.8 3.7-3.5s1-4.1 1-6.7c0-2.7-.5-5.1-1-6.8zM29 13H19c-1.1 0-2-.9-2-2V9c0-.6 3.1-1 7-1s7 .4 7 1v2c0 1.1-.9 2-2 2z\"/></g><path fill=\"#D68600\" d=\"M23 26h2v19h-2z\"/>"},"close-up-mode":{"body":"<path fill=\"#2E7D32\" d=\"M5 24c0 18.9 14.8 19 17 19h4S24.1 26.5 5 24z\"/><path fill=\"#388E3C\" d=\"M22 26h4v17h-4z\"/><path fill=\"#C62828\" d=\"M34 16c0 5.1-5.2 8.2-8 8.2s-2-3.1-2-8.2s5-9.2 5-9.2s5 4.1 5 9.2z\"/><path fill=\"#C62828\" d=\"M14 16c0 5.1 5.2 8.2 8 8.2s2-3.1 2-8.2s-5-9.2-5-9.2s-5 4.1-5 9.2z\"/><path fill=\"#E53935\" d=\"M24 27c-2.2-1.6-1.9-4.5 2.4-8.8C30.8 13.8 32 7 32 7s5 3.4 5 9c0 5.9-5.7 11-13 11z\"/><path fill=\"#E53935\" d=\"M24 27c2.2-1.6 1.9-4.5-2.4-8.8C17.2 13.8 16 7 16 7s-5 3.4-5 9c0 5.9 5.7 11 13 11z\"/><path fill=\"#F44336\" d=\"M30 16c0 6.1-2.7 11-6 11s-6-4.9-6-11s6-11 6-11s6 4.9 6 11z\"/><path fill=\"#4CAF50\" d=\"M22 43h4c2.2 0 17-.1 17-19c-19.1 2.5-21 19-21 19z\"/>"},"android-os":{"body":"<path fill=\"#7CB342\" d=\"M12 29.001a2 2 0 0 1-4 0v-9a2 2 0 0 1 4 0v9z\"/><path fill=\"#7CB342\" d=\"M40 29.001a2 2 0 0 1-4 0v-9a2 2 0 0 1 4 0v9z\"/><path fill=\"#7CB342\" d=\"M22 40a2 2 0 0 1-4 0v-9a2 2 0 0 1 4 0v9z\"/><path fill=\"#7CB342\" d=\"M30 40a2 2 0 0 1-4 0v-9a2 2 0 0 1 4 0v9z\"/><path fill=\"#7CB342\" d=\"M14 18.001V33a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V18.001H14z\"/><path fill=\"#7CB342\" d=\"M24 8c-6 0-9.655 3.645-10 8h20c-.346-4.355-4-8-10-8zm-4 5.598a1 1 0 1 1 0-2a1 1 0 0 1 0 2zm8 0a1 1 0 1 1 0-2a1 1 0 0 1 0 2z\"/><path fill=\"none\" stroke=\"#7CB342\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M30 7l-1.666 2.499\"/><path fill=\"none\" stroke=\"#7CB342\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M18 7l1.333 2.082\"/>"},"faq":{"body":"<path fill=\"#558B2F\" d=\"M15 40h23l6 6V25c0-2.2-1.8-4-4-4H15c-2.2 0-4 1.8-4 4v11c0 2.2 1.8 4 4 4z\"/><path fill=\"#1B5E20\" d=\"M28.8 32.8h-3.6l-.7 2.1h-2.2l3.7-10h1.9l3.7 10h-2.2l-.6-2.1zm-3.1-1.6h2.5L27 27.4l-1.3 3.8z\"/><path fill=\"#8BC34A\" d=\"M33 25H10l-6 6V8c0-2.2 1.8-4 4-4h25c2.2 0 4 1.8 4 4v13c0 2.2-1.8 4-4 4z\"/><path fill=\"#fff\" d=\"M25.4 14.2c0 1-.2 1.8-.5 2.5s-.7 1.3-1.3 1.7l1.7 1.3l-1.3 1.2l-2.2-1.7c-.2 0-.5.1-.8.1c-.6 0-1.2-.1-1.8-.3c-.5-.2-1-.6-1.4-1c-.4-.4-.7-1-.9-1.6c-.2-.6-.3-1.3-.3-2.1v-.4c0-.8.1-1.5.3-2.1c.2-.6.5-1.2.9-1.6c.4-.4.8-.8 1.4-1c.5-.2 1.1-.3 1.8-.3c.6 0 1.2.1 1.8.3c.5.2 1 .6 1.4 1c.4.4.7 1 .9 1.6c.2.6.3 1.3.3 2.1v.3zm-2.2-.5c0-1.1-.2-1.9-.6-2.4c-.4-.6-.9-.8-1.6-.8c-.7 0-1.3.3-1.6.8c-.4.6-.6 1.4-.6 2.4v.5c0 .5.1 1 .2 1.4c.1.4.2.8.4 1c.2.3.4.5.7.6c.3.1.6.2.9.2c.7 0 1.3-.3 1.6-.8c.4-.6.6-1.4.6-2.5v-.4z\"/>"},"linux":{"body":"<path fill=\"#ECEFF1\" d=\"M20.1 16.2l.1 2.3l-1.6 3l-2.5 4.9l-.5 4.1l1.8 5.8l4.1 2.3h6.2l5.8-4.4l2.6-6.9l-6-7.3l-1.7-4.1z\"/><path fill=\"#263238\" d=\"M34.3 21.9c-1.6-2.3-2.9-3.7-3.6-6.6c-.7-2.9.2-2.1-.4-4.6c-.3-1.3-.8-2.2-1.3-2.9c-.6-.7-1.3-1.1-1.7-1.2c-.9-.5-3-1.3-5.6.1c-2.7 1.4-2.4 4.4-1.9 10.5c0 .4-.1.9-.3 1.3c-.4.9-1.1 1.7-1.7 2.4c-.7 1-1.4 2-1.9 3.1c-1.2 2.3-2.3 5.2-2 6.3c.5-.1 6.8 9.5 6.8 9.7c.4-.1 2.1-.1 3.6-.1c2.1-.1 3.3-.2 5 .2c0-.3-.1-.6-.1-.9c0-.6.1-1.1.2-1.8c.1-.5.2-1 .3-1.6c-1 .9-2.8 1.9-4.5 2.2c-1.5.3-4-.2-5.2-1.7c.1 0 .3 0 .4-.1c.3-.1.6-.2.7-.4c.3-.5.1-1-.1-1.3c-.2-.3-1.7-1.4-2.4-2c-.7-.6-1.1-.9-1.5-1.3l-.8-.8c-.2-.2-.3-.4-.4-.5c-.2-.5-.3-1.1-.2-1.9c.1-1.1.5-2 1-3c.2-.4.7-1.2.7-1.2s-1.7 4.2-.8 5.5c0 0 .1-1.3.5-2.6c.3-.9.8-2.2 1.4-2.9s2.1-3.3 2.2-4.9c0-.7.1-1.4.1-1.9c-.4-.4 6.6-1.4 7-.3c.1.4 1.5 4 2.3 5.9c.4.9.9 1.7 1.2 2.7c.3 1.1.5 2.6.5 4.1c0 .3 0 .8-.1 1.3c.2 0 4.1-4.2-.5-7.7c0 0 2.8 1.3 2.9 3.9c.1 2.1-.8 3.8-1 4.1c.1 0 2.1.9 2.2.9c.4 0 1.2-.3 1.2-.3c.1-.3.4-1.1.4-1.4c.7-2.3-1-6-2.6-8.3z\"/><g fill=\"#ECEFF1\" transform=\"translate(0 -2)\"><ellipse cx=\"21.6\" cy=\"15.3\" rx=\"1.3\" ry=\"2\"/><ellipse cx=\"26.1\" cy=\"15.2\" rx=\"1.7\" ry=\"2.3\"/></g><g fill=\"#212121\" transform=\"translate(0 -2)\"><ellipse transform=\"rotate(-97.204 21.677 15.542)\" cx=\"21.7\" cy=\"15.5\" rx=\"1.2\" ry=\".7\"/><ellipse cx=\"26\" cy=\"15.6\" rx=\"1\" ry=\"1.3\"/></g><g fill=\"#FFC107\"><path d=\"M39.3 35.6c-.4-.2-1.1-.5-1.7-1.4c-.3-.5-.2-1.9-.7-2.5c-.3-.4-.7-.2-.8-.2c-.9.2-3 1.6-4.4 0c-.2-.2-.5-.5-1-.5s-.7.2-.9.6s-.2.7-.2 1.7c0 .8 0 1.7-.1 2.4c-.2 1.7-.5 2.7-.5 3.7c0 1.1.3 1.8.7 2.1c.3.3.8.5 1.9.5c1.1 0 1.8-.4 2.5-1.1c.5-.5.9-.7 2.3-1.7c1.1-.7 2.8-1.6 3.1-1.9c.2-.2.5-.3.5-.9c0-.5-.4-.7-.7-.8z\"/><path d=\"M19.2 35.9c-1-1.6-1.1-1.9-1.8-2.9c-.6-1-1.9-2.9-2.7-2.9c-.6 0-.9.3-1.3.7c-.4.4-.8 1.3-1.5 1.8c-.6.5-2.3.4-2.7 1c-.4.6.4 1.5.4 3c0 .6-.5 1-.6 1.4c-.1.5-.2.8 0 1.2c.4.6.9.8 4.3 1.5c1.8.4 3.5 1.4 4.6 1.5c1.1.1 3 0 3-2.7c.1-1.6-.8-2-1.7-3.6z\"/><path d=\"M21.1 17.8c-.6-.4-1.1-.8-1.1-1.4c0-.6.4-.8 1-1.3c.1-.1 1.2-1.1 2.3-1.1s2.4.7 2.9.9c.9.2 1.8.4 1.7 1.1c-.1 1-.2 1.2-1.2 1.7c-.7.2-2 1.3-2.9 1.3c-.4 0-1 0-1.4-.1c-.3-.1-.8-.6-1.3-1.1z\"/></g><g fill=\"#634703\"><path d=\"M20.9 17c.2.2.5.4.8.5c.2.1.5.2.5.2h.9c.5 0 1.2-.2 1.9-.6c.7-.3.8-.5 1.3-.7c.5-.3 1-.6.8-.7c-.2-.1-.4 0-1.1.4c-.6.4-1.1.6-1.7.9c-.3.1-.7.3-1 .3h-.9c-.3 0-.5-.1-.8-.2c-.2-.1-.3-.2-.4-.2c-.2-.1-.6-.5-.8-.6c0 0-.2 0-.1.1l.6.6z\"/><path d=\"M23.9 14.8c.1.2.3.2.4.3c.1.1.2.1.2.1c.1-.1 0-.3-.1-.3c0-.2-.5-.2-.5-.1z\"/><path d=\"M22.3 15c0 .1.2.2.2.1c.1-.1.2-.2.3-.2c.2-.1.1-.2-.2-.2c-.2.1-.2.2-.3.3z\"/></g><path fill=\"#455A64\" d=\"M32 32.7v.3c.2.4.7.5 1.1.5c.6 0 1.2-.4 1.5-.8c0-.1.1-.2.2-.3c.2-.3.3-.5.4-.6c0 0-.1-.1-.1-.2c-.1-.2-.4-.4-.8-.5c-.3-.1-.8-.2-1-.2c-.9-.1-1.4.2-1.7.5c0 0 .1 0 .1.1c.2.2.3.4.3.7c.1.2 0 .3 0 .5z\"/>"},"like":{"body":"<path fill=\"#F44336\" d=\"M34 9c-4.2 0-7.9 2.1-10 5.4C21.9 11.1 18.2 9 14 9C7.4 9 2 14.4 2 21c0 11.9 22 24 22 24s22-12 22-24c0-6.6-5.4-12-12-12z\"/>"},"cancel":{"body":"<path fill=\"#D50000\" d=\"M24 6C14.1 6 6 14.1 6 24s8.1 18 18 18s18-8.1 18-18S33.9 6 24 6zm0 4c3.1 0 6 1.1 8.4 2.8L12.8 32.4C11.1 30 10 27.1 10 24c0-7.7 6.3-14 14-14zm0 28c-3.1 0-6-1.1-8.4-2.8l19.6-19.6C36.9 18 38 20.9 38 24c0 7.7-6.3 14-14 14z\"/>"},"voice-presentation":{"body":"<path fill=\"#2196F3\" d=\"M40 22h-8l-4 4V12c0-2.2 1.8-4 4-4h8c2.2 0 4 1.8 4 4v6c0 2.2-1.8 4-4 4z\"/><circle fill=\"#FFA726\" cx=\"17\" cy=\"19\" r=\"8\"/><path fill=\"#607D8B\" d=\"M30 36.7S26.4 30 17 30S4 36.7 4 36.7V40h26v-3.3z\"/>"}},"width":48,"height":48});
Iconify.addCollection({"prefix":"emojione-v1","icons":{"cat-face":{"body":"<path fill=\"#58767d\" d=\"M44.31 13.726c-1.795 5.065 9.61 17.282 13.171 18.551c3.57 1.275 3.069-10.04 3.579-16.289c.517-6.444 1.39-12.923-2.185-14.205C55.315.522 46.118 8.66 44.31 13.726\"/><path fill=\"#eea85a\" d=\"M44.498 17.86c-1.564 4.386 8.354 14.995 11.442 16.11c3.083 1.097 2.658-8.718 3.103-14.159c.448-5.59 1.188-11.215-1.896-12.32c-3.106-1.104-11.08 5.957-12.649 10.37\"/><path fill=\"#58767d\" d=\"M20.458 13.726c1.8 5.065-9.606 17.282-13.174 18.551c-3.563 1.275-3.067-10.04-3.563-16.289c-.536-6.444-1.394-12.923 2.17-14.205C9.454.522 18.659 8.66 20.458 13.726\"/><path fill=\"#eea85a\" d=\"M20.264 17.86c1.573 4.386-8.331 14.995-11.418 16.11c-3.102 1.096-2.674-8.719-3.118-14.159c-.449-5.59-1.188-11.215 1.911-12.32c3.082-1.104 11.08 5.957 12.625 10.37\"/><path fill=\"#7094a6\" d=\"M62.747 37.887c0 17.762-12.363 26.06-30.13 26.06c-17.769 0-30.13-8.299-30.13-26.06c0-17.767 12.364-30.13 30.13-30.13c17.764 0 30.13 12.365 30.13 30.13\"/><path fill=\"#5e7d89\" d=\"M15.634 12.396C7.468 17.543 2.487 26.624 2.487 37.887c0 16.864 11.156 25.18 27.49 25.982c-6.644-6.99-18.04-21.996-14.343-51.47\"/><path fill=\"#fff\" d=\"M48.53 31.945c0 5.485-2.972 9.928-6.627 9.928c-3.662 0-6.634-4.443-6.634-9.928c0-5.486 2.972-9.926 6.634-9.926c3.656 0 6.627 4.439 6.627 9.926\"/><path fill=\"#25333a\" d=\"M46.19 31.949c0 2.874-1.914 5.194-4.278 5.194c-2.376 0-4.295-2.32-4.295-5.194c0-2.878 1.919-5.203 4.295-5.203c2.364 0 4.278 2.325 4.278 5.203\"/><g fill=\"#fff\"><path d=\"M43.15 29.538c0 1.542-.56 2.797-1.247 2.797c-.704 0-1.266-1.255-1.266-2.797c0-1.543.562-2.791 1.266-2.791c.688 0 1.247 1.247 1.247 2.791\"/><path d=\"M29.968 31.516c0 5.484-2.972 9.928-6.626 9.928c-3.663 0-6.635-4.444-6.635-9.928c0-5.487 2.972-9.926 6.635-9.926c3.654 0 6.626 4.439 6.626 9.926\"/></g><path fill=\"#25333a\" d=\"M27.624 31.52c0 2.875-1.915 5.195-4.279 5.195c-2.375 0-4.294-2.32-4.294-5.195c0-2.878 1.919-5.202 4.294-5.202c2.363 0 4.279 2.324 4.279 5.202\"/><path fill=\"#fff\" d=\"M24.592 29.11c0 1.542-.56 2.797-1.248 2.797c-.703 0-1.265-1.255-1.265-2.797c0-1.543.562-2.791 1.265-2.791c.688 0 1.248 1.248 1.248 2.791\"/><path fill=\"#e7e6e6\" d=\"M17.229 48.563c0-5.701 6.475-5.592 15.287-5.592c8.833 0 16.674-.109 16.674 5.592c0 5.697-7.147 10.31-15.986 10.31c-8.816 0-15.975-4.612-15.975-10.31\"/><path fill=\"#d1d2d3\" d=\"M25.457 57.33c0-3.678 3.138-3.607 7.417-3.607c4.263 0 8.08-.07 8.08 3.607c0 3.7-3.481 6.693-7.748 6.693c-4.275 0-7.751-2.993-7.751-6.693\"/><path fill=\"#ed2e7c\" d=\"M27.391 45.2c0-2.379 2.02-2.331 4.771-2.331c2.765 0 5.22-.048 5.22 2.331c0 2.386-2.24 4.316-4.998 4.316c-2.756 0-4.993-1.93-4.993-4.316\"/><g fill=\"#41555b\"><path d=\"M21.571 47.67c-6.648-.04-13.03 1.742-18.954 4.684c-1.144.567.278 1.827 1.184 1.379c5.648-2.804 11.661-4.507 17.996-4.47c1.332.008.944-1.586-.226-1.593\"/><path d=\"M22.278 50.15c-5.884 2.072-12.155 3.262-17.14 7.243c-.927.74.791 1.745 1.56 1.132c4.833-3.861 11.05-4.988 16.764-6.997c1.187-.418-.255-1.705-1.185-1.378\"/><path d=\"M43.18 47.67c6.648-.04 13.02 1.742 18.955 4.684c1.146.567-.279 1.827-1.184 1.379c-5.649-2.804-11.664-4.507-17.997-4.47c-1.335.008-.944-1.586.226-1.593\"/><path d=\"M42.471 50.15c5.884 2.072 12.155 3.262 17.14 7.243c.927.74-.793 1.745-1.561 1.132c-4.834-3.861-11.05-4.988-16.762-6.997c-1.19-.418.254-1.705 1.184-1.378\"/></g>"},"speaker-high-volume":{"body":"<path fill=\"#5fa6c9\" d=\"M19.346 11.354C14.141 21.766 8.933 32.175 3.73 42.584c-.473.947.224 2.607 1.234 2.94c11.07 3.582 22.15 7.162 33.23 10.749c1.022.331 1.642-.896 1.101-2.188c-2.932-6.995-5.872-14.01-8.806-20.998c-2.935-7-5.87-14-8.807-21c-.543-1.289-1.852-1.71-2.331-.735\"/><path fill=\"#66b1de\" d=\"M19.492 10.962c-4.408 8.819-8.821 17.63-13.221 26.444c-.399.801.189 2.206 1.043 2.486c9.373 3.039 18.751 6.07 28.13 9.103c.866.279 1.394-.76.936-1.854c-2.485-5.922-4.971-11.853-7.452-17.773c-2.488-5.925-4.974-11.854-7.458-17.778c-.459-1.095-1.569-1.445-1.975-.628\"/><path fill=\"#2b7f99\" d=\"M.039 35.34c1.529 3.646 3.055 7.288 4.587 10.934c.972 2.323 1.945 4.638 2.916 6.957c.063.148.181.244.262.209c2.02-.848 4.04-1.693 6.06-2.543l3.469-1.454c.081-.033.096-.183.036-.335c-1.532-3.646-3.058-7.287-4.589-10.933c-.971-2.319-1.943-4.638-2.916-6.956a.434.434 0 0 0-.118-.171v-.002l-.004-.004c-.042-.034-.088-.049-.13-.032l-6.06 2.542c-1.156.483-2.312.97-3.469 1.456c-.082.032-.097.181-.034.332\"/><g fill=\"#5fa6c9\"><path d=\"M58.59 37.37c-.263-.633-.527-1.265-.791-1.891c-.041-.099-.037-.181-.057-.274c-.026-.1-.06-.198-.062-.313a1.331 1.331 0 0 1 .095-.52c.008-.035.004-.066.016-.102c2.533-6.424 1.043-12.824-4.271-17.293c-2.856-2.4-4.137-1.566-5.509-4.839c-.56-1.336.781-2.483 2.05-2.069c11.614 3.811 16.861 16.33 11.443 27.29c-.593 1.199-2.353 1.349-2.914.014\"/><path d=\"M49.56 38.33l-.641-1.53c-.034-.079-.026-.148-.044-.224c-.02-.082-.052-.156-.05-.249a1.113 1.113 0 0 1 .075-.422a.23.23 0 0 1 .015-.082c2.049-5.2.844-10.375-3.459-13.991c-2.308-1.941-3.345-1.264-4.455-3.914c-.452-1.081.634-2.01 1.66-1.669c9.394 3.079 13.64 13.205 9.251 22.07c-.474.969-1.898 1.093-2.352.014\"/><path d=\"M41.471 38.802c-.158-.386-.324-.776-.483-1.16c-.025-.061-.02-.112-.033-.167c-.012-.063-.037-.122-.037-.191a.822.822 0 0 1 .057-.319c.006-.021.002-.041.012-.063c1.547-3.933.638-7.853-2.619-10.586c-1.746-1.471-2.531-.959-3.373-2.963c-.343-.819.479-1.522 1.255-1.264c7.113 2.331 10.326 9.995 7.01 16.704c-.36.731-1.442.823-1.784.009\"/></g><path fill=\"#2b7f99\" d=\"M25.15 35.14c5.417 12.921 11.745 22.586 14.13 21.586c2.386-1-.072-12.289-5.494-25.21c-5.42-12.924-11.744-22.588-14.13-21.588c-2.385 1 .074 12.288 5.495 25.21\"/><path fill=\"#5fa6c9\" d=\"M26.5 34.75c4.656 11.09 9.784 19.521 11.457 18.817c1.672-.7-.746-10.262-5.397-21.357c-4.654-11.1-9.78-19.522-11.454-18.822c-1.673.704.745 10.263 5.394 21.362\"/><path fill=\"#72c1e8\" d=\"M34.542 31.386c1.09 2.593.361 5.372-1.628 6.207s-4.49-.591-5.579-3.186c-1.087-2.59-.351-5.366 1.642-6.201c1.99-.834 4.482.587 5.565 3.18\"/>"},"tear-off-calendar":{"body":"<path fill=\"#e0e0e0\" d=\"M62.55 55.756c0 4.047-3.555 7.329-7.946 7.329H9.164c-4.39 0-7.95-3.282-7.95-7.329V20.921c0-4.04 3.56-7.328 7.95-7.328h45.44c4.392 0 7.946 3.286 7.946 7.328v34.835\"/><path fill=\"#d6d7d6\" d=\"M16.921 55.756V20.921c0-4.04 3.557-7.328 7.946-7.328h-15.7c-4.39 0-7.95 3.286-7.95 7.328v34.834c0 4.047 3.56 7.329 7.95 7.329h15.7c-4.389 0-7.946-3.281-7.946-7.328\"/><path fill=\"#be1e2d\" d=\"M62.55 23.919c0 1.675-3.555 3.034-7.946 3.034H9.164c-4.39 0-7.95-1.359-7.95-3.034V9.483c0-1.676 3.56-3.034 7.95-3.034h45.44c4.392 0 7.946 1.358 7.946 3.034v14.436\"/><path fill=\"#25333a\" d=\"M30.09 56.87V38.378c-3.377 2.643-5.649 3.963-6.82 3.963c-.558 0-1.049-.228-1.484-.683a2.208 2.208 0 0 1-.642-1.576c0-.691.207-1.199.634-1.524c.423-.324 1.174-.742 2.252-1.263c1.608-.768 2.891-1.579 3.854-2.432a16.734 16.734 0 0 0 2.562-2.865c.743-1.059 1.225-1.71 1.454-1.957c.223-.242.65-.361 1.273-.361c.709 0 1.27.276 1.697.831c.423.556.64 1.318.64 2.296v23.271c0 2.724-.912 4.087-2.735 4.087c-.807 0-1.458-.281-1.949-.831c-.496-.557-.736-1.379-.736-2.464\"/><g fill=\"#d0d2d3\"><path d=\"M22.997 14.07c0 2.551-2.028 4.612-4.521 4.612c-2.5 0-4.522-2.061-4.522-4.612V4.848c0-2.551 2.023-4.614 4.522-4.614c2.493 0 4.521 2.063 4.521 4.614v9.222\"/><path d=\"M50.15 14.07c0 2.551-2.02 4.612-4.52 4.612c-2.496 0-4.521-2.061-4.521-4.612V4.848c0-2.551 2.025-4.614 4.521-4.614c2.499 0 4.52 2.063 4.52 4.614v9.222\"/></g>"}},"width":64,"height":64});
Iconify.addCollection({"prefix":"dashicons","icons":{"businessman":{"body":"<path d=\"M17 16.9v-2.5c0-.7-.1-1.4-.5-2.1c-.4-.7-.9-1.3-1.6-1.7c-.7-.5-2.2-.6-2.9-.6l-1.6 1.7l.6 1.3v3l-1 1.1L9 16v-3l.7-1.3L8 10c-.8 0-2.3.1-3 .6c-.7.4-1.1 1-1.5 1.7S3 13.6 3 14.4v2.5S5.6 18 10 18s7-1.1 7-1.1z\" fill=\"currentColor\"/><path d=\"M10 2.1c-1.9 0-3 1.8-2.7 3.8c.3 2 1.3 3.4 2.7 3.4s2.4-1.4 2.7-3.4c.3-2.1-.8-3.8-2.7-3.8z\" fill=\"currentColor\"/>"},"editor-outdent":{"body":"<path d=\"M7 4V3H3v1h4zm10 1V3H8v2h9zM7 7H5V5L1 8.5L5 12v-2h2V7zm10 1V6H8v2h9zm-2 3V9H8v2h7zm2 3v-2H8v2h9zM7 14v-1H3v1h4zm4 3v-2H8v2h3z\" fill=\"currentColor\"/>"},"plugins-checked":{"body":"<path d=\"M13.6 5.1l-3.1 3.1l1.8 1.8l3.1-3.1c.3-.3.2-1-.3-1.5s-1.1-.6-1.5-.3zm.3-4.8c-.7-.4-9.8 7.3-9.8 7.3S.6 5.5.1 5.9c-.5.4 4 5 4 5S14.6.6 13.9.3zm5.5 9.3c-.5-.5-1.2-.6-1.5-.3l-3.1 3.1l1.8 1.8l3.1-3.2c.3-.2.2-.9-.3-1.4zm-11.7-1c-.7.7-1.1 2.7-1.1 3.8v3.8l-1.2 1.2c-.6.6-.6 1.5 0 2.1s1.5.6 2.1 0l1.2-1.2h3.8c1.2 0 3-.4 3.7-1.1l1.2-.8l-8.9-8.9l-.8 1.1z\" fill=\"currentColor\"/>"},"sos":{"body":"<path d=\"M18 10c0-4.42-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8s8-3.58 8-8zM7.23 3.57L8.72 7.3c-.62.29-1.13.8-1.42 1.42L3.57 7.23a7.037 7.037 0 0 1 3.66-3.66zm9.2 3.66L12.7 8.72c-.29-.62-.8-1.13-1.42-1.42l1.49-3.73c1.64.71 2.95 2.02 3.66 3.66zM10 12c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2zm-6.43.77l3.73-1.49c.29.62.8 1.13 1.42 1.42l-1.49 3.73a7.037 7.037 0 0 1-3.66-3.66zm9.2 3.66l-1.49-3.73c.62-.29 1.13-.8 1.42-1.42l3.73 1.49a7.037 7.037 0 0 1-3.66 3.66z\" fill=\"currentColor\"/>"},"buddicons-replies":{"body":"<path d=\"M17.54 10.29a3.012 3.012 0 0 1 0 4.25a3.012 3.012 0 0 1-4.25 0l-.34-.52c0 3.66-2 4.38-2.95 4.98c-.82-.6-2.95-1.28-2.95-4.98l-.34.52a3.012 3.012 0 0 1-4.25 0a3.012 3.012 0 0 1 0-4.25s1.02-.67 2.1-1.3A6.893 6.893 0 0 1 3.2 4.88c0-.34.03-.67.08-1A6.956 6.956 0 0 0 5.8 8.3c.67-.35 1.85-.83 2.37-.92H8c-1.1 0-2-.9-2-2s.9-2 2-2v-.5c0-.28.22-.5.5-.5s.5.22.5.5v.5h2v-.5c0-.28.22-.5.5-.5s.5.22.5.5v.5c1.1 0 2 .9 2 2s-.9 2-2 2h-.17c.51.09 1.78.61 2.38.92a6.956 6.956 0 0 0 2.52-4.42c.05.33.08.66.08 1c0 1.54-.51 2.96-1.36 4.11c1.08.63 2.09 1.3 2.09 1.3zM8.5 6.38c.5 0 1-.45 1-1s-.45-1-1-1s-1 .45-1 1s.45 1 1 1zm3-2c-.55 0-1 .45-1 1s.45 1 1 1s1-.45 1-1s-.45-1-1-1zm-2.3 5.73c-.12.11-.19.26-.19.43a.5.5 0 0 0 .49.46h1a.5.5 0 0 0 .49-.46c0-.15-.07-.29-.19-.43a.498.498 0 0 0-.3-.11h-1c-.12 0-.22.05-.3.11zM12 12.5c0-.12-.06-.28-.19-.38a.498.498 0 0 0-.31-.12h-3c-.12 0-.22.05-.31.12c-.11.1-.19.25-.19.38c0 .28.22.5.5.5h3c.28 0 .5-.22.5-.5zM8.5 15h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm1 2h1c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-1c-.28 0-.5.22-.5.5s.22.5.5.5z\" fill=\"currentColor\"/>"},"groups":{"body":"<path d=\"M8.03 4.46c-.29 1.28.55 3.46 1.97 3.46c1.41 0 2.25-2.18 1.96-3.46c-.22-.98-1.08-1.63-1.96-1.63c-.89 0-1.74.65-1.97 1.63zm-4.13.9c-.25 1.08.47 2.93 1.67 2.93s1.92-1.85 1.67-2.93c-.19-.83-.92-1.39-1.67-1.39s-1.48.56-1.67 1.39zm8.86 0c-.25 1.08.47 2.93 1.66 2.93c1.2 0 1.92-1.85 1.67-2.93c-.19-.83-.92-1.39-1.67-1.39c-.74 0-1.47.56-1.66 1.39zm-.59 11.43l1.25-4.3C14.2 10 12.71 8.47 10 8.47c-2.72 0-4.21 1.53-3.44 4.02l1.26 4.3C8.05 17.51 9 18 10 18c.98 0 1.94-.49 2.17-1.21zm-6.1-7.63c-.49.67-.96 1.83-.42 3.59l1.12 3.79c-.34.2-.77.31-1.2.31c-.85 0-1.65-.41-1.85-1.03l-1.07-3.65c-.65-2.11.61-3.4 2.92-3.4c.27 0 .54.02.79.06c-.1.1-.2.22-.29.33zm8.35-.39c2.31 0 3.58 1.29 2.92 3.4l-1.07 3.65c-.2.62-1 1.03-1.85 1.03c-.43 0-.86-.11-1.2-.31l1.11-3.77c.55-1.78.08-2.94-.42-3.61c-.08-.11-.18-.23-.28-.33c.25-.04.51-.06.79-.06z\" fill=\"currentColor\"/>"},"smiley":{"body":"<path d=\"M7 5.2a2 2 0 0 1 2 2c0 .37-.11.71-.28 1C8.72 8.2 8 8 7 8s-1.72.2-1.72.2c-.17-.29-.28-.63-.28-1a2 2 0 0 1 2-2zm6 0c1.11 0 2 .89 2 2c0 .37-.11.71-.28 1c0 0-.72-.2-1.72-.2s-1.72.2-1.72.2c-.17-.29-.28-.63-.28-1c0-1.11.89-2 2-2zm-3 13.7a8.69 8.69 0 0 0 8.23-5.88l-1.32-.46C15.9 15.52 13.12 17.5 10 17.5s-5.9-1.98-6.91-4.94l-1.32.46A8.69 8.69 0 0 0 10 18.9z\" fill=\"currentColor\"/>"},"star-half":{"body":"<path d=\"M10 1L7 7l-6 .75l4.13 4.62L4 19l6-3l6 3l-1.12-6.63L19 7.75L13 7zm0 2.24l2.34 4.69l4.65.58l-3.18 3.56l.87 5.15L10 14.88V3.24z\" fill=\"currentColor\"/>"}},"width":20,"height":20});
Iconify.addCollection({"prefix":"fa","icons":{"home":{"body":"<path d=\"M1408 768v480q0 26-19 45t-45 19H960V928H704v384H320q-26 0-45-19t-19-45V768q0-1 .5-3t.5-3l575-474l575 474q1 2 1 6zm223-69l-62 74q-8 9-21 11h-3q-13 0-21-7L832 200L140 777q-12 8-24 7q-13-2-21-11l-62-74q-8-10-7-23.5T37 654L756 55q32-26 76-26t76 26l244 204V64q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z\" fill=\"currentColor\"/>","width":1664,"height":1312,"inlineTop":-224},"align-justify":{"body":"<path d=\"M1792 1216v128q0 26-19 45t-45 19H64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19H64q-26 0-45-19T0 960V832q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19H64q-26 0-45-19T0 576V448q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19H64q-26 0-45-19T0 192V64q0-26 19-45T64 0h1664q26 0 45 19t19 45z\" fill=\"currentColor\"/>","width":1792,"height":1408},"angle-left":{"body":"<path d=\"M595 288q0 13-10 23L192 704l393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10L23 727q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z\" fill=\"currentColor\"/>","width":608,"inlineTop":-256},"bell-o":{"body":"<path d=\"M848 1696q0-16-16-16q-59 0-101.5-42.5T688 1536q0-16-16-16t-16 16q0 73 51.5 124.5T832 1712q16 0 16-16zm-666-288h1300q-266-300-266-832q0-51-24-105t-69-103t-121.5-80.5T832 256t-169.5 31.5T541 368t-69 103t-24 105q0 532-266 832zm1482 0q0 52-38 90t-90 38h-448q0 106-75 181t-181 75t-181-75t-75-181H128q-52 0-90-38t-38-90q50-42 91-88t85-119.5t74.5-158.5t50-206T320 576q0-152 117-282.5T744 135q-8-19-8-39q0-40 28-68t68-28t68 28t28 68q0 20-8 39q190 28 307 158.5T1344 576q0 139 19.5 260t50 206t74.5 158.5t85 119.5t91 88z\" fill=\"currentColor\"/>","width":1664,"height":1792,"inlineTop":0},"thumbs-o-up":{"body":"<path d=\"M256 1344q0-26-19-45t-45-19t-45 19t-19 45t19 45t45 19t45-19t19-45zm1152-576q0-51-39-89.5t-89-38.5H928q0-58 48-159.5t48-160.5q0-98-32-145t-128-47q-26 26-38 85t-30.5 125.5T736 448q-22 23-77 91q-4 5-23 30t-31.5 41t-34.5 42.5t-40 44t-38.5 35.5t-40 27t-35.5 9h-32v640h32q13 0 31.5 3t33 6.5t38 11t35 11.5t35.5 12.5t29 10.5q211 73 342 73h121q192 0 192-167q0-26-5-56q30-16 47.5-52.5t17.5-73.5t-18-69q53-50 53-119q0-25-10-55.5t-25-47.5q32-1 53.5-47t21.5-81zm128-1q0 89-49 163q9 33 9 69q0 77-38 144q3 21 3 43q0 101-60 178q1 139-85 219.5t-227 80.5H960q-96 0-189.5-22.5T554 1576q-116-40-138-40H128q-53 0-90.5-37.5T0 1408V768q0-53 37.5-90.5T128 640h274q36-24 137-155q58-75 107-128q24-25 35.5-85.5T712 145t62-108q39-37 90-37q84 0 151 32.5T1117 134t35 186q0 93-48 192h176q104 0 180 76t76 179z\" fill=\"currentColor\"/>","height":1664,"inlineTop":0},"battery-3":{"body":"<path d=\"M256 1024V256h1280v768H256zm1920-704q53 0 90.5 37.5T2304 448v384q0 53-37.5 90.5T2176 960v160q0 66-47 113t-113 47H160q-66 0-113-47T0 1120V160Q0 94 47 47T160 0h1856q66 0 113 47t47 113v160zm0 512V448h-128V160q0-14-9-23t-23-9H160q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23V832h128z\" fill=\"currentColor\"/>","width":2304,"inlineTop":-256},"umbrella":{"body":"<path d=\"M896 764v580q0 104-76 180t-180 76t-180-76t-76-180q0-26 19-45t45-19t45 19t19 45q0 50 39 89t89 39t89-39t39-89V764q33-11 64-11t64 11zm768 27q0 13-9.5 22.5T1632 823q-11 0-23-10q-49-46-93-69t-102-23q-68 0-128 37t-103 97q-7 10-17.5 28t-14.5 24q-11 17-28 17q-18 0-29-17q-4-6-14.5-24t-17.5-28q-43-60-102.5-97T832 721t-127.5 37T602 855q-7 10-17.5 28T570 907q-11 17-29 17q-17 0-28-17q-4-6-14.5-24T481 855q-43-60-103-97t-128-37q-58 0-102 23t-93 69q-12 10-23 10q-13 0-22.5-9.5T0 791q0-5 1-7q45-183 172.5-319.5t298-204.5T832 192q140 0 274.5 40T1353 345.5t194.5 187T1663 784q1 2 1 7zM896 64v98q-42-2-64-2t-64 2V64q0-26 19-45t45-19t45 19t19 45z\" fill=\"currentColor\"/>","width":1664,"height":1600,"inlineTop":-64}},"aliases":{"angle-right":{"parent":"angle-left","hFlip":true}},"width":1536,"height":1280,"inlineHeight":1792,"inlineTop":-128,"verticalAlign":-0.143});
Iconify.addCollection({"prefix":"vaadin","icons":{"golf":{"body":"<path fill=\"currentColor\" d=\"M7 2a2 2 0 1 1-3.999.001A2 2 0 0 1 7 2z\"/><path fill=\"currentColor\" d=\"M9.8 1.8c-.2-.5-1.7-.1-2 .5c-.2.3-.2 1.2-1.2 1.9c-.8.5-1.6.5-1.6.5c-.3.6-.1 1.1.2 1.6c.5.9.6 1.8.7 2.8c.1 1.3-.5 2.4-2.3 3.2c-.8.3-1.3.9-1 1.9c0 0 2-.3 3.1-1.2c1.5-1.2 1.8-2.3 1.8-2.3s.1.7 0 1.9c-.1 1-.2 1.5-.4 2.2S7.4 16 8 16s1-.4 1-1l.3-1.9c.3-2.1 0-4.3-.8-6.3c0-.1-.1-.1-.1-.2c-.6-1.6.2-2.6.6-3c.3-.4 1.2-1.2.8-1.8z\"/><path fill=\"currentColor\" d=\"M12 0v10h1V4l3-2z\"/><path fill=\"currentColor\" d=\"M16 10a1 1 0 1 1-2 0a1 1 0 0 1 2 0z\"/><path fill=\"currentColor\" d=\"M1 8.4l3.7-3.7l-.7-.3L.2 8s-.4.7.1 1.7s1.6.3 1.6.3c.4-.2.2-.4 0-.6s-.9-1-.9-1z\"/>"}},"width":16,"height":16});
Iconify.addCollection({"prefix":"twemoji","icons":{"memo":{"body":"<path fill=\"#CCD6DD\" d=\"M31 32a4 4 0 0 1-4 4H5a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4h22a4 4 0 0 1 4 4v28z\"/><path fill=\"#99AAB5\" d=\"M27 24a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h20a1 1 0 0 1 1 1zm-16 4a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h4a1 1 0 0 1 1 1zM27 8a1 1 0 0 1-1 1H6a1 1 0 0 1 0-2h20a1 1 0 0 1 1 1zm0 4a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h20a1 1 0 0 1 1 1zm0 4a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h20a1 1 0 0 1 1 1zm0 4a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h20a1 1 0 0 1 1 1z\"/><path fill=\"#66757F\" d=\"M31 6.272c-.827-.535-1.837-.579-2.521-.023l-.792.646l-1.484 1.211l-.1.08l-2.376 1.938l-11.878 9.686c-.437.357-.793 1.219-1.173 2.074c-.378.85-.969 2.852-1.443 4.391c-.148.25-1.065 1.846-.551 2.453c.52.615 2.326.01 2.568-.076c1.626-.174 3.731-.373 4.648-.58c.924-.211 1.854-.395 2.291-.752c.008-.006.01-.018.017-.023l11.858-9.666l.792-.646l.144-.118V6.272z\"/><path fill=\"#D99E82\" d=\"M18.145 22.526s-1.274-1.881-2.117-2.553c-.672-.843-2.549-2.116-2.549-2.116c-.448-.446-1.191-.48-1.629-.043c-.437.438-.793 1.366-1.173 2.291c-.472 1.146-1.276 4.154-1.768 5.752c-.083.272.517-.45.503-.21c-.01.187.027.394.074.581l-.146.159l.208.067c.025.082.05.154.068.21l.159-.146c.187.047.394.084.58.074c.24-.014-.483.587-.21.503c1.598-.493 4.607-1.296 5.752-1.768c.924-.381 1.854-.736 2.291-1.174c.439-.435.406-1.178-.043-1.627z\"/><path fill=\"#EA596E\" d=\"M25.312 4.351a2.238 2.238 0 0 0 0 3.168l3.167 3.168a2.242 2.242 0 0 0 3.168 0l3.169-3.168a2.242 2.242 0 0 0 0-3.168l-3.169-3.168a2.24 2.24 0 0 0-3.168 0l-3.167 3.168z\"/><path fill=\"#FFCC4D\" d=\"M11.849 17.815l3.17 3.17l3.165 3.166l11.881-11.879l-6.337-6.336l-11.879 11.879z\"/><path fill=\"#292F33\" d=\"M11.298 26.742s-2.06 1.133-2.616.576c-.557-.558.581-2.611.581-2.611s1.951.036 2.035 2.035z\"/><path fill=\"#CCD6DD\" d=\"M23.728 5.935l3.96-3.96l6.336 6.337l-3.96 3.96z\"/><path fill=\"#99AAB5\" d=\"M26.103 3.558l.792-.792l6.336 6.335l-.792.792zM24.52 5.142l.791-.791l6.336 6.335l-.792.792z\"/>"}},"width":36,"height":36});
Iconify.addCollection({"prefix":"fa-brands","icons":{"linkedin":{"body":"<path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5c0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7c-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5c67.2 0 79.7 44.3 79.7 101.9V416z\" fill=\"currentColor\"/>"},"whatsapp":{"body":"<path d=\"M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222c0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222c0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4l-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2c0-101.7 82.8-184.5 184.6-184.5c49.3 0 95.6 19.2 130.4 54.1c34.8 34.9 56.2 81.2 56.1 130.5c0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18c-5.1-1.9-8.8-2.8-12.5 2.8c-3.7 5.6-14.3 18-17.6 21.8c-3.2 3.7-6.5 4.2-12 1.4c-32.6-16.3-54-29.1-75.5-66c-5.7-9.8 5.7-9.1 16.3-30.3c1.8-3.7.9-6.9-.5-9.7c-1.4-2.8-12.5-30.1-17.1-41.2c-4.5-10.8-9.1-9.3-12.5-9.5c-3.2-.2-6.9-.2-10.6-.2c-3.7 0-9.7 1.4-14.8 6.9c-5.1 5.6-19.4 19-19.4 46.3c0 27.3 19.9 53.7 22.6 57.4c2.8 3.7 39.1 59.7 94.8 83.8c35.2 15.2 49 16.5 66.6 13.9c10.7-1.6 32.8-13.4 37.4-26.4c4.6-13 4.6-24.1 3.2-26.4c-1.3-2.5-5-3.9-10.5-6.6z\" fill=\"currentColor\"/>"},"product-hunt":{"body":"<path d=\"M326.3 218.8c0 20.5-16.7 37.2-37.2 37.2h-70.3v-74.4h70.3c20.5 0 37.2 16.7 37.2 37.2zM504 256c0 137-111 248-248 248S8 393 8 256S119 8 256 8s248 111 248 248zm-128.1-37.2c0-47.9-38.9-86.8-86.8-86.8H169.2v248h49.6v-74.4h70.3c47.9 0 86.8-38.9 86.8-86.8z\" fill=\"currentColor\"/>","width":512}},"width":448,"height":512});
Iconify.addCollection({"prefix":"emojione","icons":{"alien-monster":{"body":"<g fill=\"#592f5d\"><path d=\"M9.9 43.9c-.3 0-.5-.1-.7-.2c-.2-.2-5.8-4-7-10.2c-.6-3.5.2-7 2.5-10.3c3.8-5.5 5.1-10.1 3.9-13.5c-1.3-3.7-5.3-4.9-5.3-5c-.7-.2-1.1-1-.9-1.7c.2-.7.9-1.2 1.6-.9c.2.1 5.3 1.6 7.1 6.6c1.5 4.3.1 9.7-4.2 16c-1.9 2.7-2.6 5.5-2.1 8.2c.9 5.1 5.8 8.4 5.8 8.4c.6.4.8 1.3.4 1.9c-.2.5-.6.7-1.1.7\"/><path d=\"M54.1 43.9c-.4 0-.9-.2-1.1-.6c-.4-.6-.2-1.5.4-1.9c0 0 4.9-3.4 5.8-8.4c.5-2.7-.2-5.4-2.1-8.2c-4.3-6.3-5.7-11.7-4.2-16c1.8-5.1 6.9-6.6 7.1-6.6c.7-.2 1.5.2 1.7.9c.2.7-.2 1.5-.9 1.7c0 0-4 1.2-5.3 5c-1.2 3.4.1 8 3.9 13.5c2.3 3.4 3.1 6.8 2.5 10.3c-1.2 6.2-6.8 10-7 10.2c-.3 0-.6.1-.8.1\"/></g><path d=\"M32 6.2c-7.1 0-26.3 10.5-26.1 35.5c0 4 .2 14 2.2 15.6c2 1.7 6.9-2.6 9.3-1.5c2.4 1.2 3.2 5.5 5.9 6.1c2.7.6 6-2.9 8.7-2.9c2.7 0 6.1 3.5 8.7 2.9c2.6-.6 3.5-4.9 5.9-6.1c2.3-1.1 7.3 3.1 9.3 1.5c2-1.7 2.2-11.7 2.2-15.6C58.3 19.1 41.3 6.2 32 6.2\" fill=\"#917dbc\"/><g fill=\"#fff\"><path d=\"M48.8 30.6c3.6 3.9 3.6 10.2 0 14.1s-9.5 3.9-13.1 0c-.1 0 9.4-18 13.1-14.1\"/><path d=\"M13.6 36.3c-3.3 8 2.1 5.9 6.8 8.2c4.7 2.2 8.1 5 10.2 0c-.1-.1-15-13.2-17-8.2\"/></g><g fill=\"#592f5d\"><path d=\"M20.9 42.2c0 2 1.5 3.7 3.4 3.7s3.4-1.6 3.4-3.7c-1.3-1-2.9-2.3-4.6-3.4c-1.2.5-2.2 1.8-2.2 3.4\"/><path d=\"M40.8 45.8c1.9 0 3.4-1.6 3.4-3.7c0-2-1.5-3.7-3.4-3.7c-.7 0-1.3.2-1.9.6c-.5.9-1 1.7-1.5 2.4c0 .2-.1.4-.1.6c.1 2.2 1.6 3.8 3.5 3.8\"/></g><g fill=\"#62fbf6\"><path d=\"M32 26c-8.1 0-9 1.9-10.3-.5c-.6-1.1 2.2-3.2 10.3-3.2c8.1 0 10.9 2.1 10.3 3.2c-1.3 2.4-2.2.5-10.3.5\"/><path d=\"M32 19c-8.1 0-9 1.9-10.3-.5c-.6-1.1 2.2-3.2 10.3-3.2c8.1 0 10.9 2.1 10.3 3.2c-1.3 2.4-2.2.5-10.3.5\"/><path d=\"M17.2 51.3c-.7 1.4-3.3 1.6-5.9.3c-2.6-1.3-4.1-3.5-3.4-4.9c.7-1.4 3.3-1.6 5.9-.3s4 3.4 3.4 4.9\"/><path d=\"M46.8 51.3c.7 1.4 3.3 1.6 5.9.3c2.6-1.3 4.1-3.5 3.4-4.9c-.7-1.4-3.3-1.6-5.9-.3c-2.5 1.2-4 3.4-3.4 4.9\"/></g>"},"anguished-face":{"body":"<circle cx=\"32\" cy=\"32\" r=\"30\" fill=\"#ffdd67\"/><g fill=\"#664e27\"><circle cx=\"20.5\" cy=\"26\" r=\"5\"/><circle cx=\"43.5\" cy=\"26\" r=\"5\"/><path d=\"M47.7 42c-1.7-3.6-5.9-6-15.7-6c-9.8 0-14 2.4-15.7 6c-.9 1.9.4 5 .4 5c1.6 3.9 1.4 5 15.3 5s13.6-1.1 15.3-5c0 0 1.3-3.1.4-5\"/></g><path d=\"M43.4 41c.1-.3 0-.6-.2-.8c0 0-2.5-2.2-11.1-2.2S21 40.2 21 40.2c-.2.2-.3.5-.2.8l.2.6c.1.3.4.5.7.5h21c.3 0 .6-.2.7-.5V41\" fill=\"#fff\"/><g fill=\"#917524\"><path d=\"M52.2 16.7c-3.2-2.7-7.5-3.9-11.7-3.1c-.6.1-1.1-2-.4-2.2c4.8-.9 9.8.5 13.5 3.6c.6.5-1 2.1-1.4 1.7\"/><path d=\"M23.5 13.4c-4.2-.7-8.5.4-11.7 3.1c-.4.4-2-1.2-1.4-1.7c3.7-3.2 8.7-4.5 13.5-3.6c.7.2.2 2.3-.4 2.2\"/></g>"},"astonished-face":{"body":"<circle cx=\"32\" cy=\"32\" r=\"30\" fill=\"#ffdd67\"/><circle cx=\"19\" cy=\"29\" r=\"11\" fill=\"#fff\"/><path d=\"M24 29c0 2.8-2.2 5-5 5s-5-2.2-5-5s2.2-5 5-5s5 2.2 5 5\" fill=\"#664e27\"/><path d=\"M56 29c0 6.1-4.9 11-11 11s-11-4.9-11-11s4.9-11 11-11s11 4.9 11 11\" fill=\"#fff\"/><path d=\"M50 29c0 2.8-2.2 5-5 5s-5-2.2-5-5s2.2-5 5-5s5 2.2 5 5\" fill=\"#664e27\"/><g fill=\"#917524\"><path d=\"M50.2 15.8c-3.2-2.7-7.5-3.9-11.7-3.1c-.6.1-1.1-2-.4-2.2c4.8-.9 9.8.5 13.5 3.6c.6.5-1 2.1-1.4 1.7\"/><path d=\"M25.5 12.5c-4.2-.7-8.5.4-11.7 3.1c-.4.4-2-1.2-1.4-1.7c3.7-3.2 8.7-4.5 13.5-3.6c.7.2.2 2.3-.4 2.2\"/></g><circle cx=\"32\" cy=\"49\" r=\"9\" fill=\"#664e27\"/><path d=\"M26 46c1.2-2.4 3.4-4 6-4s4.8 1.6 6 4H26\" fill=\"#fff\"/>"},"dog-face":{"body":"<path d=\"M15.8 52.1C9 47.7 6.3 30.6 8.5 22.9c1.6-5.8 7.8-14.3 13.4-16.5c4.7-1.9 15.5-1.9 20.1 0c5.6 2.2 11.8 10.7 13.4 16.5c2.2 7.8.5 24.8-6.2 29.2c-14.2 9.2-19.2 9.2-33.4 0\" fill=\"#f5d1ac\"/><path d=\"M5.1 24.7c3.6 7.9 4.5 8.2 7.9-1.2c1.8-5 .5-8 2.7-11.2c1.2-1.8 3.9-4.8 3.9-4.8S-1.7 9.7 5.1 24.7\" fill=\"#423223\"/><path d=\"M14.2 7.2c-5.4 3.5-16.9 2.1-10.1 17c3.6 7.9 4.5 8.2 7.9-1.2c1.8-5 .5-8 2.7-11.2c1.2-1.8 4.9-4.3 4.9-4.3s-1.7-2.7-5.4-.3\" fill=\"#947151\"/><path d=\"M58.9 24.6c-3.6 7.9-4.5 8.2-7.9-1.2c-1.8-5-.5-8-2.7-11.2c-1.2-1.8-3.9-4.8-3.9-4.8s21.3 2.3 14.5 17.2\" fill=\"#423223\"/><path d=\"M49.8 7.2c5.4 3.5 16.9 2.1 10.1 17c-3.6 7.9-4.5 8.2-7.9-1.2c-1.8-5-.5-8-2.7-11.2c-1.2-1.8-4.9-4.3-4.9-4.3s1.7-2.7 5.4-.3\" fill=\"#947151\"/><circle cx=\"17.7\" cy=\"30.7\" fill=\"#fff\" r=\"6\"/><circle cx=\"16.2\" cy=\"30.7\" fill=\"#3e4347\" r=\"4.5\"/><circle cx=\"46.3\" cy=\"30.7\" fill=\"#fff\" r=\"6\"/><circle cx=\"47.8\" cy=\"30.7\" fill=\"#3e4347\" r=\"4.5\"/><path d=\"M21.7 48.8l4.6 4.9c2.8 2.9 8.5 2.9 11.3 0l4.7-4.9l-4.8-5h-11l-4.8 5\" fill=\"#7d644b\"/><path d=\"M32 39.6s-4.9 7-4.3 10.3c.8 4.8 7.7 4.8 8.6 0c.6-3.3-4.3-10.3-4.3-10.3\" fill=\"#f15a61\"/><path d=\"M32 51.7l1.1-6.7h-2.2l1.1 6.7\" fill=\"#ba454b\"/><path fill=\"#423223\" d=\"M27 41.5h10v4.6H27z\"/><path d=\"M47.8 42.6l-7.1-7.5c-4.3-4.5-13.1-4.5-17.4 0l-7.1 7.5c-2 2.1-2 5.6 0 7.7c2 2.1 5.3 2.1 7.3 0l7.1-7.5c.7-.7 2-.7 2.7 0l7.1 7.5c2 2.1 5.3 2.1 7.3 0c2.2-2.1 2.2-5.6.1-7.7\" fill=\"#947151\"/><g fill=\"#3e4347\"><path d=\"M26.1 35.7c0-2.6 2.6-3.1 5.9-3.1c3.3 0 5.9.5 5.9 3.1c0 2.1-4.7 3.9-5.9 3.9c-1.2 0-5.9-1.9-5.9-3.9\"/><path d=\"M23.31 39.012l.989-.992l.991.989l-.989.991z\"/><path d=\"M20.947 41.811l.989-.991l.99.989l-.988.99z\"/><path d=\"M24.125 42.763l.989-.991l.991.988l-.988.992z\"/><path d=\"M38.703 38.988l.992-.988l.988.991l-.991.989z\"/><path d=\"M41.128 41.762l.992-.989l.988.991l-.991.989z\"/><path d=\"M37.947 42.811l.991-.988l.989.99l-.991.99z\"/></g>"},"bird":{"body":"<g fill=\"#42ade2\"><path d=\"M59.8 24.3s1.1-6.2-3.5-3.4c0 0-.4-6.3-4.3-1.9c0 0-2.1-3.9-4.4-.3c-3.1 4.8-5.2 12.4-3.2 25l3.8-2.5c2.7-7.9 12.4-8.8 13.7-13.1c.9-3-2.1-3.8-2.1-3.8\"/><path d=\"M22.1 17.6l-9.9 3.6C14.4 9.2 28.8 10 28.8 10s-6.8 3.2-6.7 7.6\"/><path d=\"M23.7 19.8l-10.5 1.4C18 10 31.9 13.9 31.9 13.9s-7.3 1.6-8.2 5.9\"/></g><g fill=\"#ffd93b\"><path d=\"M2 29l5.4-1.4v3.6c0-.1-3.3-.6-5.4-2.2\"/><path d=\"M7.4 27.5L2 24.8c3.6-2.8 7.7-1.9 7.7-1.9l-2.3 4.6z\"/></g><g fill=\"#e08828\"><path d=\"M33.8 53h-2.1v7.9c-.3.1-2.1-.1-2.9-.1c-1.8 0-3.3 1.3-3.3 1.3h8.3V53\"/><path d=\"M25 53h-2.1v7.9c-.3.1-2.1-.1-2.9-.1c-1.8 0-3.3 1.3-3.3 1.3H25V53\"/></g><path d=\"M54 36.2c3.9 0-4.1 17.5-23.3 17.5c-13 0-23.9-5.2-23.9-21.5c0-10.1 6.4-18.3 19.5-15c13.3 3.5 6.5 19 27.7 19\" fill=\"#42ade2\"/><path d=\"M37.6 51.7c-15.6 0-14-12-27.9-11.2c5.1 15.8 27.9 11.2 27.9 11.2\" fill=\"#fff\"/><path d=\"M39.1 29.2c-10-9.8-20.2 6.2-7.9 12.6C43.3 48 51.6 37 51.6 37s-6.1-1.5-12.5-7.8\" fill=\"#297b9d\"/><circle cx=\"15.1\" cy=\"24.9\" r=\"2.5\" fill=\"#3e4347\"/>"}},"width":64,"height":64});
Iconify.addCollection({"prefix":"entypo","icons":{"cake":{"body":"<path d=\"M9.584 6.036c1.952 0 2.591-1.381 1.839-2.843c-.871-1.693 1.895-3.155.521-3.155c-1.301 0-3.736 1.418-4.19 3.183c-.339 1.324.296 2.815 1.83 2.815zm5.212 8.951l-.444-.383a1.355 1.355 0 0 0-1.735 0l-.442.382a3.326 3.326 0 0 1-2.174.801a3.325 3.325 0 0 1-2.173-.8l-.444-.384a1.353 1.353 0 0 0-1.734.001l-.444.383c-1.193 1.028-2.967 1.056-4.204.1V19a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-3.912c-1.237.954-3.011.929-4.206-.101zM10 7c-7.574 0-9 3.361-9 5v.469l1.164 1.003a1.355 1.355 0 0 0 1.735 0l.444-.383a3.353 3.353 0 0 1 4.345 0l.444.384c.484.417 1.245.42 1.735-.001l.442-.382a3.352 3.352 0 0 1 4.346-.001l.444.383c.487.421 1.25.417 1.735 0L19 12.469V12c0-1.639-1.426-5-9-5z\" fill=\"currentColor\"/>"},"attachment":{"body":"<path d=\"M5.602 19.8c-1.293 0-2.504-.555-3.378-1.44c-1.695-1.716-2.167-4.711.209-7.116l9.748-9.87c.988-1 2.245-1.387 3.448-1.06c1.183.32 2.151 1.301 2.468 2.498c.322 1.22-.059 2.493-1.046 3.493l-9.323 9.44c-.532.539-1.134.858-1.738.922c-.599.064-1.17-.13-1.57-.535c-.724-.736-.828-2.117.378-3.337l6.548-6.63c.269-.272.705-.272.974 0s.269.714 0 .986l-6.549 6.631c-.566.572-.618 1.119-.377 1.364c.106.106.266.155.451.134c.283-.029.606-.216.909-.521l9.323-9.439c.64-.648.885-1.41.69-2.145a2.162 2.162 0 0 0-1.493-1.513c-.726-.197-1.48.052-2.12.7l-9.748 9.87c-1.816 1.839-1.381 3.956-.209 5.143c1.173 1.187 3.262 1.629 5.079-.212l9.748-9.87a.683.683 0 0 1 .974 0a.704.704 0 0 1 0 .987L9.25 18.15c-1.149 1.162-2.436 1.65-3.648 1.65z\" fill=\"currentColor\"/>"}},"width":20,"height":20});
Iconify.addCollection({"prefix":"noto-v1","icons":{"woman-technologist":{"body":"<path d=\"M123 89.33H5c-2.75 0-5-2.25-5-5V5c0-2.75 2.25-5 5-5h118c2.75 0 5 2.25 5 5v79.33c0 2.75-2.25 5-5 5z\" fill=\"#212121\"/><g fill=\"#00dc00\"><path d=\"M6.74 7.9h66.74v2.03H6.74z\"/><path d=\"M113.31 7.9h7.94v2.03h-7.94z\"/><path d=\"M89.55 7.9h19.62v2.03H89.55z\"/><path d=\"M6.74 13.75h5.03v2.03H6.74z\"/><path d=\"M99.39 13.75h21.86v2.03H99.39z\"/><path d=\"M18.54 13.75h19.62v2.03H18.54z\"/><path d=\"M10.25 19.59H28v2.03H10.25z\"/><path d=\"M89.55 19.59h19.62v2.03H89.55z\"/><path d=\"M6.74 25.44h9.1v2.03h-9.1z\"/><path d=\"M98.47 25.44h19.62v2.03H98.47z\"/><path d=\"M11.57 31.28H68.1v2.03H11.57z\"/><path d=\"M89.55 31.28h19.62v2.03H89.55z\"/><path d=\"M89.55 37.13h19.62v2.03H89.55z\"/><path d=\"M50.24 25.55h52.17v2.03H50.24z\"/><path d=\"M6.74 38.09h66.74v2.03H6.74z\"/><path d=\"M113.31 38.09h7.94v2.03h-7.94z\"/><path d=\"M89.55 38.09h19.62v2.03H89.55z\"/><path d=\"M6.74 43.93h5.03v2.03H6.74z\"/><path d=\"M115.49 52.11h5.03v2.03h-5.03z\"/><path d=\"M99.39 43.93h21.86v2.03H99.39z\"/><path d=\"M7.2 69.4h19.62v2.03H7.2z\"/><path d=\"M10.25 49.78H28v2.03H10.25z\"/><path d=\"M89.55 49.78h19.62v2.03H89.55z\"/><path d=\"M6.74 55.62h9.1v2.03h-9.1z\"/><path d=\"M89.55 55.62h19.62v2.03H89.55z\"/><path d=\"M11.57 61.47H68.1v2.03H11.57z\"/><path d=\"M60.83 61.47h56.53v2.03H60.83z\"/><path d=\"M89.55 61.47h19.62v2.03H89.55z\"/><path d=\"M53.96 67.32h66.74v2.03H53.96z\"/><path d=\"M89.55 67.32h19.62v2.03H89.55z\"/></g><path d=\"M28.31 113.53C21.8 91.19 21.8 45.39 21.8 45.39l84-.33s0 41.49-4.88 68.19l-72.61.28z\" fill=\"#6d4c41\"/><path d=\"M20.23 118.09v9.89h87.14v-9.89c0-15.17-21.39-22.87-43.24-22.84c-21.72.03-43.9 6.78-43.9 22.84z\" fill=\"#651fff\"/><ellipse cx=\"63.8\" cy=\"46.11\" rx=\"42\" ry=\"39.5\" fill=\"#6d4c41\"/><path d=\"M63.8 90.25h-9.08v9.59c0 4.34 3.7 7.86 8.26 7.86h1.65c4.56 0 8.26-3.52 8.26-7.86v-9.59H63.8z\" fill=\"#e49500\"/><path d=\"M63.8 13.57c-24.35 0-30.72 18.87-30.72 45.39c0 26.51 18.89 34.6 30.72 34.6c11.83 0 30.72-8.09 30.72-34.6S88.15 13.57 63.8 13.57z\" fill=\"#fbc11b\"/><path d=\"M73.13 78.11H63.9h-9.23c-1.06 0-1.51.71-.81 1.78c.98 1.49 4.61 4.36 10.04 4.36s9.06-2.87 10.04-4.36c.71-1.07.25-1.78-.81-1.78z\" fill=\"#444\"/><g fill=\"#444\"><path d=\"M53.41 60.73c0 2.84-1.9 5.15-4.26 5.15c-2.35 0-4.27-2.3-4.27-5.15c0-2.85 1.91-5.15 4.27-5.15c2.35-.01 4.26 2.3 4.26 5.15\"/><path d=\"M74.4 60.73c0 2.84 1.9 5.15 4.27 5.15c2.35 0 4.26-2.3 4.26-5.15c0-2.85-1.91-5.15-4.26-5.15c-2.37-.01-4.27 2.3-4.27 5.15\"/></g><path d=\"M68.31 70.27c-1.57.44-3.2.66-4.46.66c-1.26 0-2.89-.22-4.46-.66c-.67-.19-.94.45-.69.87c.5.88 2.5 2.64 5.15 2.64c2.65 0 4.65-1.77 5.15-2.64c.25-.43-.02-1.06-.69-.87z\" fill=\"#e49500\"/><path d=\"M72.74 34.43c-3.23 3.11-19.29 17.58-41.42 21.35V26.11S40.87 7.16 63.79 7.16s32.47 19.43 32.47 19.43v29.19S81.24 50.02 73.7 34.61a.599.599 0 0 0-.96-.18z\" fill=\"#6d4c41\"/><radialGradient id=\"ssvg-id-woman-technologista\" cx=\"113.473\" cy=\"102.745\" gradientTransform=\"matrix(1.2112 0 0 1.088 -72.905 -26.703)\" gradientUnits=\"userSpaceOnUse\" r=\"32.446\"><stop offset=\"0\" stop-color=\"#fff\"/><stop offset=\"1\" stop-color=\"#fff\" stop-opacity=\"0\"/></radialGradient><ellipse cx=\"64.4\" cy=\"84.29\" rx=\"43.38\" ry=\"39.29\" fill=\"url(#ssvg-id-woman-technologista)\"/><path d=\"M17.4 109.03s-.52-.71-2.21-.79c-.14-.21-.28-.4-.41-.58c-.26-.35-.92-1.86-3.43-.49c-.81.44-1.09.84-.96 1.41c-.1.12-.28.26-.56.15c-.87-.97-1.95-1.18-3.2-.2c-1.42 1.11-1.42 1.9-1.16 2.69h-.01s-.06.55-.47.5c-.43-.37-.95-.37-1.76.22c-2.19 1.58-1.28 3.08-.92 3.96c-.05.08-.13.14-.27.13c-.28-.15-.65-.15-1.14.13c-1.16.66-.99 2.85-.66 3.57c.36.78 2.35 3.52 3.04 4.29s2.08.71 2.77-.09c.5-.58.87-1.08-.26-2.12c-.03-.03-.07-.07-.11-.1l.23-.09c.63.83 1.56 1.72 2.88.97c.66-.38 1.24-1.24.71-2.41l.77-.31c.06.09.12.17.18.26c.71 1.02 2.2.66 3.05.18l-.5.56l-.87.36s-1.4 1.28-.05 2.7c.78.82 1.71.32 3.25-.3c1.17-.47 5.77-3.23 5.87-4.1c0 0 .9-3.45.13-5.44c-.5-1.32-2.15-3.35-3.93-5.06z\" fill=\"#fac036\"/><path d=\"M15.93 108.32s-.63-.07-.74-.08c1.06 1.58 2.3 3.93 2.8 4.89c.8 1.54 1.33 3.05-.1 4.13c-.66.5-1.26.57-1.75.37c-.48-.39-.91-1.19-.91-1.19c-1.89-3.47-3.2-5.21-3.2-5.21c-.13-.15-.41-.63-.8-.87c-.5-.3-.35.23-.35.23c2.2 3.43 3.54 6.17 3.54 6.17c.57 1.04.47 1.78.31 2.19c-.19.5-1.28 1.2-1.28 1.2c-2.22 1.33-3.24-.44-3.24-.44s-1.3-1.63-3.48-5.7c0 0-.34-.56-.55-.17c0 0 .12.69.44 1.34c0 0 .99 2.36 2.92 5.08c.47 1.13-.09 1.96-.74 2.34c-.79.45-1.44.31-1.97-.05c-.49-.48-1.64-1.79-3.32-4.81c0 0-.33-.75-.49-.49c0 0-.17.2.29 1.36c0 0 .67 1.67 2.34 3.89c.62.86.55 1.28.3 1.54c-.56.56-1.49.69-2.18.36c.6.37 1.64.82 2.65.19c0 0 .65-.47.7-.97c1.1.61 2.62-.53 2.62-.53c.71-.55.9-1.16.88-1.69c1.46.87 3.33-.33 3.33-.33c1.64-.93 1.96-1.91 1.96-2.55c.85.53 1.9.13 1.9.13c1.85-.82 1.79-2.63 1.79-2.63c-.08-2.5-2.5-6.04-3.67-7.7z\" fill=\"#e48c15\"/><g><path d=\"M18.8 116.32c.01.15.01.3.01.45c0 4.12-1.99 7.45-4.43 7.45c-2.45 0-4.43-3.34-4.43-7.45c0-.15.01-.3.01-.45c-2.42 1.75-4.04 4.9-4.04 8.49v.65c0 1.41.97 2.55 2.16 2.55h12.6c1.19 0 2.16-1.14 2.16-2.55v-.65c0-3.6-1.62-6.74-4.04-8.49z\" fill=\"#e0e0e0\"/><path d=\"M14.38 124.22c9.04 0 4.43-3.34 4.43-7.45c0-.15-.01-.3-.01-.45c-1.29-.93-2.8-1.48-4.42-1.48s-3.13.55-4.42 1.48c-.01.15-.01.3-.01.45c0 4.12-4.65 7.45 4.43 7.45z\" fill=\"#bdbdbd\"/></g><g><path d=\"M9.68 121.37c0 .03-.01.05-.02.08c0-.03.01-.05.02-.08z\" fill=\"none\"/><path d=\"M7.33 122.77c-.05-.01-.09-.03-.13-.05c.04.02.08.03.13.05z\" fill=\"none\"/><path d=\"M5.96 124.01s.01-.01.01-.02l-.06.06c.02-.01.04-.02.05-.04z\" fill=\"none\"/><path d=\"M6.83 122.53l.06.03c-.02-.02-.05-.03-.08-.05c.01.01.02.01.02.02z\" fill=\"none\"/><path d=\"M5.27 124.44c-.04.01-.07.03-.11.04c.04-.02.08-.03.11-.04z\" fill=\"none\"/><path d=\"M8.27 122.79c-.05.01-.1.02-.16.03c.06-.01.11-.01.16-.03z\" fill=\"none\"/><path d=\"M9.04 122.41z\" fill=\"none\"/><path d=\"M9.44 121.97c-.02.03-.04.05-.06.08c.02-.03.04-.05.06-.08z\" fill=\"none\"/><path d=\"M7.78 122.85c-.05 0-.11-.01-.16-.02c.06.01.11.02.16.02z\" fill=\"none\"/><path d=\"M9.25 122.21c-.03.04-.07.07-.11.1c.04-.03.08-.06.11-.1z\" fill=\"none\"/><path d=\"M9.59 121.69c-.01.03-.03.05-.04.07c.01-.03.03-.05.04-.07z\" fill=\"none\"/><path d=\"M4.96 124.52c-.05.01-.1.01-.15.02c.05-.01.1-.01.15-.02z\" fill=\"none\"/><path d=\"M9.53 120.24s0-.01-.01-.01c.02.04.03.08.04.12c0-.04-.01-.07-.03-.11z\" fill=\"none\"/><path d=\"M9.66 120.63c.01.04.01.07.02.11c-.01-.04-.01-.07-.02-.11z\" fill=\"none\"/><path d=\"M4.19 124.51a1.17 1.17 0 0 1-.2-.05c.06.02.13.03.2.05z\" fill=\"none\"/><path d=\"M4.63 124.55c-.1 0-.21 0-.31-.02c.1.02.21.03.31.02z\" fill=\"none\"/><path d=\"M9.71 121.02c0 .03 0 .06-.01.09c0-.03.01-.06.01-.09z\" fill=\"none\"/><path d=\"M4.19 124.51l.13.03c.1.01.21.02.31.02c.06 0 .12-.01.18-.02c.05-.01.1-.01.15-.02c.07-.01.13-.03.2-.05c.04-.01.07-.02.11-.04c.24-.08.46-.21.64-.38l.06-.06c.24-.26.3-.68-.31-1.52c-1.68-2.22-2.34-3.89-2.34-3.89c-.46-1.17-.29-1.36-.29-1.36c.16-.26.49.49.49.49c1.67 3 2.81 4.31 3.3 4.8c.02.02.05.03.08.05c.1.06.2.12.3.16c.04.02.09.03.13.05c.1.03.2.05.3.07c.05.01.1.01.16.02c.11 0 .22-.01.33-.03c.05-.01.1-.01.16-.03c.17-.05.34-.11.53-.22c.08-.05.16-.1.24-.16c.04-.03.07-.07.11-.1c.04-.03.08-.07.11-.1c.05-.05.08-.11.13-.16c.02-.03.04-.05.06-.08c.04-.06.08-.14.11-.21c.01-.02.03-.05.04-.07c.03-.08.05-.16.07-.24c.01-.03.02-.05.02-.08c.02-.08.02-.17.02-.26c0-.03.01-.06.01-.09c0-.09-.02-.18-.03-.28c-.01-.04-.01-.07-.02-.11c-.02-.09-.06-.19-.09-.28c-.01-.04-.03-.08-.04-.12c-1.92-2.71-2.91-5.07-2.91-5.07c-.32-.66-.44-1.34-.44-1.34c.21-.39.55.17.55.17c2.18 4.07 3.48 5.7 3.48 5.7s1.02 1.77 3.24.44c0 0 1.1-.71 1.28-1.2c.16-.41.26-1.15-.31-2.19c0 0-1.34-2.74-3.54-6.17c0 0-.15-.54.35-.23c.39.24.67.72.8.87c0 0 1.3 1.74 3.2 5.21c0 0 .42.8.91 1.19c.48.2 1.09.13 1.75-.37c1.43-1.08.9-2.59.1-4.13c-.5-.96-1.74-3.31-2.8-4.89c.09.01.5.06.67.07c-.2-.04-.42-.07-.67-.08c-.14-.21-.28-.4-.41-.58c-.26-.35-.92-1.86-3.43-.49c-.81.44-1.09.84-.96 1.41c-.1.12-.28.26-.56.15c-.87-.97-1.95-1.18-3.2-.2c-1.42 1.11-1.42 1.9-1.16 2.69h-.01s-.06.55-.47.5c-.43-.37-.95-.37-1.76.22c-2.19 1.58-1.28 3.08-.92 3.96c-.05.08-.13.14-.27.13c-.28-.15-.65-.15-1.14.13c-1.16.66-.99 2.85-.66 3.57c.36.78 2.35 3.52 3.04 4.29c.16.17.35.3.56.39c.04.02.09.04.13.05c.06.04.13.05.2.07z\" fill=\"#fac036\"/><path d=\"M13.01 120.86l.5-.56c-.85.48-2.33.84-3.05-.18c-.06-.09-.12-.17-.18-.26l-.77.31c.01.02.01.04.02.06c0 0 0 .01.01.01c.02.04.02.07.04.11c.03.1.07.19.09.28c.01.04.01.07.02.11c.02.09.03.19.03.28c0 .03 0 .06-.01.09c0 .09-.01.18-.02.26c0 .03-.01.05-.02.08c-.02.08-.04.16-.07.24c-.01.03-.03.05-.04.07c-.03.07-.07.14-.11.21c-.02.03-.04.05-.06.08c-.04.06-.08.11-.13.16c-.03.04-.07.07-.11.1c-.04.03-.07.07-.11.1a2.134 2.134 0 0 1-.77.38c-.05.01-.1.02-.16.03c-.11.02-.23.03-.33.03c-.05 0-.11-.01-.16-.02c-.1-.01-.2-.04-.3-.07c-.05-.02-.09-.03-.13-.05c-.1-.04-.2-.1-.3-.16l-.06-.03l-.01-.01c-.35-.24-.65-.58-.9-.91l-.23.09c.04.04.08.07.11.1c1.13 1.04.75 1.54.26 2.12c-.03.04-.06.06-.08.09c0 0-.01.01-.01.02c-.02.01-.03.03-.05.04c-.19.17-.4.3-.64.38c-.04.01-.07.03-.11.04c-.07.02-.13.03-.2.05c-.05.01-.1.01-.15.02c-.06.01-.12.01-.18.02c-.1 0-.21 0-.31-.02c-.05-.01-.09-.02-.13-.03a1.17 1.17 0 0 1-.2-.05c-.05-.02-.09-.03-.13-.05c-.02-.01-.05-.02-.07-.03c.6.37 1.64.82 2.65.19c0 0 .65-.47.7-.97c1.1.61 2.62-.53 2.62-.53c.71-.55.9-1.16.88-1.69c.36.22.75.3 1.14.31c.17-.29.36-.46.36-.46l.86-.38z\" fill=\"#e48c15\"/><path d=\"M15.93 108.32s-.03 0-.07-.01c.02.01.05.01.07.01c0 .01 0 0 0 0z\" fill=\"#e48c15\"/><path d=\"M9.68 120.74c.02.09.03.19.03.28c0-.09-.02-.19-.03-.28z\" fill=\"#e48c15\"/><path d=\"M9.7 121.11c0 .09-.01.18-.02.26c.02-.08.02-.17.02-.26z\" fill=\"#e48c15\"/><path d=\"M9.38 122.05c-.04.06-.08.11-.13.16c.05-.05.09-.11.13-.16z\" fill=\"#e48c15\"/><path d=\"M9.55 121.76c-.03.07-.07.14-.11.21c.04-.07.08-.14.11-.21z\" fill=\"#e48c15\"/><path d=\"M9.57 120.35c.03.1.07.19.09.28c-.02-.09-.05-.18-.09-.28z\" fill=\"#e48c15\"/><path d=\"M9.66 121.45z\" fill=\"#e48c15\"/><path d=\"M5.27 124.44a1.876 1.876 0 0 1 0 0z\" fill=\"#e48c15\"/><path d=\"M4.81 124.54c-.06.01-.12.01-.18.02c.06-.01.12-.02.18-.02z\" fill=\"#e48c15\"/><path d=\"M4.32 124.53c-.05-.01-.09-.02-.13-.03c.04.02.08.03.13.03z\" fill=\"#e48c15\"/><path d=\"M3.03 117.22s-.17.2.29 1.36c0 0 .67 1.67 2.34 3.89c.61.85.55 1.26.31 1.52c.03-.03.06-.05.08-.07c.49-.58.87-1.08-.26-2.12c-.03-.03-.07-.07-.11-.1l.23-.09c.25.33.55.66.9.91c-.5-.49-1.64-1.8-3.3-4.8c0-.01-.33-.76-.48-.5z\" fill=\"#e48c15\"/><path d=\"M13.97 121.04c1.64-.93 1.96-1.91 1.96-2.55c.85.53 1.9.13 1.9.13c1.85-.82 1.79-2.63 1.79-2.63c-.09-2.47-2.51-6-3.69-7.66c-.03-.01-.05-.01-.08-.02c-.16-.02-.58-.06-.67-.07c1.06 1.58 2.3 3.93 2.8 4.89c.8 1.54 1.33 3.05-.1 4.13c-.66.5-1.26.57-1.75.37c-.48-.39-.91-1.19-.91-1.19c-1.89-3.47-3.2-5.21-3.2-5.21c-.13-.15-.41-.63-.8-.87c-.5-.3-.35.23-.35.23c2.2 3.43 3.54 6.17 3.54 6.17c.57 1.04.47 1.78.31 2.19c-.19.5-1.28 1.2-1.28 1.2c-2.22 1.33-3.24-.44-3.24-.44s-1.3-1.63-3.48-5.7c0 0-.34-.56-.55-.17c0 0 .12.69.44 1.34c0 0 .99 2.36 2.91 5.07c-.01-.02-.01-.04-.02-.06l.77-.31c.06.09.12.17.18.26c.71 1.02 2.2.66 3.05.18l-.5.56l-.87.36s-.19.17-.36.46c1.14.02 2.2-.66 2.2-.66z\" fill=\"#e48c15\"/><path d=\"M9.14 122.31c-.04.03-.07.07-.11.1c.04-.03.08-.06.11-.1z\" fill=\"#e48c15\"/><path d=\"M3.98 124.45c-.05-.02-.09-.03-.13-.05c.04.02.09.04.13.05z\" fill=\"#e48c15\"/><path d=\"M8.8 122.58c-.18.11-.36.17-.53.22c.17-.05.34-.12.53-.22z\" fill=\"#e48c15\"/><path d=\"M8.12 122.82z\" fill=\"#e48c15\"/><path d=\"M7.62 122.84c-.1-.01-.2-.04-.3-.07c.1.03.2.05.3.07z\" fill=\"#e48c15\"/><path d=\"M7.19 122.72c-.1-.04-.2-.1-.3-.16c.1.06.2.12.3.16z\" fill=\"#e48c15\"/><path d=\"M5.16 124.47c-.07.02-.13.03-.2.05c.07-.01.14-.03.2-.05z\" fill=\"#e48c15\"/></g><g><path d=\"M118.32 121.37c0 .03.01.05.02.08c0-.03-.01-.05-.02-.08z\" fill=\"none\"/><path d=\"M120.67 122.77c.05-.01.09-.03.13-.05c-.04.02-.08.03-.13.05z\" fill=\"none\"/><path d=\"M122.04 124.01s-.01-.01-.01-.02l.06.06c-.02-.01-.04-.02-.05-.04z\" fill=\"none\"/><path d=\"M121.17 122.53l-.06.03c.02-.02.05-.03.08-.05c-.01.01-.02.01-.02.02z\" fill=\"none\"/><path d=\"M122.73 124.44c.04.01.07.03.11.04c-.04-.02-.08-.03-.11-.04z\" fill=\"none\"/><path d=\"M119.73 122.79c.05.01.1.02.16.03c-.06-.01-.11-.01-.16-.03z\" fill=\"none\"/><path d=\"M118.96 122.41c.08.06.16.12.24.16c-.08-.04-.16-.1-.24-.16z\" fill=\"none\"/><path d=\"M118.56 121.97c.02.03.04.05.06.08c-.02-.03-.04-.05-.06-.08z\" fill=\"none\"/><path d=\"M120.22 122.85c.05 0 .11-.01.16-.02c-.06.01-.11.02-.16.02z\" fill=\"none\"/><path d=\"M118.75 122.21z\" fill=\"none\"/><path d=\"M118.41 121.69c.01.03.03.05.04.07c-.01-.03-.03-.05-.04-.07z\" fill=\"none\"/><path d=\"M123.04 124.52c.05.01.1.01.15.02c-.05-.01-.1-.01-.15-.02z\" fill=\"none\"/><path d=\"M118.47 120.24s0-.01.01-.01c-.02.04-.03.08-.04.12c0-.04.01-.07.03-.11z\" fill=\"none\"/><path d=\"M118.34 120.63c-.01.04-.01.07-.02.11c.01-.04.01-.07.02-.11z\" fill=\"none\"/><path d=\"M123.81 124.51c.07-.01.14-.03.2-.05c-.06.02-.13.03-.2.05z\" fill=\"none\"/><path d=\"M123.37 124.55c.1 0 .21 0 .31-.02c-.1.02-.21.03-.31.02z\" fill=\"none\"/><path d=\"M118.29 121.02c0 .03 0 .06.01.09c0-.03-.01-.06-.01-.09z\" fill=\"none\"/><path d=\"M123.81 124.51l-.13.03c-.1.01-.21.02-.31.02c-.06 0-.12-.01-.18-.02c-.05-.01-.1-.01-.15-.02c-.07-.01-.13-.03-.2-.05a.487.487 0 0 1-.11-.04a1.73 1.73 0 0 1-.64-.38l-.06-.06c-.24-.26-.3-.68.31-1.52c1.68-2.22 2.34-3.89 2.34-3.89c.46-1.17.29-1.36.29-1.36c-.16-.26-.49.49-.49.49c-1.67 3-2.81 4.31-3.3 4.8c-.02.02-.05.03-.08.05c-.1.06-.2.12-.3.16c-.04.02-.09.03-.13.05c-.1.03-.2.05-.3.07c-.05.01-.1.01-.16.02c-.11 0-.22-.01-.33-.03c-.05-.01-.1-.01-.16-.03c-.17-.05-.34-.11-.53-.22c-.08-.05-.16-.1-.24-.16c-.04-.03-.07-.07-.11-.1c-.04-.03-.08-.07-.11-.1c-.05-.05-.08-.11-.13-.16c-.02-.03-.04-.05-.06-.08a1.39 1.39 0 0 1-.11-.21c-.01-.02-.03-.05-.04-.07c-.03-.08-.05-.16-.07-.24c-.01-.03-.02-.05-.02-.08c-.02-.08-.02-.17-.02-.26c0-.03-.01-.06-.01-.09c0-.09.02-.18.03-.28c.01-.04.01-.07.02-.11c.02-.09.06-.19.09-.28c.01-.04.03-.08.04-.12c1.92-2.71 2.91-5.07 2.91-5.07c.32-.66.44-1.34.44-1.34c-.21-.39-.55.17-.55.17c-2.18 4.07-3.48 5.7-3.48 5.7s-1.02 1.77-3.24.44c0 0-1.1-.71-1.28-1.2c-.16-.41-.26-1.15.31-2.19c0 0 1.34-2.74 3.54-6.17c0 0 .15-.54-.35-.23c-.39.24-.67.72-.8.87c0 0-1.3 1.74-3.2 5.21c0 0-.42.8-.91 1.19c-.48.2-1.09.13-1.75-.37c-1.43-1.08-.9-2.59-.1-4.13c.5-.96 1.74-3.31 2.8-4.89c-.09.01-.5.06-.67.07c.2-.04.42-.07.67-.08c.14-.21.28-.4.41-.58c.26-.35.92-1.86 3.43-.49c.81.44 1.09.84.96 1.41c.1.12.28.26.56.15c.87-.97 1.95-1.18 3.2-.2c1.42 1.11 1.42 1.9 1.16 2.69h.01s.06.55.47.5c.43-.37.95-.37 1.76.22c2.19 1.58 1.28 3.08.92 3.96c.05.08.13.14.27.13c.28-.15.65-.15 1.14.13c1.16.66.99 2.85.66 3.57c-.36.78-2.35 3.52-3.04 4.29c-.16.17-.35.3-.56.39c-.04.02-.09.04-.13.05c-.06.04-.13.05-.2.07z\" fill=\"#fac036\"/><path d=\"M114.99 120.86l-.5-.56c.85.48 2.33.84 3.05-.18c.06-.09.12-.17.18-.26l.77.31c-.01.02-.01.04-.02.06c0 0 0 .01-.01.01c-.02.04-.02.07-.04.11c-.03.1-.07.19-.09.28c-.01.04-.01.07-.02.11c-.02.09-.03.19-.03.28c0 .03 0 .06.01.09c0 .09.01.18.02.26c0 .03.01.05.02.08c.02.08.04.16.07.24c.01.03.03.05.04.07c.03.07.07.14.11.21c.02.03.04.05.06.08c.04.06.08.11.13.16c.03.04.07.07.11.1c.04.03.07.07.11.1a2.134 2.134 0 0 0 .77.38c.05.01.1.02.16.03c.11.02.23.03.33.03c.05 0 .11-.01.16-.02c.1-.01.2-.04.3-.07c.05-.02.09-.03.13-.05c.1-.04.2-.1.3-.16l.06-.03l.01-.01c.35-.24.65-.58.9-.91l.23.09c-.04.04-.08.07-.11.1c-1.13 1.04-.75 1.54-.26 2.12c.02.03.06.05.08.07c0 0 .01.01.01.02c.02.01.03.03.05.04c.19.17.4.3.64.38c.04.01.07.03.11.04c.07.02.13.03.2.05c.05.01.1.01.15.02c.06.01.12.01.18.02c.1 0 .21 0 .31-.02c.05-.01.09-.02.13-.03c.07-.01.14-.03.2-.05c.05-.02.09-.03.13-.05c.02-.01.05-.02.07-.03c-.6.37-1.64.82-2.65.19c0 0-.65-.47-.7-.97c-1.1.61-2.62-.53-2.62-.53c-.71-.55-.9-1.16-.88-1.69c-.36.22-.75.3-1.14.31c-.17-.29-.36-.46-.36-.46l-.86-.36z\" fill=\"#e48c15\"/><path d=\"M112.07 108.32s.03 0 .07-.01c-.02.01-.05.01-.07.01c0 .01 0 0 0 0z\" fill=\"#e48c15\"/><path d=\"M118.32 120.74c-.02.09-.03.19-.03.28c0-.09.02-.19.03-.28z\" fill=\"#e48c15\"/><path d=\"M118.3 121.11c0 .09.01.18.02.26c-.02-.08-.02-.17-.02-.26z\" fill=\"#e48c15\"/><path d=\"M118.62 122.05c.04.06.08.11.13.16c-.05-.05-.09-.11-.13-.16z\" fill=\"#e48c15\"/><path d=\"M118.45 121.76z\" fill=\"#e48c15\"/><path d=\"M118.43 120.35c-.03.1-.07.19-.09.28c.02-.09.05-.18.09-.28z\" fill=\"#e48c15\"/><path d=\"M118.34 121.45c.02.08.04.16.07.24c-.03-.08-.05-.16-.07-.24z\" fill=\"#e48c15\"/><path d=\"M122.73 124.44a1.876 1.876 0 0 0 0 0z\" fill=\"#e48c15\"/><path d=\"M123.19 124.54c.06.01.12.01.18.02c-.06-.01-.12-.02-.18-.02z\" fill=\"#e48c15\"/><path d=\"M123.68 124.53c.05-.01.09-.02.13-.03c-.04.02-.08.03-.13.03z\" fill=\"#e48c15\"/><path d=\"M124.97 117.22s.17.2-.29 1.36c0 0-.67 1.67-2.34 3.89c-.61.85-.55 1.26-.31 1.52c-.03-.03-.06-.05-.08-.07c-.49-.58-.87-1.08.26-2.12c.03-.03.07-.07.11-.1l-.23-.09c-.25.33-.55.66-.9.91c.5-.49 1.64-1.8 3.3-4.8c0-.01.33-.76.48-.5z\" fill=\"#e48c15\"/><path d=\"M114.03 121.04c-1.64-.93-1.96-1.91-1.96-2.55c-.85.53-1.9.13-1.9.13c-1.85-.82-1.79-2.63-1.79-2.63c.09-2.47 2.51-6 3.69-7.66c.03-.01.05-.01.08-.02c.16-.02.58-.06.67-.07c-1.06 1.58-2.3 3.93-2.8 4.89c-.8 1.54-1.33 3.05.1 4.13c.66.5 1.26.57 1.75.37c.48-.39.91-1.19.91-1.19c1.89-3.47 3.2-5.21 3.2-5.21c.13-.15.41-.63.8-.87c.5-.3.35.23.35.23c-2.2 3.43-3.54 6.17-3.54 6.17c-.57 1.04-.47 1.78-.31 2.19c.19.5 1.28 1.2 1.28 1.2c2.22 1.33 3.24-.44 3.24-.44s1.3-1.63 3.48-5.7c0 0 .34-.56.55-.17c0 0-.12.69-.44 1.34c0 0-.99 2.36-2.91 5.07c.01-.02.01-.04.02-.06l-.77-.31c-.06.09-.12.17-.18.26c-.71 1.02-2.2.66-3.05.18l.5.56l.87.36s.19.17.36.46c-1.14.02-2.2-.66-2.2-.66z\" fill=\"#e48c15\"/><path d=\"M118.86 122.31c.04.03.07.07.11.1c-.04-.03-.08-.06-.11-.1z\" fill=\"#e48c15\"/><path d=\"M124.02 124.45c.05-.02.09-.03.13-.05c-.04.02-.09.04-.13.05z\" fill=\"#e48c15\"/><path d=\"M119.2 122.58c.18.11.36.17.53.22a2.85 2.85 0 0 1-.53-.22z\" fill=\"#e48c15\"/><path d=\"M119.88 122.82z\" fill=\"#e48c15\"/><path d=\"M120.38 122.84c.1-.01.2-.04.3-.07c-.1.03-.2.05-.3.07z\" fill=\"#e48c15\"/><path d=\"M120.81 122.72c.1-.04.2-.1.3-.16c-.1.06-.2.12-.3.16z\" fill=\"#e48c15\"/><path d=\"M122.84 124.47c.07.02.13.03.2.05a1.17 1.17 0 0 1-.2-.05z\" fill=\"#e48c15\"/></g><g><path d=\"M104.87 74.71H23.13c-3.58 0-6.5 2.93-6.5 6.5v51.32c0 3.58 2.93 6.5 6.5 6.5h81.75a6.5 6.5 0 0 0 6.5-6.5V81.21c0-3.59-2.91-6.5-6.51-6.5z\" fill=\"#4dd0e1\"/><path d=\"M78.88 125.35c-1.43-4.91-2.03-13.09-2.28-18.81a6.757 6.757 0 0 0-6.75-6.46H60.91a6.75 6.75 0 0 0-6.75 6.46c-.25 5.72-.85 13.91-2.28 18.81c-2.37 8.13-6.08 14.73.36 14.73h26.28c6.44 0 2.73-6.6.36-14.73z\" fill=\"#00acc1\"/></g>"}},"width":128,"height":128});
